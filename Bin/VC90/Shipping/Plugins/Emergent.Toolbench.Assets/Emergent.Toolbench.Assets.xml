<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emergent.Toolbench.Assets</name>
    </assembly>
    <members>
        <member name="M:Emergent.Toolbench.Assets.AssetSettingsHelper.GetTypeMapFromSettings">
            <summary>
            Helper function to gets the type map from settings.
            </summary>
            <returns>A map of settings</returns>
        </member>
        <member name="M:Emergent.Toolbench.Assets.AssetSettingsHelper.SetTypeMapInSettings(System.Collections.Generic.Dictionary{System.String,Emergent.Toolbench.Assets.AssetSettingsHelper.TypeAssociation})">
            <summary>
            Helper function to sets the type map in settings.
            </summary>
            <param name="map">The map.</param>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Types.Asset.OnAssetValueChanged(System.Object,System.EventArgs)">
            <summary>
            Whenever the value of the asset changes, the "friendly" properties of this class
            need to be re-evaluated since those properties are dependent on the actual value
            property of this class. This handler raises property change events for all the 
            friendly properties.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Types.Asset.RequestAssetInfoUpdate">
            <summary>
            Requests an update to the asset information.
            </summary>
            <returns><c>true</c> if a request has been sent, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Types.Asset.GetAnnotationAspect">
            <summary>
            Convenience function for returning the AssetAnnotationAspect
            </summary>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Types.Asset.MarkFriendlyAsChanged">
            <summary>
            Called if the "value" of the asset changes (StringValue)
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Types.Asset.MarkPropertyDataAsChanged">
            <summary>
            Method to force the value property changed event notification to be raised. This may
            be needed even if the property has not changed for purposes of restriction validation.
            In other words, restriction validation is based on the changing of StringValue, however,
            that value may not change even as FriendlyTag information does change which is what
            is really used for restriction validation.
            Also, this method is used to force the friendly properties to have their property
            changed events raised as well. This is desired when the aspect's database has changed.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Types.Asset.StringValue">
            <summary>
            Return the string value
            </summary>
            <returns>The actual string in the DataValue</returns>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Types.Asset.FriendlyName">
            <summary>
            Annotation data about the last known name. If no last known data can be found,
            the property will return the string of the ID, but, it will also send off a 
            request for new data about the asset.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Types.Asset.FriendlyPath">
            <summary>
            Annotation data about the last known path. If no last known data can be found,
            the property will return the string "Unknown Source".
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Types.Asset.FriendlyTags">
            <summary>
            Annotation data about the last known path. If now last known data can be found,
            the property will return the string "Unknown Source".
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.Assets.Plugin">
            <summary>
            Implements the plugin interface for the Assets plugin, which
            allows the service to initialize.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Plugin.Start">
            <summary>
            Initializes the plugin
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Types.AttachedNifAsset.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.Assets.Types.AttachedNifAsset"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Types.AttachedNifAsset.ToXml">
            <summary>
            Implement to return the instance serialized as an XStreamingElement.
            </summary>
            <returns>The serialized instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Types.AttachedNifAsset.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Implement to initialize the instance from the date in the XElement.
            </summary>
            <param name="element">The XElement containing the data to load from.</param>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Types.AttachedNifAsset.AttachPoint">
            <summary>
            Gets or sets the name of the attachment point.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Types.AttachedNifAsset.NifAsset">
            <summary>
            Gets or sets the name of the attached Nif asset.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Types.AttachedNifAsset.Translation">
            <summary>
            Gets or sets the translation to apply to the attached object.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Types.AttachedNifAsset.Rotation">
            <summary>
            Gets or sets the rotation to apply to the attached object.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Types.AttachedNifAsset.Scale">
            <summary>
            Gets or sets the scale to apply to the attached object.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Types.AttachedNifAsset.StringValue">
            <summary>
            Gets or sets the string value.
            </summary>
            <value>The string value.</value>
        </member>
        <member name="T:Emergent.Toolbench.Assets.Editors.AssetEditor">
            <summary>
            Represents an editor for asset type.
            </summary>
            <summary>
            Represents an editor for filename type.
            </summary>
            <summary>
            AssetEditor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Editors.AssetEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.Assets.Editors.AssetEditor"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Editors.AssetEditor.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Override of OnPropertyChange to attach the new property to an AssetUpdated event
            handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Editors.AssetEditor.OnFileSelect(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Provides a file select dialog that translates the results into asset ids
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Editors.AssetEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Editors.AssetEditor.Filter">
            <summary>
            Gets the filter of the open file dialog.
            </summary>
            <value>The filter.</value>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Editors.AssetEditor.Title">
            <summary>
            Gets the title of the open file dialog.
            </summary>
            <value>The title.</value>
        </member>
        <member name="T:Emergent.Toolbench.Assets.Editors.FileTranslateWaitDialog">
            <summary>
            Interaction logic for FileTranslateWaitDialog.xaml
            </summary>
            <summary>
            FileTranslateWaitDialog
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Editors.FileTranslateWaitDialog.OnDialogLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Initializes the dialog and sets up the event listeners. Also makes the initial 
            request for the first asset. The request is made by a canonical-path based query.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Editors.FileTranslateWaitDialog.DisableEventHandlers">
            <summary>
            Removes event handlers. This function is called prior to any "Close" to ensure there is
            not a timing issue. An OnDialogUnloaded had been previously used, however,
            occasionally it was not called as promptly as expected and would cause timing issues.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Editors.FileTranslateWaitDialog.OnCancel(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Allows canceling of an asset retrieval request. This is useful if for some reason
            the Asset controller is not responding.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Editors.FileTranslateWaitDialog.OnBrowseInfoUpdated">
            <summary>
            Handler for when browse info has been updated. When the browse info has been made 
            available, this function is called and the asset identifier is stored. Afterwards,
            the next file to be translated to an id is requested.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Editors.FileTranslateWaitDialog.AddFile(System.String)">
            <summary>
            Add an asset to be resolved into it's asset identification information. 
            The parameter may either be an asset identifier in the "urn:" form, or an absolute 
            path to the asset. If using a URN, make sure the asset being referenced may only 
            resolve to one file.
            </summary>
            <param name="absFileName"></param>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Editors.FileTranslateWaitDialog.GetCanonicalURL(System.String)">
            <summary>
            This function takes the absolute path filename and converts it into a canonical
            path based URI query. Such a query might look something like:
                  urn:/Graphics/:Door:gamebryo-scenegraph
            The above syntax says to search only in the Graphics directory, for an asset having
            the name Door and having the tag gamebryo-scenegraph.
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Editors.FileTranslateWaitDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Editors.FileTranslateWaitDialog.TagRestriction">
            <summary>
            Allows setting and retrieving tag restrictions that are delimited by ":". The set
            for this property will strip off "urn:" since it may be a common error to add that at
            the front of the tag restrictions.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.Assets.Editors.AttachedNifAssetEditor">
            <summary>
            Represents an editor for attachment of a Nif asset.
            </summary>
            <summary>
            AttachedNifAssetEditor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Editors.AttachedNifAssetEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.Assets.Editors.AttachedNifAssetEditor"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Assets.Editors.AttachedNifAssetEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.Assets.TagRestriction">
            <summary>
            Defines a restriction that provides a list of acceptable values.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Assets.TagRestriction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.EnumerationRestriction"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Assets.TagRestriction.IsValid(Emergent.Toolbench.TypeService.Types.DataValue)">
            <summary>
            Determines whether the specified value is valid.
            </summary>
            <param name="value">The value.</param>
            <returns>
            A collection of error message or empty collection if valid.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.Assets.TagRestriction.ToXml">
            <summary>
            Implement to return the instance serialized as an XStreamingElement.
            </summary>
            <returns>The serialized instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.Assets.TagRestriction.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Implement to initialize the instance from the date in the XElement.
            </summary>
            <param name="element">The XElement containing the data to load from.</param>
        </member>
        <member name="P:Emergent.Toolbench.Assets.TagRestriction.Tags">
            <summary>
            Gets or sets the Tags restriction
            </summary>
            <value>The Tags Restriction.</value>
        </member>
        <member name="P:Emergent.Toolbench.Assets.TagRestriction.XmlElementName">
            <summary>
            Gets the name of the XML element.
            </summary>
            <value>The name of the XML element.</value>
        </member>
        <member name="T:Emergent.Toolbench.Assets.AssetServiceImpl">
            <summary>
            Implementation of the AssetService
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.Assets.IAssetService">
            <summary>
            Interface that provides access to the AssetService
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Assets.AssetServiceImpl.#ctor">
            <summary>
            Constructs the AssetService implementation.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Assets.AssetServiceImpl.Initialize">
            <summary>
            Initializes the AssetService 
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Assets.AssetServiceImpl.Dispose">
            <summary>
            Disposes the object
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Assets.AssetServiceImpl.Name">
            <summary>
            Gets the name of this service. Services must have unique names.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.Assets.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Properties.Resources.AssetEditor_Title">
            <summary>
              Looks up a localized string similar to Browse for Asset.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Properties.Resources.Error">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Properties.Resources.Error_FileNotUnderAssetWebRoot">
            <summary>
              Looks up a localized string similar to Aborting selection as file was not located under the asset-web root: {0}.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Assets.Properties.Resources.InvalidPreferenceSettings">
            <summary>
              Looks up a localized string similar to Invalid Model-Property association in user settings..
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.Assets.OpenAssetDialog">
            <summary>
            Helper class for displaying an open asset dialog.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Assets.OpenAssetDialog.Show(System.String,System.String,System.Int32,System.String@)">
            <summary>
            Displays a file open dialog box who's starting point is in the current asset web root.
            The resulting file path chosen also verified to be in the asset web.
            </summary>
            <param name="title">Text displayed in the file open dialog title bar.</param>
            <param name="filterText">List of strings used to populate the dialog's filter list. 
                These strings should be asset web file type tags.
            </param>
            <param name="filterIndex">Filter index to initially set on the dialog box.</param>
            <param name="fullFilePath">Set to the full path of the chosen file or null if the 
                operation fails.
             </param>
            <returns>
                True if a file was found and is a valid asset web file, false otherwise.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.Assets.OpenAssetDialog.Show(System.String,System.String,System.Int32,System.String,System.String@)">
            <summary>
            Displays a file open dialog box who's starting point is in the current asset web root.
            The resulting file path chosen also verified to be in the asset web.
            </summary>
            <param name="title">Text displayed in the file open dialog title bar.</param>
            <param name="filterText">List of strings used to populate the dialog's filter list. 
                These strings should be asset web file type tags.
            </param>
            <param name="filterIndex">Filter index to initially set on the dialog box.</param>
            <param name="initialDirectory">The initial directory to open the window in.</param>
            <param name="fullFilePath">Set to the full path of the chosen file or null if the 
                operation fails.
             </param>
            <returns>
                True if a file was found and is a valid asset web file, false otherwise.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.Assets.AssetAnnotationAspect.CanConnectContent(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Returns true if the content is a GameSolutionDocument
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.Assets.AssetAnnotationAspect.OnContentConnected">
            <summary>
            Called upon connection of the aspect to the specified content
            </summary>
            <param name="content">The content to connect to.</param>
            <returns>True if connected, false otherwise.</returns>
        </member>
        <member name="M:Emergent.Toolbench.Assets.AssetAnnotationAspect.OnContentDisconnected">
            <summary>
            Called just before the aspect is removed from the content it is
            currently attached to.
            </summary>        
        </member>
        <member name="M:Emergent.Toolbench.Assets.AssetAnnotationAspect.ClearAllAnnotations">
            <summary>
            Clears out all current annotations and re-requests the info from the asset controller.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Assets.AssetAnnotationAspect.RetrieveName(System.String)">
            <summary>
            Retrieves the friendly name from the cache if there is an entry for the given id.
            If no entry exists, returns the id that was passed in.
            </summary>
            <param name="assetIDKey"></param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.Assets.AssetAnnotationAspect.RetrievePath(System.String)">
            <summary>
            Retrieves the friendly path from the cache if there is an entry for the given id.
            If no entry exists, returns the id that was passed in.
            </summary>
            <param name="assetIDKey"></param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.Assets.AssetAnnotationAspect.RetrieveTagset(System.String)">
            <summary>
            
            </summary>
            <param name="assetIDKey"></param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.Assets.AssetAnnotationAspect.RequestAssetInfoUpdate(System.String)">
            <summary>
            Makes a call to the asset-web to update data concerning the given key.
            </summary>
            <param name="assetIDKey"></param>
        </member>
        <member name="M:Emergent.Toolbench.Assets.AssetAnnotationAspect.OnBrowseInfoUpdated">
            <summary>
            Called when new browse info is available. Raises an annotation Handled event.
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
