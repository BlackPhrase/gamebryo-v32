<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emergent.Toolbench.ScriptDebugger</name>
    </assembly>
    <members>
        <member name="T:Emergent.Toolbench.ScriptDebugger.EntityEntry">
            <summary>
            Store information about entity
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.EntityEntry.#ctor(System.UInt64,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.ScriptDebugger.EntityEntry"/> class.
            </summary>
            <param name="entityID">The entity ID.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.EntityEntry.EntityID">
            <summary>
            Gets or sets the entity ID.
            </summary>
            <value>The entity ID.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.EntityEntry.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.CallStackEntry">
            <summary>
            Stores one level of call stack information.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.CallStackEntry.#ctor(System.String,System.String,System.Int32)">
            <summary>
            The CallStackEntry constructor.
            </summary>
            <param name="context">Context of the call stack level.</param>
            <param name="file">Script filename of the call stack level.</param>
            <param name="line">Script line number of the call stack level.</param>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.CallStackEntry.Context">
            <summary>
            The functional context of the call stack level.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.CallStackEntry.File">
            <summary>
            The script filename of the call stack level.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.CallStackEntry.Line">
            <summary>
            The script line number of the call stack level.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.VariableEntry">
            <summary>
            Base class for variable entry
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.VariableEntry.RaisePropertyChanged(System.String)">
            <summary>
            Raises the property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Emergent.Toolbench.ScriptDebugger.VariableEntry.#ctor(System.String,System.String,System.String)" -->
        <member name="P:Emergent.Toolbench.ScriptDebugger.VariableEntry.Name">
            <summary>
            The script expression to be watched.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.VariableEntry.Type">
            <summary>
            The type of the evaluated expression.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.VariableEntry.Value">
            <summary>
            The value of the evaluated expression.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.WatchEntry">
            <summary>
            Stores information about a script expression to be evaluated.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.WatchEntry.#ctor(System.String)">
            <summary>
            The WatchEntry constructor.
            </summary>
            <param name="expression">Script expression to be watched.</param>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.WatchEntry.Expression">
            <summary>
            The script expression to be watched.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.BreakpointEntry">
            <summary>
            Stores information about a script breakpoint.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.BreakpointEntry.#ctor(System.String,System.Int32,System.String,System.Guid)">
            <summary>
            The BreakpointEntry constructor.
            </summary>
            <param name="file">Script filename of the breakpoint.</param>
            <param name="line">Script line number of the breakpoint.</param>
            <param name="condition">Optional condition to evaluate.</param>
            <param name="id">Unique ID of the breakpoint.</param>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.BreakpointEntry.File">
            <summary>
            The script filename of the breakpoint.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.BreakpointEntry.Line">
            <summary>
            The script line number of the breakpoint.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.BreakpointEntry.Condition">
            <summary>
            An optional expression that must evaluate to true for the breakpoint to fire.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.BreakpointEntry.ID">
            <summary>
            The unique ID of the breakpoint.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.ExecutionResultEventArgs">
            <summary>
            Event arguments class for tracking execution results.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.ExecutionResultEventArgs.#ctor(System.Boolean,System.String,System.String)">
            <summary>
            Constructor for ExecutionResultEventArgs.
            </summary>
            <param name="success">Flag indicating success or failure.</param>
            <param name="message">Text describing the result.</param>
            <param name="sender">Sender of the execution request.</param>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.ExecutionResultEventArgs.Success">
            <summary>
            Gets a value indicating whether the execution request was successful.
            </summary>
            <value><c>true</c> on success; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.ExecutionResultEventArgs.Message">
            <summary>
            Gets the execution result message.
            </summary>
            <value>The execution result message.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.ExecutionResultEventArgs.Sender">
            <summary>
            Gets the sender of the execution request.
            </summary>
            <value>The sender of the execution request.</value>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.ExecutionResultEventHandler">
            <summary>
            A delegate for responding to execution results.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.IScriptDebuggerService">
            <summary>
            Interface for querying the ScriptDebuggerService.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.IScriptDebuggerService.ResetWatchData">
            <summary>
            Clears out the last results of watch expressions.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.IScriptDebuggerService.RaiseExecutionResultReceived(System.Boolean,System.String,System.String)">
            <summary>
            Raises an event indicating an execution result has arrived from the connected game.
            </summary>
            <param name="success">Flag indicating success or failure.</param>
            <param name="message">The text execution result.</param>
            <param name="sender">Sender of the execution request.</param>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.IScriptDebuggerService.CallStack">
            <summary>
            The current call stack representing the state of script execution.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.IScriptDebuggerService.Locals">
            <summary>
            The state of all local variables at the current point of script execution.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.IScriptDebuggerService.Watches">
            <summary>
            The state of user watch expressions for script debugging.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.IScriptDebuggerService.AutoEntityProperties">
            <summary>
            Gets the state of all properties of the executing entity at the current point of script
            execution.
            </summary>
            <value>The auto entity properties.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.IScriptDebuggerService.WatchEntityProperties">
            <summary>
            Gets the state of all properties of the watched entity at the current point of script
            execution.
            </summary>
            <value>The watch entity properties.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.IScriptDebuggerService.Breakpoints">
            <summary>
            Records of all breakpoints currently active in the script debugger.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.IScriptDebuggerService.AutoEntity">
            <summary>
            Gets the auto entity data.
            </summary>
            <value>The auto entity data.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.IScriptDebuggerService.WatchEntity">
            <summary>
            Gets the watch entity data.
            </summary>
            <value>The watch entity data.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.IScriptDebuggerService.DebuggingState">
            <summary>
            Gets or sets a value indicating whether debugging is currently active or not.
            </summary>
            <value><c>true</c> if debugging is currently active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.IScriptDebuggerService.AtBreak">
            <summary>
            Indicates whether behavior execution is at a break.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.ScriptDebugger.IScriptDebuggerService.ExecutionResultReceived">
            <summary>
            Event indicating an execution result has arrived.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.ScriptDebugger.IScriptDebuggerService.DebuggingStateChanged">
            <summary>
            Occurs when debugging is started or stopped. See property DebuggingState
            for the current state.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.ScriptDebugger.IScriptDebuggerService.AtBreakChanged">
            <summary>
            Event indicating when behavior execution breaks and resumes.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.Plugin">
            <summary>
            Handles startup for the script debugger.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.Plugin.Start">
            <summary>
            Launches the ScriptDebuggerService.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService">
            <summary>
            Manages the tool-side state of the script debugger.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.Initialize">
            <summary>
            Allows a service to perform initialization code.
            </summary>
            <exception cref="T:Emergent.Toolbench.PlatformException">Thrown if a catastrophic error
            occurs during initialization.
            </exception>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.ResetWatchData">
            <summary>
            Clear out the last results of watch expressions.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.RaiseExecutionResultReceived(System.Boolean,System.String,System.String)">
            <summary>
            Raises an event indicating an execution result has arrived from the connected game.
            </summary>
            <param name="success">Flag indicating success or failure.</param>
            <param name="message">The text execution result.</param>
            <param name="sender">Sender of the execution request.</param>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.Name">
            <summary>
            Accesses the name of the service.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.CallStack">
            <summary>
            The current call stack representing the state of script execution.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.Locals">
            <summary>
            The state of all local variables at the current point of script execution.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.Watches">
            <summary>
            The state of user watch expressions for script debugging.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.AutoEntityProperties">
            <summary>
            Gets the state of all properties of the executing entity at the current point of script
            execution.
            </summary>
            <value>The auto entity properties.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.WatchEntityProperties">
            <summary>
            Gets the state of all properties of the watched entity at the current point of script
            execution.
            </summary>
            <value>The watch entity properties.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.AutoEntity">
            <summary>
            Gets the auto entity data.
            </summary>
            <value>The auto entity data.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.WatchEntity">
            <summary>
            Gets the watch entity data.
            </summary>
            <value>The watch entity data.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.Breakpoints">
            <summary>
            Records of all breakpoints currently active in the script debugger.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.DebuggingState">
            <summary>
            Gets or sets a value indicating whether debugging is currently active or not.
            </summary>
            <value><c>true</c> if debugging is currently active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.AtBreak">
            <summary>
            Indicates whether behavior execution is at a break.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.ExecutionResultReceived">
            <summary>
            Event indicating an execution result has arrived.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.DebuggingStateChanged">
            <summary>
            Occurs when debugging is started or stopped. See property DebuggingState
            for the current state.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.ScriptDebugger.ScriptDebuggerService.AtBreakChanged">
            <summary>
            Event indicating when behavior execution breaks and resumes.
            </summary>
        </member>
    </members>
</doc>
