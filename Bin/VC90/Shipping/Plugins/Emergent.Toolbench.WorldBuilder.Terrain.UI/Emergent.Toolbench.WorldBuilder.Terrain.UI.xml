<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emergent.Toolbench.WorldBuilder.Terrain.UI</name>
    </assembly>
    <members>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainIntroPage">
            <summary>
            Interaction logic for CreateContentRootPage.xaml
            </summary>
            <summary>
            MigrateTerrainIntroPage
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainIntroPage.#ctor(Emergent.Toolbench.WorldBuilder.TerrainCore.Migration.TerrainMigrationJob)">
            <summary>
            Constructor. Creates the wizard page and lays it out.
            </summary>
            <param name="job">The migration job this page is for</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainIntroPage.OnNavigate">
            <summary>
            Handler for wizard page navigation
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainIntroPage.Accept">
            <see>IWizardPage</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainIntroPage.Reject">
            <see>IWizardPage</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainIntroPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainIntroPage.Title">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainIntroPage.Subtitle">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainIntroPage.CanAdvance">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainIntroPage.CanRetreat">
            <summary>
            Determination as to whether or not the wizard can retreat.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainIntroPage.CanCancel">
            <summary>
            Determination as to whether or not the wizard can cancel.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainPropertiesDialog">
            <summary>
            Interaction logic for TerrainPropertiesDialog.xaml
            </summary>
            <summary>
            TerrainPropertiesDialog
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainPropertiesDialog.#ctor(Emergent.Toolbench.WorldBuilder.TerrainService.Terrain)">
            <summary>
            Create the terrain dialog and base it upon the given terrain object
            </summary>
            <param name="terrain">The terrain object to represent in the dialog</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainPropertiesDialog.OnClosed(System.EventArgs)">
            <summary>
            Removes the event registration when the window is closed
            </summary>
            <param name="e">Details of the event.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainPropertiesDialog.InitializeInitialSectors">
            <summary>
            Initialize the lists based on the terrain object. The lists must be copied so that
            modifications of the preload list in the GUI do not immediately translate back to the
            object until the "OK" or "APPLY" buttons are pressed.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainPropertiesDialog.m_buttonOK_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Apply the modifications made by the dialog, and close the window
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainPropertiesDialog.m_buttonCancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Cancel the modifications made by the dialog and close the window
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainPropertiesDialog.m_buttonApply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Apply the modifications made by the dialog
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainPropertiesDialog.m_addInitialSector_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Add a sector item to the preload list
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainPropertiesDialog.m_removeInitialSector_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Remove a sector item to the preload list
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainPropertiesDialog.m_tabControl_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            If a tab becomes larger than the other tabs, make this the minimum size for all tabs
            </summary>
            <param name="sender">Tab Control</param>
            <param name="e">Size Changed Event Arguments</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainPropertiesDialog.OnTerrainPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Event registered to track when surface layers are changed.
            </summary>
            <param name="sender">The event sender</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainPropertiesDialog.OnMaterialContextMenuOpening(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event registered with the material list box and trigered when a context menu is being 
            displayed. This function creates a dynamic context menu filled by the registered 
            providers
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainPropertiesDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainPropertiesDialog.TabHeight">
            <summary>
            Used to keep track of the maximum height of the terrain Properties dialog tabs
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainPropertiesDialog.PropertyChanged">
            <summary>
            This event is used by consumers wishing to receive notifications of property changes.
            (Used mostly by the front end UI data-bound to the object.)
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayMaterialUIContent">
            <summary>
            Interaction logic for TerrainRayMaterialUIContent.xaml
            </summary>
            <summary>
            TerrainRayMaterialUIContent
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayMaterialUIContent.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayMaterialUIContent.SetColumnWidths(System.Windows.Controls.ListView)">
            <summary>
            Function that calculates the available space and divides it equally between all the 
            listview's column that do not have a width set. It also remembers those columns in the 
            ListView's tag property for future reference.
            </summary>
            <param name="listView"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayMaterialUIContent.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain2DMouseRayQuery">
            <summary>
            Scene query that uses the mouse position to cast a 3D ray using the view direction in
            order to determine the Point of collision. If successful, a 2D ray will be casted to test 
            the 2D ray collision functionality of the terrain
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMouseRayQuery">
            <summary>
            Scene query that uses the mouse position to cast a 3D ray using the view direction of 
            the camera.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery">
            <summary>
            This data query triggers a ray to be casted onto the terrain in order to gather relevant
            geometrical information. The ray must be defined by the user before executing
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.m_collidedSector">
            <summary>
            The sector the query collided with
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.m_collisionPoint">
            <summary>
            The query's collision point
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.m_collisionNormal">
            <summary>
            The query's collision point
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.m_rayOrigin">
            <summary>
            The query's point of origin
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.m_rayDirection">
            <summary>
            The query's point direction
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.m_slope">
            <summary>
            The terrain's slope at the point of collision
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.m_height">
            <summary>
            The terrain's height at the point of collision
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.m_rayLength">
            <summary>
            The ray length used by the query.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.m_collidedLeaf">
            <summary>
            The leaf the query collided with
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.m_levelOfDetails">
            <summary>
            The list of available level of details
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.m_selectedLoD">
            <summary>
            The selected level of detail;
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.m_collisionDetected">
            <summary>
            Whether the ray collided with the terrain
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.m_isReady">
            <summary>
            Whether the ray is ready to collide with a terrain
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.InitializeLoDArray">
            <summary>
            Helper function that initializes the available lod array
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.InitializeQuery">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.InitializeQuery"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.ShutDownQuery">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.ShutDownQuery"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.ExecuteQuery">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.ExecuteQuery"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.TestCollision(Emergent.Toolbench.WorldBuilder.UI.Point3,Emergent.Toolbench.WorldBuilder.UI.Point3,System.Int32,System.Single,Emergent.Toolbench.WorldBuilder.TerrainService.SectorID@,System.Int32@,Emergent.Toolbench.WorldBuilder.UI.Point3@,Emergent.Toolbench.WorldBuilder.UI.Point3@,System.Single@,System.Single@)">
            <summary>
            Tests collision and retrieve collision data
            </summary>
            <param name="startPoint">The start point of the ray</param>
            <param name="direction">The ray's direction</param>
            <param name="levelOfDetail">The level of detail to test against</param>
            <param name="rayLength">The length of the ray to test with</param>
            <param name="sectorID">The colliding sector ID</param>
            <param name="leafID">The colliding leaf</param>
            <param name="collisionPoint">The collision point</param>
            <param name="collisionNormal">The collision normal</param>
            <param name="height">The resulting collision height</param>
            <param name="slope">The resulting collision slope</param>
            <returns>True if the ray collided</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.OnTerrainPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Event triggered when the terrain changes. In this case the list of lod's must be updated
            </summary>
            <param name="sender">Not used</param>
            <param name="e">The property that changed. Only track TerrainChanged</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.OnProxyInitialized(System.Object,System.EventArgs)">
            <summary>
            Event triggered when the Terrain proxy is initialized
            </summary>
            <param name="obj">not used</param>
            <param name="e">not used</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.OnProxyShutdown(System.Object,System.EventArgs)">
            <summary>
            Event Triggered when the terrain proxy is shut down
            </summary>
            <param name="obj">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.CollidedSectorID">
            <summary>
            The sector the query collided with
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.CollidedLeafID">
            <summary>
            The leaf the query collided with
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.RayOrigin">
            <summary>
            The query ray start point
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.RayDirection">
            <summary>
            The query ray direction
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.CollisionPoint">
            <summary>
            The query resulting collision point
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.CollisionNormal">
            <summary>
            The query resulting collision normal
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.LevelOfDetails">
            <summary>
            The list of available level of details
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.SelectedLOD">
            <summary>
            The level of detail the query is testing against
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.RayLength">
            <summary>
            The length of the query ray
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.CurrentHeight">
            <summary>
            The collision point height
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.CurrentSlope">
            <summary>
            The collision point slope
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQuery.CollisionResult">
            <summary>
            Whether ray collided with the terrain
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMouseRayQuery.m_mousePoint">
            <summary>
            The mouse point
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMouseRayQuery.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMouseRayQuery.InitializeQuery">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.InitializeQuery"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMouseRayQuery.ShutDownQuery">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.ShutDownQuery"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMouseRayQuery.OnTerrainMouseMove(System.Int32,System.Int32)">
            <summary>
            Event triggered whenever a MouseMovedMessage is received by the TerrainService
            </summary>
            <param name="mouseX">The mouse X coordinate</param>
            <param name="mouseY">The mouse Y coordinate</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMouseRayQuery.MousePoint">
            <summary>
            The mouse point used for calculation of the 3d and 2d ray start point
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain2DMouseRayQuery.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain2DMouseRayQuery.OnTerrainMouseMove(System.Int32,System.Int32)">
            <summary>
            Event triggered whenever a MouseMovedMessage is received by the TerrainService
            </summary>
            <param name="mouseX">The mouse X coordinate</param>
            <param name="mouseY">The mouse Y coordinate</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain2DMouseRayQuery.ExecuteQuery">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.ExecuteQuery"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain2DMouseRayQuery.FindRayData(System.Single[],System.Single[])">
            <summary>
            Determines the origin of the 2D ray the query will display results for
            </summary>
            <param name="origin">The world origin of the camera</param>
            <param name="direction">The view direction calculated from the mouse position</param>
            <returns></returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypeEntries">
            <summary>
            Simple class representing a collection of brush types. Brush types are discovered in the 
            plug-in registry and added to an instance of this collection.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.ReadOnlyBrushTypeEntries">
            <summary>
            Readonly version of a collection of brush types.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.ReadOnlyBrushTypeEntries.#ctor(Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypeEntries)">
            <summary>
            Constructs the read only collection by passing the specified read/write collection to 
            the observable collection.
            </summary>
            <param name="collection">Read/write brush type collection.</param>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypeEntry">
            <summary>
            This is a simple class used for WPF data-binding. A brush type entry contains the logic
            class for the brush type and the front-end UI used to manipulate the logic object.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypeEntry.#ctor(Emergent.Toolbench.WorldBuilder.TerrainCore.AbstractBrushType,System.Windows.Controls.UserControl)">
            <summary>
            Constructs a new brush type entry.
            </summary>
            <param name="brushType">Logic or business object for the brush type.</param>
            <param name="control">
                Front-end UI allowing the user to manipulate the brush type.
            </param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypeEntry.Name">
            <summary>
            Gets the name of the brush type.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypeEntry.BrushType">
            <summary>
            Gets the brush type contained within the brush type entry.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypeEntry.ContentControl">
            <summary>
            Gets the front-end custom UI object for the brush type.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateMaterialAction.#ctor(Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor,Emergent.Toolbench.WorldBuilder.TerrainCore.TerrainMaterial,Emergent.Toolbench.WorldBuilder.TerrainCore.MaterialPackage)">
            <summary>
            Action constructor that allows for the setting of the required data
            </summary>
            <param name="editor">The material editor to remove data from</param>
            <param name="material">The material to delete</param>
            <param name="package">The package the material belongs to</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateMaterialAction.BeginUndo">
            <summary>
            Empty implementation. Nothing necessary when beginning the undo operation. Work occurs
            during the EndUndo method.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateMaterialAction.EndUndo">
            <summary>
            Recreates the material previously removed
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateMaterialAction.BeginRedo">
            <summary>
            Empty implementation. Nothing necessary when beginning the redo operation. Work occurs
            during the EndUndo method.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateMaterialAction.EndRedo">
            <summary>
            Using the data kept, remove the material
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateMaterialAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Executes the material deletion action
            </summary>
            <param name="context"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateMaterialAction.IsUndoable">
            <summary>
            This action is currently undoable
            <see cref="P:Emergent.Toolbench.Actions.IUndoableActionHandler.IsUndoable"/>
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateMaterialAction.Description">
            <summary>
            <see cref="P:Emergent.Toolbench.Actions.IUndoableActionHandler.IsUndoable"/>
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateMaterialAction.ModifiesContent">
            <summary>
            Always returns true since the action adds a new entity to the world.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainRootPage">
            <summary>
            Interaction logic for CreateContentRootPage.xaml
            </summary>
            <summary>
            CreateTerrainRootPage
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainRootPage.#ctor(Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationWizard,Emergent.Toolbench.GameSolution.UI.Wizard)">
            <summary>
            Constructor. Creates the wizard page and lays it out.
            </summary>
            <param name="wizard">The wizard that this root page is for</param>
            <param name="wizardWindow">The window that this page is embedded within</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainRootPage.OnNavigate">
            <summary>
            Handler for wizard page navigation
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainRootPage.Accept">
            <see>IWizardPage</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainRootPage.Reject">
            <see>IWizardPage</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainRootPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainRootPage.Title">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainRootPage.Subtitle">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainRootPage.CanAdvance">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainRootPage.CanRetreat">
            <summary>
            Determination as to whether or not the wizard can retreat.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainRootPage.CanCancel">
            <summary>
            Determination as to whether or not the wizard can cancel.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectTerrainAssetPathPage">
            <summary>
            Interaction logic for CreateContentRootPage.xaml
            </summary>
            <summary>
            SelectTerrainAssetPathPage
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectTerrainAssetPathPage.#ctor(Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod)">
            <summary>
            Constructor. Creates the wizard page and lays it out.
            </summary>
            <param name="method">The terrain creation method this page is a part of</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectTerrainAssetPathPage.OnNavigate">
            <summary>
            Handler for wizard page navigation
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectTerrainAssetPathPage.Accept">
            <see>IWizardPage</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectTerrainAssetPathPage.Reject">
            <see>IWizardPage</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectTerrainAssetPathPage.NotifyPropertyChanged(System.String)">
            <summary>
            Called to notify any listening bindings that a property has changed
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectTerrainAssetPathPage.OnBrowseClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the browse for terrain asset button is clicked. This displays a folder 
            picker dialog and verifies the chosen path is in the asset web.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectTerrainAssetPathPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectTerrainAssetPathPage.SelectPathString">
            <summary>
            A property to identify the path that has been selected by the user
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectTerrainAssetPathPage.Title">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectTerrainAssetPathPage.Subtitle">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectTerrainAssetPathPage.CanAdvance">
            <summary>
            Returns true if the Next/Finish buttons are permitted right now.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectTerrainAssetPathPage.CanRetreat">
            <summary>
            Determination as to whether or not the wizard can retreat.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectTerrainAssetPathPage.CanCancel">
            <summary>
            Determination as to whether or not the wizard can cancel.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectTerrainAssetPathPage.PropertyChanged">
            <summary>
            An event to implement the INotifyPropertyChanged interface through. 
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.DecorationPanel">
            <summary>
            Interaction logic for DecorationPanel.xaml
            </summary>
            <summary>
            DecorationPanel
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.DecorationPanel.m_currDecorationLayer">
            <summary>
             The decoration layer currently selected for editing
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.DecorationPanel.#ctor">
            <summary>
             Panel for creating/editing/removing decorations on a material
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.DecorationPanel.OnAddLayerClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Click Event to Add Layer
            </summary>
            <param name="sender">Add Layer Click</param>
            <param name="e">Event Argument</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.DecorationPanel.OnRemoveLayerClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Click Event to Remove Layer
            </summary>
            <param name="sender">Remove Layer Click</param>
            <param name="e">Event Argument</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.DecorationPanel.OnMaterialListViewSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Called when the selection changes in the decoration list view. This method sets the 
            currently selected decoration 
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.DecorationPanel.BillboardImageSelectionButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
             Called when the billboard resource file selector is pressed
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.DecorationPanel.MeshNIFPathSelectionButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
             Called when the NIF resource file selector is pressed
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.DecorationPanel.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.DecorationPanel.CurrentlySelectedDecorationLayer">
            <summary>
            Gets the decoration layer currently selected in the list decoration layers in the 
            currently selected material.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialQueryEntry">
            <summary>
            This is a helper class to associate the blending value to a terrain material. It is used
            by the custom content UI.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialQueryEntry.#ctor(Emergent.Toolbench.WorldBuilder.TerrainCore.TerrainMaterial,System.Single)">
            <summary>
            Constructs a new Terrain material query entry.
            </summary>
            <param name="material">The material associated with this entry</param>
            <param name="opacity">The opacirty of the blend mask for that material</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialQueryEntry.Material">
            <summary>
            The material we reference
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialQueryEntry.Opacity">
            <summary>
            The opacity of the material
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialQueryEntry.NumberOfMetaData">
            <summary>
            The number of meta data for this material
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod">
            <summary>
            A base class to define the interface and basic functionality of a terrain creation method
            to be used within a TerrainCreationWizard. 
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod.m_pages">
            <summary>
            A list of pages that this terrain creation method uses.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod.m_wizard">
            <summary>
            The wizard that this terrain creation method is used within.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod.m_terrainModels">
            <summary>
            List of available terrain models.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod.#ctor">
            <summary>
            Base constructor for a TerrainCreationMethod
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod.OnSelect">
            <summary>
            A virtual function - called when this method has been selected by the user
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod.Execute">
            <summary>
            A virtual function - called when this method should complete its execution and generate
            an action for the user to execute. 
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod.NotifyPropertyChanged(System.String)">
            <summary>
            Called to notify any listening bindings that a property has changed
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod.SelectTerrainModel(System.Int32)">
            <summary>
            Sets the selected models to the given index
            </summary>
            <param name="modelIndex">index where the model descriptor is held</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod.InitializeTerrainEntity">
            <summary>
            Creates a terrain entity using the selected model and initializes it's properties
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod.PropertyChanged">
            <summary>
            Event used to implement the INotifyPropertyChanged interface.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod.Summary">
            <summary>
            A string to describe what the terrain creation method will do to add the terrain entity.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod.Title">
            <summary>
            A string to describe what the terrain creation method is called.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod.Description">
            <summary>
            A string to describe what the terrain creation method does.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod.Pages">
            <summary>
            The list of pages used in this method
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod.Owner">
            <summary>
            The wizard that owns this instance of the creation method.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod.TerrainModelName">
            <summary>
            Returns the name of the model selected for creation
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod.TerrainModels">
            <summary>
            Returns the list of available terrain model descriptors
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainModelDescriptor">
            <summary>
            Descriptor class used to provide the physx wizzard page with the information required
            to display the different choices available to create a terrain model
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainModelDescriptor.#ctor(System.String,System.String)">
            <summary>
            Constructor initializin variables with the given values
            </summary>
            <param name="description">The model's description</param>
            <param name="name">The model's name</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainModelDescriptor.Description">
            <summary>
            Returns the model's description
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainModelDescriptor.EntityModelName">
            <summary>
            Returns the model's name
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainModelDescriptor.DisplayName">
            <summary>
            Returns the display name to be used by the physx page
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectExistingTerrainAssetPage">
            <summary>
            Interaction logic for CreateContentRootPage.xaml
            </summary>
            <summary>
            SelectExistingTerrainAssetPage
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectExistingTerrainAssetPage.#ctor(Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod)">
            <summary>
            Constructor. Creates the wizard page and lays it out.
            </summary>
            <param name="method">The terrain creation method this page is a part of</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectExistingTerrainAssetPage.OnNavigate">
            <summary>
            Handler for wizard page navigation
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectExistingTerrainAssetPage.Accept">
            <see>IWizardPage</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectExistingTerrainAssetPage.Reject">
            <see>IWizardPage</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectExistingTerrainAssetPage.NotifyPropertyChanged(System.String)">
            <summary>
            Called to notify any listening bindings that a property has changed
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectExistingTerrainAssetPage.OnBrowseClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the browse for terrain asset button is clicked. This displays a folder 
            picker dialog and verifies the chosen path is in the asset web.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectExistingTerrainAssetPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectExistingTerrainAssetPage.SelectPathString">
            <summary>
            A property to identify the path that has been selected by the user
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectExistingTerrainAssetPage.Title">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectExistingTerrainAssetPage.Subtitle">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectExistingTerrainAssetPage.CanAdvance">
            <summary>
            Returns true if the Next/Finish buttons are permitted right now.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectExistingTerrainAssetPage.CanRetreat">
            <summary>
            Determination as to whether or not the wizard can retreat.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectExistingTerrainAssetPage.CanCancel">
            <summary>
            Determination as to whether or not the wizard can cancel.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectExistingTerrainAssetPage.PropertyChanged">
            <summary>
            An event to implement the INotifyPropertyChanged interface through. 
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.SmoothBrushElementDropDownUI">
            <summary>
            Defines the class for managing the UI allowing the flatten brush element to be modified by
            the user.
            </summary>
            <summary>
            SmoothBrushElementDropDownUI
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.SmoothBrushElementDropDownUI.#ctor">
            <summary>
            Defines the UI for the smooth brush element. This constructor initializes the control. 
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.SmoothBrushElementDropDownUI.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.ViewTerrainPropertiesAction">
            <summary>
            Class that defines an action to display the properties of the current terrain object
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.ViewTerrainPropertiesAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Shows the properties of the current terrain object
            </summary>
            <param name="context">Not used</param>
            <param name="style">Not used</param>
            <returns>Failed if an exception occurred</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainMigrationWizard">
            <summary>
            A class to control the migration of a terrain asset visually to the user.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainMigrationWizard.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainMigrationWizard.Migrate(Emergent.Toolbench.WorldBuilder.TerrainCore.Migration.TerrainMigrationJob)">
            <summary>
            Call this function to display the wizard with regard to a specific migration job. 
            In order for the user to trigger it's execution. 
            
            Note: This function returns immediately. Use the events on the job to detect when
            the migration has completed.
            </summary>
            <param name="job">The job pending migration</param>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayMouseQueryUIContent">
            <summary>
            Interaction logic for TerrainRayMouseQueryUI.xaml
            </summary>
            <summary>
            TerrainRayMouseQueryUIContent
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayMouseQueryUIContent.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayMouseQueryUIContent.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.AbstractMaterialBrushElement">
            <summary>
            An abstract brush element is an abstract class which implements the IBrushElement and 
            IPaintDataFilter interfaces. Therefore, the abstract brush element class is meant to be 
            extended by terrain painting brush elements. These brush elements work in conjunction with 
            the painting system and terrain aware data producers, kernels, and consumers.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.AbstractMaterialBrushElement.m_currMaterial">
            <summary>
            The material used by all material brush element
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.AbstractMaterialBrushElement.OnRemoved">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.TerrainCore.IBrushElement.OnRemoved"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.AbstractMaterialBrushElement.OnMaterialRemoving(System.Object)">
            <summary>
            Event triggered when a material is deleted from the TerrainMaterialEditor.
            </summary>
            <param name="sender">The TerrainMaterial being removed</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.AbstractMaterialBrushElement.OnMaterialPropertyChanged(System.Object,Emergent.Toolbench.WorldBuilder.TerrainCore.MaterialPropertyChangedEventArgs)">
            <summary>
            Event triggered when a material used for painting is changed. This is so we can update
            the Thumbnail accordingly.
            </summary>
            <param name="sender">The material whose properties have changed</param>
            <param name="e">The material property changed event argument</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.AbstractMaterialBrushElement.CheckValidFilter">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.TerrainCore.IPaintDataFilter.CheckValidFilter"/>
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.AbstractMaterialBrushElement.DataSourceType">
            <summary>
            Gets the supported data source type. The paint material brush element supports the 
            <see cref="F:Emergent.Toolbench.WorldBuilder.TerrainCore.PaintDataSourceType.Heightmap"/> type.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.AbstractMaterialBrushElement.DataSource">
            <summary>
            Gets the required data source string. (The package.surface string)
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.AbstractMaterialBrushElement.Thumbnail">
            <summary>
            Gets the thumbnail image representing the currently selected surface material. Usually
            the thumbnail is the base map slot. If the base map slot does not exist, a placeholder
            image is used instead.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.AbstractMaterialBrushElement.CurrentMaterial">
            <summary>
            Sets the current terrain material in use by the paint brush element.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushCategoryEntries">
            <summary>
            Simple subclass for a collection of brush category entries. Brush category entries are 
            constructed from the list of available brush elements where elements are grouped by 
            category.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.ReadOnlyBrushCategoryEntries">
            <summary>
            Simple subclass for a readonly collection of brush category entries.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.ReadOnlyBrushCategoryEntries.#ctor(Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushCategoryEntries)">
            <summary>
            Constructs a read-only collection from the specified read/write collection of brush 
            category entries.
            </summary>
            <param name="collection">Read/write collection of brush category entries.</param>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushCategoryEntry">
            <summary>
            This is a simple class used to help in data-binding the list of available brush element 
            categories.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushCategoryEntry.#ctor(System.String)">
            <summary>
            Constructs a new brush category entry using the specified category name.
            </summary>
            <param name="categoryName">Name of the brush element category.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushCategoryEntry.AddBrush(Emergent.Toolbench.WorldBuilder.TerrainCore.AbstractBrushElement)">
            <summary>
            Adds a new brush element to the category. The brush elements are then retreived from 
            the UI for display.
            </summary>
            <param name="newBrush">New brush element to add.</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushCategoryEntry.CategoryName">
            <summary>
            Gets the name of the brush element category.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushCategoryEntry.BrushCollection">
            <summary>
            Gets a collection of brush elements which are then data bound to the UI.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.Converters.MaterialOpacityConverter">
            <summary>
            This converter handles convertion between a blending value (between 0 and 255) into a
            string representation of the appropriate percentage
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Converters.MaterialOpacityConverter.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Converters.MaterialOpacityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the object to a float that is valid for the range defined by the 
            ValueForRangeMax and RangeMax variables. The following operation will be applied to the
            value: V = V * RangeMax / ValueForRangeMax
            </summary>
            <param name="value"> The value to convert</param>
            <param name="targetType"> The resulting type</param>
            <param name="parameter">unused parameter</param>
            <param name="culture">unsuded parameter</param>
            <returns>The float defined by the range</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Converters.MaterialOpacityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            First converts the object to a string and removes '%' characters if present. Attempts 
            to convert the string to a float and applies the inverse range conversion:
            V = V * ValueForRangeMax / RangeMax
            </summary>
            <param name="value">Value to convert back</param>
            <param name="targetType">Unused argument</param>
            <param name="parameter">Unused argument</param>
            <param name="culture">Unused argument</param>
            <returns>The float defined by the range</returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Converters.MaterialOpacityConverter.ValueForRangeMax">
            <summary>
            The value that should be represented by RangeMax
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Converters.MaterialOpacityConverter.RangeMax">
            <summary>
            The upper bound for the resulting value (value can be outside the range)
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.StreamSectorAction">
            <summary>
            Class that defines the undoable action allowing for surface removal from a specific leaf
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.StreamSectorAction.#ctor(System.Int32,System.Int32,Emergent.Toolbench.WorldBuilder.Terrain.UI.StreamSectorAction.StreamingAction)">
            <summary>
            The action constructor needs to define required data
            </summary>
            <param name="sectorX">The X coordinate of the sector being changed</param>
            <param name="sectorY">The Y coordinate of the sector being changed</param>
            <param name="action">The streaming action to perform on the sector</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.StreamSectorAction.BeginUndo">
            <summary>
            Empty implementation. Nothing necessary when beginning the undo operation. Work occurs
            during the EndUndo method.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.StreamSectorAction.EndUndo">
            <summary>
            Sets the leaf's mask data to the previous values
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.StreamSectorAction.BeginRedo">
            <summary>
            Empty implementation. Nothing necessary when beginning the redo operation. Work occurs
            during the EndUndo method.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.StreamSectorAction.EndRedo">
            <summary>
            Using the same parameters chosen in the context menu when the action was executed, 
            remove the selected surface from the leaf once again
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.StreamSectorAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Retrieves the current mask data for the given surface on the given leaf and
            then removes the surface
            </summary>
            <param name="context"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.StreamSectorAction.IsUndoable">
            <summary>
            <see cref="P:Emergent.Toolbench.Actions.IUndoableActionHandler.IsUndoable"/>
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.StreamSectorAction.Description">
            <summary>
            <see cref="P:Emergent.Toolbench.Actions.IUndoableActionHandler.IsUndoable"/>
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.StreamSectorAction.ModifiesContent">
            <summary>
            Always returns true since the action adds a new entity to the world.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.StreamSectorAction.StreamingAction">
            <summary>
            An enumeration to describe what streaming action to perform upon execution.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.StreamSectorAction.StreamingAction.NONE">
            <summary>
            The streaming action will do nothing to the sector
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.StreamSectorAction.StreamingAction.LOAD">
            <summary>
            The streaming action will load the sector
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.StreamSectorAction.StreamingAction.UNLOAD">
            <summary>
            The streaming action will unload the sector
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.StreamSectorAction.StreamingAction.CREATE">
            <summary>
            The streaming action will create the sector
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.StreamSectorAction.StreamingAction.DELETE">
            <summary>
            The streaming action will delete the sector
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.RegexValidationRule">
            <summary>
            A validation rule to validate package names according to a regular expression. The class is
            also usable for general regular expression validation. 
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.RegexValidationRule.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.RegexValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <see>ValidationRule</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.RegexValidationRule.Expression">
            <summary>
            The regular expression to match against
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.RegexValidationRule.ErrorMsg">
            <summary>
            An error message to describe how the rule has failed on the input.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.NewMaterialPackageDialog">
            <summary>
            Displays a dialog box to the user in order to get the name and location of the new material
            package.
            </summary>
            <summary>
            NewMaterialPackageDialog
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.NewMaterialPackageDialog.#ctor">
            <summary>
            Initializes the new material package dialog and sets the initial validation state, and
            default package directory.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.NewMaterialPackageDialog.OnDialogLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the dialog box is displayed. This method seeds the binding expressions to 
            invoke the validation objects.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.NewMaterialPackageDialog.OnOKButtonClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the dialog box OK button is clicked. Pormpts the user to create the 
            package directory if it does not exist (this case may happen for the default package
            directory). Since validation rules handle data entry, this method simply causes the 
            dialog to close, except if the default directory does not exist and fails to be created.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.NewMaterialPackageDialog.OnBrowseButtonClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the folder browser button is clicked. This method will allow the user to 
            pick a folder in which to place the new material package. The validation hooked to the 
            folder text box makes sure the specified path is inside the asset web.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.NewMaterialPackageDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.NewMaterialPackageDialog.PreviousPackageLocation">
            <summary>
            Gets or sets the previous selected package location. Used to remember package locations
            across calls to this dialog.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.NewMaterialPackageDialog.PackageName">
            <summary>
            Gets or sets the package name. The package name is bound to the package name text box
            in the dialog.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.NewMaterialPackageDialog.PackageLocation">
            <summary>
            Gets or sets the package location. The package location is bound to the package location
            text box which is set when the user browses for a folder.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.Converters.FileSizeConverter">
            <summary>
            Defines a converter allowing convertion from bytes to a readable filesize with units
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Converters.FileSizeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a filesize into a more readable unit of filesize
            </summary>
            <param name="value">The value to convert</param>
            <param name="targetType">The type to convert into</param>
            <param name="parameter">Unused parameter object</param>
            <param name="culture">Unused culture info</param>
            <returns>The resulting string</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Converters.FileSizeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            This method is not implemented, should never be called
            </summary>
            <param name="value">The value to convert</param>
            <param name="targetType">The type to convert into</param>
            <param name="parameter">Unused parameter object</param>
            <param name="culture">Unused culture info</param>
            <returns>The resulting string if successful. The initial string if not</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.ViewMaterialMergeAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Shows the properties of the current terrain object
            </summary>
            <param name="context">Not used</param>
            <param name="style">Not used</param>
            <returns>Failed if an exception occurred</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditorView">
            <summary>
            This class hooks the WPF material editor into the Toolbench view system. It interacts with
            the Toolbench content system and sends any relevant data to the WPF front end UI control 
            embedded in the view.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditorView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditorView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.
            </param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditorView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditorView.#ctor">
            <summary>
            Constructs the material editor by embedding the WPF material editor UI.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditorView.OnContentConnected(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            This function tracks when new contents link to the view
            </summary>
            <param name="content">The content that has connected to the view</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditorView.OnContentDisconnected">
            <summary>
            This function tracks when contents disconnect from the view. When all content objects
            have disconnected, then the view will be closed and uninitialized.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditorView">
            <summary>
            This class hooks the WPF terrain editor into the Toolbench view system. It interacts with
            the Toolbench content system and sends any relevant data to the WPF front end UI control 
            embedded in the view.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditorView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditorView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.
            </param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditorView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditorView.#ctor">
            <summary>
            Constructs the terrain editor view by simply embedding the WPF terrain editor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditorView.OnContentConnected(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            This function tracks when new contents link to the view
            </summary>
            <param name="content">The content that has connected to the view</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditorView.OnContentDisconnected">
            <summary>
            This function tracks when contents disconnect from the view. When all content objects
            have disconnected, then the view will be closed and uninitialized.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditorView.TerrainEditor">
            <summary>
            The terrain editor control used by this view
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEntityFormContextMenuProvider.CreateItems(Emergent.Toolbench.UI.Workbench.DynamicContextMenuEventArgs)">
            <summary>
            Creates the menu items.
            </summary>
            <param name="e">The event arguments.</param>
            <returns>The list of menu items.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElementEntries">
            <summary>
            Contains a list of brush element entries. Brush element entries are constructed from the 
            list of brush element extensions discovered in the plug-in registry.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.ReadOnlyBrushElementEntries">
            <summary>
            Readonly version of brush elements collection.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.ReadOnlyBrushElementEntries.#ctor(Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElementEntries)">
            <summary>
            Constructs a read-only collection from the specified read/write collection of brush 
            element entries.
            </summary>
            <param name="collection">Read/write collection of brush element entries.</param>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElementEntry">
            <summary>
            This is a simple class used to aid in WPF data-binding. It exists to provide additional UI
            data for a brush element without relying on the brush element implementation to provide it.
            The brush element icon is automatically loaded based on an icon path located in the brush
            element's extension.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElementEntry.#ctor(Emergent.Toolbench.WorldBuilder.TerrainCore.AbstractBrushElement,System.Windows.Controls.UserControl)">
            <summary>
            Constructs a new brush element entry.
            </summary>
            <param name="brushElement">Brush element instance.</param>
            <param name="dropDownUI">Custom drop down UI used by a particular brush element to 
                modify the tweak-able values in the brush element.
             </param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElementEntry.viewIndex">
            <summary>
            Index used to store the brush order for a UI listView
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElementEntry.BrushElement">
            <summary>
            Gets the brush element instance.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElementEntry.DropDownUIControl">
            <summary>
            Gets the user control used when the brush element is expanded. These drop downs are 
            used to modify tweak-able properties of a particular brush element.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElementEntry.PropertyChanged">
            <summary>
            This event is used by consumers wishing to receive notifications of property changes.
            (Used mostly by the front end UI data-bound to the object.)
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.DeleteMaterialAction">
            <summary>
            This action allows for the deletion of materials
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.DeleteMaterialAction.#ctor(Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor,Emergent.Toolbench.WorldBuilder.TerrainCore.TerrainMaterial,Emergent.Toolbench.WorldBuilder.TerrainCore.MaterialPackage)">
            <summary>
            Action constructor that allows for the setting of the required data
            </summary>
            <param name="editor">The material editor to remove data from</param>
            <param name="material">The material to delete</param>
            <param name="package">The package the material belongs to</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.DeleteMaterialAction.BeginUndo">
            <summary>
            Empty implementation. Nothing necessary when beginning the undo operation. Work occurs
            during the EndUndo method.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.DeleteMaterialAction.EndUndo">
            <summary>
            Recreates the material previously removed
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.DeleteMaterialAction.BeginRedo">
            <summary>
            Empty implementation. Nothing necessary when beginning the redo operation. Work occurs
            during the EndUndo method.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.DeleteMaterialAction.EndRedo">
            <summary>
            Using the data kept, remove the material
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.DeleteMaterialAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Executes the material deletion action
            </summary>
            <param name="context"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.DeleteMaterialAction.IsUndoable">
            <summary>
            This action is currently undoable
            <see cref="P:Emergent.Toolbench.Actions.IUndoableActionHandler.IsUndoable"/>
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.DeleteMaterialAction.Description">
            <summary>
            <see cref="P:Emergent.Toolbench.Actions.IUndoableActionHandler.IsUndoable"/>
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.DeleteMaterialAction.ModifiesContent">
            <summary>
            Always returns true since the action adds a new entity to the world.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationWizard">
            <summary>
            A class to represent and control a wizard for creating terrain objects through undoable
            actions. Terrain creation methods may be added to the wizard to customize the way
            terrains are created. New creation methods may be registered through the creation wizard
            extension point exposed in this plugin.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationWizard.#ctor">
            <summary>
            Constructor for terrain creation wizards. 
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationWizard.Summon(Emergent.Toolbench.Actions.ExecutionContext)">
            <summary>
            Summon the terrain creation wizard onto the screen and prompt the user to 
            go through the wizard. Blocks until the wizard is completed or cancelled. 
            </summary>
            <param name="context">The execution context of the wizard</param>
            <returns>Returns an undoable action to create the desired terrain through.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationWizard.SelectCreationMode(Emergent.Toolbench.GameSolution.UI.IWizardPage,Emergent.Toolbench.GameSolution.UI.Wizard,System.Int32)">
            <summary>
            Select a particular creation mode to use in the wizard. This function should only
            be called by the initial wizard page to prepare the wizard with the appropriate 
            pages to follow. 
            </summary>
            <param name="rootPage">The root page of the wizard (the one selecting the 
            creation mode)</param>
            <param name="wizardWindow">The window of the wizard being effected</param>
            <param name="methodIndex">The index of the method to select</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationWizard.ReportFinalAction(Emergent.Toolbench.Actions.IUndoableActionHandler)">
            <summary>
            An internal function to notify the wizard when the creation method has generated an
            appropriate action to return from the wizard. 
            </summary>
            <param name="action">The action to return from the wizard</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationWizard.CreationMethods">
            <summary>
            The list of creation methods that have been registered for use by the wizard. 
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationWizard.Context">
            <summary>
            The execution context for all actions generated by the wizard.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainProgressPage">
            <summary>
            Interaction logic for CreateContentRootPage.xaml
            </summary>
            <summary>
            MigrateTerrainProgressPage
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainProgressPage.#ctor(Emergent.Toolbench.WorldBuilder.TerrainCore.Migration.TerrainMigrationJob)">
            <summary>
            Constructor. Creates the wizard page and lays it out.
            </summary>
            <param name="job">The migration job this page is for</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainProgressPage.OnNavigate">
            <summary>
            Handler for wizard page navigation
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainProgressPage.Accept">
            <see>IWizardPage</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainProgressPage.Reject">
            <see>IWizardPage</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainProgressPage.NotifyPropertyChanged(System.String)">
            <summary>
            Called to notify any listening bindings that a property has changed
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainProgressPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainProgressPage.Title">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainProgressPage.Subtitle">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainProgressPage.CanAdvance">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainProgressPage.CanRetreat">
            <summary>
            Determination as to whether or not the wizard can retreat.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainProgressPage.CanCancel">
            <summary>
            Determination as to whether or not the wizard can cancel.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.Terrain.UI.MigrateTerrainProgressPage.PropertyChanged">
            <summary>
            An event to implement the INotifyPropertyChanged interface through.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialRotationValidationRule">
            <summary>
            Validates that the rotation set on a material is between 0 degrees and 180 degrees.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialRotationValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Grabs a string representation of the current value in degrees, converts it to an integer
            and verifies the range.
            </summary>
            <param name="value">String containing the rotation.</param>
            <param name="cultureInfo"></param>
            <returns>Valid if the value is between 0 degrees and 180 degrees.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.TextureSlotContextMenuProvider">
            <summary>
            This provider is used when a context menu is displayed over a terrain material item in the
            material editor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TextureSlotContextMenuProvider.OnClearSlot(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event trigered when the menu item is clicked. Assigns null values to the selected
            material
            </summary>
            <param name="sender">sender object</param>
            <param name="e">routed events</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TextureSlotContextMenuProvider.CreateItems(Emergent.Toolbench.UI.Workbench.DynamicContextMenuEventArgs)">
            <summary>
            Creates the required menu items for the selected TerrainMaterial
            </summary>
            <param name="e">The context menu creation arguments</param>
            <returns>The list of created items</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQueryUIContent">
            <summary>
            Interaction logic for TerrainRayQueryUIContent.xaml
            </summary>
            <summary>
            TerrainRayQueryUIContent
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQueryUIContent.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQueryUIContent.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.PaintMaterialBrushElementDropDownUI">
            <summary>
            Contains the UI for changing the current surface material used to paint on the terrain.
            Also embeds the default brush element UI for controlling slope and elevation constraints 
            while painting.
            </summary>
            <summary>
            PaintMaterialBrushElementDropDownUI
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.PaintMaterialBrushElementDropDownUI.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.PaintMaterialBrushElementDropDownUI.OnInitialized(System.Object,System.EventArgs)">
            <summary>
            Binds the material package combo box to the terrain service's central collection of 
            material packages.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.PaintMaterialBrushElementDropDownUI.OnMaterialPackageComboBoxSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Called when the currently selected material package changes. This method populates the 
            materials combo box based on what materials are active.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.PaintMaterialBrushElementDropDownUI.OnMaterialComboBoxSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Called when the material selection changes within a package.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.PaintMaterialBrushElementDropDownUI.OnDataContextChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Ensures the brush element is given the selected item when associating it with the 
            paint brush
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.PaintMaterialBrushElementDropDownUI.OnMaterialElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Event triggered when a AbstractMaterialBrushElement has its current changed. We need
            to unsure the material is the same as the one selected. A difference can happen when
            the change was not triggered by this UI.
            </summary>
            <param name="sender">Object that triggered the event</param>
            <param name="e">The event's property</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.PaintMaterialBrushElementDropDownUI.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.FlattenBrushElement">
            <summary>
            Modifies the incoming data by setting the pixel values to a value specified by the flatten
            properties. The affect is then modulated by the incoming kernel.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.FlattenBrushElement.#ctor">
            <summary>
            Constructs the flatten brush element. Sets the elevation to flatten to to 0.0f by 
            default.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.FlattenBrushElement.UpdateChangedProperty(System.String)">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.TerrainCore.AbstractBrushElement.UpdateChangedProperty(System.String)"/>
            </summary>
            <param name="propertyName">Name of the property</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.FlattenBrushElement.OnActivated(System.Single,System.Single)">
            <summary>
            Makes sure that any UI elements that may be bound to the brush element are updated by 
            calling the OnPropertyChanged method for the Elevation property.
            </summary>
            <param name="minElev"></param>
            <param name="maxElev"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.FlattenBrushElement.FilterPaintData(Emergent.Toolbench.WorldBuilder.TerrainCore.PaintBuffer,Emergent.Toolbench.WorldBuilder.TerrainCore.PaintBuffer,System.Single)">
            <summary>
            Modifies the pixel data setting the values to an absolute value.
            </summary>
            <param name="kernelBuffer">Get kernel to use as a mask on the operation.</param>
            <param name="inputBuffer">Incoming data to modify.</param>
            <param name="paintDirection">The direction of painting.</param>
            <returns>The modified data.</returns>
            <remarks>The incoming kernel and inputData must be of two dimensions. If this constraint
             is not met, the input data is returned unmodified.  </remarks>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.FlattenBrushElement.Clone">
            <summary>
            Clones the flatten brush element.
            </summary>
            <returns>A deep copy of the flatten brush element.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.FlattenBrushElement.VerifyProperty(System.String)">
            <summary>
            Verifies the value stored in the property name and returns an error string if required
            </summary>
            <param name="propertyName">The property to validate</param>
            <returns>An error string if the property is not valid</returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.FlattenBrushElement.Elevation">
            <summary>
            Stores the elevation that the flatten brush should set the terrain to when sculpting.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.FlattenBrushElement.DataSourceType">
            <summary>
            Gets the supported data source type. The flatten brush element supports the 
            <see cref="F:Emergent.Toolbench.WorldBuilder.TerrainCore.PaintDataSourceType.Heightmap"/> type.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.FlattenBrushElement.DataSource">
            <summary>
            Gets the required data source string.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor">
            <summary>
            This WPF control implements the terrain material editor. The terrain material editor allows
            the user to build, organize, and manipulate all the materials available for painting on a 
            terrain.
            </summary>
            <summary>
            TerrainMaterialEditor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.#ctor">
            <summary>
            Constructs the material editor UI.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnTerrainProxyShutdown(System.Object,System.EventArgs)">
            <summary>
            This handler unregisters the editor for events from the proxy
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnTerrainProxyInitialized(System.Object,System.EventArgs)">
            <summary>
            This handler requests to load all the available surface packages within the asset web,
            once the UI and the proxy have been loaded appropriately. It also registers 
            event handlers for the proxy
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnSurfacePackageLoaded(System.String)">
            <summary>
            Event called when surface package is loaded
            </summary>
            <param name="packageName">Name of Surface package to load</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnMetaDataTableRowLoading(System.Object,Microsoft.Windows.Controls.DataGridRowEventArgs)">
            <summary>
            Called when a meta-data row is loading. This method checks to see if the data behind the
            current row is the new item placeholder and if so, puts our custom item template on the
            row.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnMetaDataTableRowUnloading(System.Object,Microsoft.Windows.Controls.DataGridRowEventArgs)">
            <summary>
            When the new item gets committed, this method will replace the item template with the 
            default data grid row template.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnMetaDataTableRowEndEditing(System.Object,Microsoft.Windows.Controls.DataGridRowEditEndingEventArgs)">
            <summary>
            If the edit operation was a result of a new entry operation, invoke the replace template
            method on the dispatcher to reset the row template to the new item row template.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.ResetNewItemTemplate(System.Object)">
            <summary>
            Gets the last row in the table which is a placeholder for a new item row and sets the 
            control template to the custom new row template.
            </summary>
            <param name="arg"></param>
            <returns>null</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnMetaDataTableRowBeginEditing(System.Object,Microsoft.Windows.Controls.DataGridBeginningEditEventArgs)">
            <summary>
            Called just before the user starts editing a meta-data entry. This method gets the 
            meta-data entry in the row and assigns the currently selected material so the meta-data
            object can use it to validate unique keys.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnMetaDataTableRowLeftMouseButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            If the user clicks on the new row to add a new row, add the row and modify the row 
            templates.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnNewMaterialPackageClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the user wants to create a new terrain material package. This method 
            displays a dialog allowing the user to name the package and choose a location for the 
            new package.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnMaterialNewClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Creates a new material in the currently selected package. New materials do not have 
            any textures assigned to them when first created.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.CreateMaterial(Emergent.Toolbench.WorldBuilder.TerrainCore.TerrainMaterial,Emergent.Toolbench.WorldBuilder.TerrainCore.MaterialPackage)">
            <summary>
            Creates a material using the given package and material data. This is meant to be used
            by the undo action.
            </summary>
            <param name="material">Material to recreate</param>
            <param name="package">package the material should belong to</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.RemoveMaterial(Emergent.Toolbench.WorldBuilder.TerrainCore.TerrainMaterial,Emergent.Toolbench.WorldBuilder.TerrainCore.MaterialPackage)">
            <summary>
            Performs the removal of a material.
            </summary>
            <param name="material">Material to remove</param>
            <param name="package">package the material belongs to</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnMaterialRemoveClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Removes the currently selected material from the currently selected material package.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnMaterialPackageComboBoxSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Called when the user changes the selection in the material package combo box. When the
            selection changes the list of materials in the newly selected package is displayed in 
            the material list box.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnMaterialPropertyChanged(System.Object,Emergent.Toolbench.WorldBuilder.TerrainCore.MaterialPropertyChangedEventArgs)">
            <summary>
            Called when any property on a terrain material is modified. This method will forward the
            property modifications on to the terrain proxy which in turn informs the run-time of the
            data change.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnMaterialListBoxSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Called when the selection changes in the material list box. This method sets the 
            currently selected material property and enables/disables the material properties 
            tab control.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnMaterialContextMenuOpening(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event registered with the material list box and trigered when a context menu is being 
            displayed. This function creates a dynamic context menu filled by the registered 
            providers
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnMaterialTextureSlotButtonClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This method is called when a texture button on a material is clicked. The active
            material is the currently selected material and the texture slot is determined using the
            button's name compared against the enumeration.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnTextureSlotButtonToolTipOpening(System.Object,System.Windows.Controls.ToolTipEventArgs)">
            <summary>
            Called when a tooltip is opening on a texture slot button in the material browser. This
            method displays a custom pop-up that provides additional detailed information about the 
            current texture.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnMaterialItemDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Event triggered when double clicking on a listed material. It will access the Terrain 
            editor if it exists and use it to create or set a paint material brush using the 
            currently selected material.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.FindTextureType(System.Windows.Controls.Button)">
            <summary>
            Based on the button's name, determines which texture type the button corresponds to. The
            names of the texture slot buttons correspond to the material texture type enumeration.
            </summary>
            <param name="button">Button to check.</param>
            <returns>A valid material texture type or MaterialTextureType.Invalid</returns>
            <see cref="T:Emergent.Toolbench.WorldBuilder.TerrainCore.MaterialTextureType"/>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnSlotContextMenuOpening(System.Object,System.Windows.Controls.ContextMenuEventArgs)">
            <summary>
            Event triggered when a context menu is opening for a texture slot button.
            </summary>
            <param name="sender">Sender object (a button)</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.FilterCallback(System.Object)">
            <summary>
            Called for each item in the list. Return true if it
            should be in the list, or false to not be in the list.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.NotifyPropertyChanged(System.String)">
            <see>INotifyPropertyChanged</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnMetaDataTableSorting(System.Object,Microsoft.Windows.Controls.DataGridSortingEventArgs)">
            <summary>
            Ensures sorting is a valid operation. It will proceed using the base function if it is.
            </summary>
            <param name="sender">The DataGrid that send the event</param>
            <param name="e">Required sorting events</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.IsMetaDataTableValid">
            <summary>
            Helper function that checks whether the currently active data grid is in a valid state.
            This is when there are no errors on any of the grid's rows and when no items are in
            an editing or adding sequence.
            </summary>
            <returns>False if the DataGrid's ItemsSource collection is not editing or 
            adding items</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.OnMetaDataTableDataContextChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Before changing data context (when a TerrainMaterial selection changes). This function
            ensures the current MetaDataTable is in a valid state. If it isn't, the item currently
            being in an error state will be reverted to its previous value or removed (with it was 
            added).
            </summary>
            <param name="sender">The DataGrid that triggered the event</param>
            <param name="e">The context changed event arguments</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.Filters">
            <summary>
            A list of all the package filters available to the Material Editor. Includes a
            filter for 'all packages' and a filter for each package that is loaded.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.MaterialList">
            <summary>
            A list of all materials from all packages that are currently loaded.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.CurrentlySelectedMaterial">
            <summary>
            Gets the terrain material currently selected in the list of available materials.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMaterialEditor.PropertyChanged">
            <summary>
            An event to implement the INotifyPropertyChanged interface through. 
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.UseExistingTerrainMethod">
            <summary>
            A class to implement a TerrainCreationMethod designed to import a terrain asset
            that has already been created for a previous scene. 
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.UseExistingTerrainMethod.#ctor">
            <summary>
            Constructor for creating the TerrainCreationMethod for use in a specific wizard.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.UseExistingTerrainMethod.OnSelect">
            <see>TerrainCreationMethod</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.UseExistingTerrainMethod.Execute">
            <summary>
            This function is executed when the wizard is completed and generates an appropriate
            action to add an appropriate terrain entity based on this method.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.UseExistingTerrainMethod.ExistingTerrainFile">
            <summary>
            A string identifying the existing terrain asset to load
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.UseExistingTerrainMethod.Summary">
            <summary>
            A string summarizing what this method will create. 
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainUICommands">
            <summary>
            Contains the UI commands used in various context menus and other UI for manipulating the 
            terrain editing tools.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainUICommands.RemoveBrushElement">
            <summary>
            Gets the UI command for removing an active brush element.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainUICommands.RemoveAllBrushElements">
            <summary>
            Gets the UI command for removing all active brush elements.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.ImportOldTerrainAssetMethod">
            <summary>
            A class to implement a terrain creation method for loading assets that 
            were used in the scene designer terrain architecture.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.ImportOldTerrainAssetMethod.#ctor">
            <summary>
            Constructor for the terrain creation method.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.ImportOldTerrainAssetMethod.OnSelect">
            <summary>
            Called when the user selects this method. This resets the method's properties to
            their defaults.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.ImportOldTerrainAssetMethod.Execute">
            <see>TerrainCreationMethod</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.ImportOldTerrainAssetMethod.ArchivePath">
            <summary>
            A string identifying the archive path of the old terrain asset to load.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.ImportOldTerrainAssetMethod.Summary">
            <summary>
            A string summarizing what this method will create. 
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectOldTerrainAssetPage">
            <summary>
            Interaction logic for CreateContentRootPage.xaml
            </summary>
            <summary>
            SelectOldTerrainAssetPage
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectOldTerrainAssetPage.#ctor(Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod)">
            <summary>
            Constructor. Creates the wizard page and lays it out.
            </summary>
            <param name="method">The terrain creation method this page is a part of</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectOldTerrainAssetPage.OnNavigate">
            <summary>
            Handler for wizard page navigation
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectOldTerrainAssetPage.Accept">
            <see>IWizardPage</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectOldTerrainAssetPage.Reject">
            <see>IWizardPage</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectOldTerrainAssetPage.NotifyPropertyChanged(System.String)">
            <summary>
            Called to notify any listening bindings that a property has changed
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectOldTerrainAssetPage.OnBrowseClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the browse for terrain asset button is clicked. This displays a folder 
            picker dialog and verifies the chosen path is in the asset web.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectOldTerrainAssetPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectOldTerrainAssetPage.Title">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectOldTerrainAssetPage.Subtitle">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectOldTerrainAssetPage.CanAdvance">
            <summary>
            Returns true if the Next/Finish buttons are permitted right now.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectOldTerrainAssetPage.CanRetreat">
            <summary>
            Determination as to whether or not the wizard can retreat.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectOldTerrainAssetPage.CanCancel">
            <summary>
            Determination as to whether or not the wizard can cancel.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.Terrain.UI.SelectOldTerrainAssetPage.PropertyChanged">
            <summary>
            An event to implement the INotifyPropertyChanged interface through. 
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMetaDataQueryEntry">
            <summary>
            This is a helper class to associate the weight value to a terrain meta data. It is used
            by the custom content UI.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMetaDataQueryEntry.#ctor(Emergent.Toolbench.WorldBuilder.TerrainCore.MaterialMetaData,System.Object)">
            <summary>
            Constructs a new material meta data query entry.
            </summary>
            <param name="metaData">The meta data associated with this entry</param>
            <param name="weight">The weight of the meta data</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMetaDataQueryEntry.MetaData">
            <summary>
            The MetaData we reference
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainMetaDataQueryEntry.Weight">
            <summary>
            The weight of the metadata
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMergingDialog">
            <summary>
            Interaction logic for MaterialMergingDialog.xaml
            </summary>
            <summary>
            MaterialMergingDialog
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMergingDialog.#ctor(Emergent.Toolbench.WorldBuilder.TerrainService.SurfaceLayer)">
            <summary>
            Initializes the material replacement dialog
            </summary>
            <param name="materialToMerge">The material we want to replace</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMergingDialog.FindSelectedMaterial(Emergent.Toolbench.WorldBuilder.TerrainService.SurfaceLayer)">
            <summary>
            Parses through the loaded materials and attempts to find the one that corresponds
            to the given surface layer.
            </summary>
            <param name="materialToMerge">The surface layer to find the material for</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMergingDialog.FindSelectedSurfaceLayer(Emergent.Toolbench.WorldBuilder.TerrainCore.TerrainMaterial)">
            <summary>
            Parses through the surface layers registered on the terrain and attempts to find the 
            one that corresponds to the given terrain material.
            </summary>
            <param name="material">The material to find the surface layer for</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMergingDialog.FilterCallback(System.Object)">
            <summary>
            Called for each item in the list. Return true if it
            should be in the list, or false to not be in the list.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMergingDialog.OnPackageFilterSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Event triggered when the package filter combo box selection has changed.
            </summary>
            <param name="sender">The combo box that triggered the event</param>
            <param name="e">The event's parameters</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMergingDialog.OnTextureToolTipOpening(System.Object,System.Windows.Controls.ToolTipEventArgs)">
            <summary>
            Called when a tooltip is opening on a texture slot border. This
            method displays a custom pop-up that provides additional detailed information about the 
            current texture.
            </summary>
            <param name="sender">The object that triggered the event</param>
            <param name="e">The event's parameters</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMergingDialog.OnOkClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Ok button event handler. This sets the dialog result.
            </summary>
            <param name="sender">The ok button</param>
            <param name="e">the event's parameters</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMergingDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMergingDialog.PropertyChanged">
            <summary>
            This event is used by consumers wishing to receive notifications of property changes.
            (Used mostly by the front end UI data-bound to the object.)
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMergingDialog.Filters">
            <summary>
            A list of all the package filters available to the Material Editor. Includes a
            filter for 'all packages' and a filter for each package that is loaded.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMergingDialog.MaterialList">
            <summary>
            A list of all materials from all packages that are currently loaded.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMergingDialog.MaterialToReplace">
            <summary>
            The material that has been selected for replacement
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMergingDialog.AffectedSurfaceLayer">
            <summary>
            The surface layer that was right clicked
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMergingDialog.SelectedSurfaceLayer">
            <summary>
            The surface layer the selected material is associated to if any
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMergingDialog.SelectedMaterial">
            <summary>
            The material that is currently selected to replace with
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMergingDialog.IsSelectionValid">
            <summary>
            Checks whether the selected materials can be used as a replacement material
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMergingDialog.IsSurfaceLayerValid">
            <summary>
            Checks whether the material to be replaced could be resolved
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainPropertyMaterialContextMenuProvider.CreateItems(Emergent.Toolbench.UI.Workbench.DynamicContextMenuEventArgs)">
            <summary>
            Creates the required menu items for the selected TerrainMaterial
            </summary>
            <param name="e">The context menu creation arguments</param>
            <returns>The list of created items</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.Converters.MaterialThumbnailConverter">
            <summary>
            Helper class allowing the convertion from two strings (Package name and material name)
            to an image asset.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Converters.MaterialThumbnailConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a list of 2 strings into an image asset resolved from the given material names.
            If the given objects are invalid or can not be resolved into a material, the 
            TerrainMaterial.MissingSlotImage is returned.
            </summary>
            <param name="values">List of values to convert</param>
            <param name="targetType">The resulting type</param>
            <param name="parameter">Unused parameters</param>
            <param name="culture">The culture info</param>
            <returns>Return an image</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Converters.MaterialThumbnailConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            This function is not implemented and throws the NotImplementedException
            </summary>
            <param name="value">Value to convert</param>
            <param name="targetTypes">The list of target types</param>
            <param name="parameter">parameter</param>
            <param name="culture">The current culture</param>
            <returns>A list of objects</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElementDropDownUI">
            <summary>
            Contains the UI for tweaking parameters for the noise brush element.
            </summary>
            <summary>
            NoiseBrushElementDropDownUI
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElementDropDownUI.#ctor">
            <summary>
            Constructs the noise brush element UI.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElementDropDownUI.m_ReSeedwithMouseMove">
            <summary>
            Bool Indicating if Re-Seed Noise happens continuously as mouse moves in painting
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElementDropDownUI.OnReSeedButtonClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Causes the cached noise to be re-calculated with a different seed value.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElementDropDownUI.OnMouseMoveReSeedClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event for when checkbox for Re-Seed Automatically on Mouse Move (m_ReSeedCheckbox) is clicked.
            This function is in charge of setting the bool m_ReSeedwithMouseMove correctly. 
            </summary>
            <param name="sender">m_ReSeedCheckbox</param>
            <param name="e">Click Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElementDropDownUI.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMetaDataKeyCellValidationRule">
            <summary>
            This validation rule ensures that the meta-data key is a valid string.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMetaDataKeyCellValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Called when a meta-data key is edited by the user. This method ensures the string is 
            valid.
            </summary>
            <param name="value">String containing the key.</param>
            <param name="cultureInfo"></param>
            <returns>Valid if the key is not empty and not null.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMetaDataRowValidationRule">
            <summary>
            This validation rule is executed when a new meta-data row is entered into the meta-data 
            table. This method ensures the new meta-data entry has a unique key in the table.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialMetaDataRowValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Queries the parent material of the meta-data to make sure the new meta-data entry has a
            unique key for the material. This is executed before the meta-data is added to the 
            material, thereby preventing the user from ever adding faulty data to the material.
            </summary>
            <param name="value">A binding group containg the </param>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.Converters.TextureSizeConverter">
            <summary>
            Builds a mapping between string representations of texture size and a single number. This 
            is used to convert a combo-box texture size string to the actual value stored on the 
            terrain descriptor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Converters.TextureSizeConverter.#cctor">
            <summary>
            Builds the mapping table of texture size strings to number form.
            </summary>
            <remarks>Ex: "64x64" maps to 64, "128x128" maps to 128, etc.</remarks>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Converters.TextureSizeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Searches the mapping table for the integer specified by the value.
            </summary>
            <param name="value">Integer number.</param>
            <param name="targetType"></param>
            <param name="culture"></param>
            <param name="parameter"></param>
            <returns>String representation of the texture size. If the texture size wasn't found,
                this method returns "Invalid".
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Converters.TextureSizeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a string representation of texture size to an integer.
            </summary>
            <param name="value">String version of texture size.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            The integer version of the specified texture size or 0 if the string value
            could not be located in the mapping table.
            </returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.Converters.TerrainScaleValidationRule">
            <summary>
            This validation rule makes sure the terrain scale is not less that or equal to 0.0.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Converters.TerrainScaleValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Grabs the string representation of a floating point number, converts it to a floating 
            point number and makes sure it is greater than 0.0f.
            </summary>
            <param name="value">String representation of the number to check.</param>
            <param name="cultureInfo">Culture information.</param>
            <returns>Valid if the floating point number is greater than 0.0f.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushTypeControl">
            <summary>
            Implements the back-end code for the standard brush type control UI.
            </summary>
            <summary>
            StandardBrushTypeControl
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushTypeControl.#ctor">
            <summary>
            Constructs the standard brush control, sets default values and generates a kernel from
            those default values.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushTypeControl.OnAirBrushModeClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the airbrush painting mode is changed. This method tells the terrain proxy
            to update the paint brush gizmo.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushTypeControl.OnDisplayPaintingGuideClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is called when the DisplayPainting checkbox is clicked.  It toggles the 
            'Display Painting guide'.  
            </summary>
            <param name="sender">Display Painting Checkbox xaml element</param>
            <param name="e">unused</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushTypeControl.InitializeSettings(Emergent.Toolbench.Settings.ISettingsAspect)">
            <summary>
            Loads last settings for the brush max size, the air brush check box and the 
            painting guide check box
            <see cref="M:Emergent.Toolbench.WorldBuilder.TerrainCore.IBrushSettings.InitializeSettings(Emergent.Toolbench.Settings.ISettingsAspect)"/>
            </summary>
            <param name="settings">The settings aspect to load settings from</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushTypeControl.UpdateSettings(Emergent.Toolbench.Settings.ISettingsAspect)">
            <summary>
            Sets last settings for the brush max size, the air brush check box and the 
            painting guide check box
            <see cref="M:Emergent.Toolbench.WorldBuilder.TerrainCore.IBrushSettings.InitializeSettings(Emergent.Toolbench.Settings.ISettingsAspect)"/>
            </summary>
            <param name="settings">The settings aspect to save settings to</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushTypeControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StampBrushType">
            <summary>
            The stamp brush type using a gray scale image to stamp details onto the terrain. The kernel
            in this case is therefore sources from an image with user controlled blurring on the image 
            to achieve smooth or sharp applications of the stamp.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StampBrushType.GetBuffer">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.TerrainCore.AbstractBrushType.GetBuffer"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StampBrushType.Clone">
            <summary>
            Clones the brush type.
            </summary>
            <returns>A deep copy of the brush type.</returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StampBrushType.Name">
            <summary>
            Gets the name of the brush type. Returns "Stamp".
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.AssetWebPathValidationRule">
            <summary>
            This validation class checks for an existing asset web and makes sure the specified value is
            a valid path pointing somewhere inside the asset web. If not, this validation rule fails.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.AssetWebPathValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Checks to see if the specified object is a valid path pointing inside the current asset
            web.
            </summary>
            <param name="value">String value containing a file path.</param>
            <param name="cultureInfo"></param>
            <returns>Valid if the specified object is a path inside the asset web.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.AssetWebPathCreationValidationRule">
            <summary>
            This validation class checks for an existing asset web and makes sure the specified value is
            a valid path pointing somewhere inside the asset web. It also ensure that no terrain files
            are already present to avoid overwriting data. If not, this validation rule fails.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.AssetWebPathCreationValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Checks to see if the specified object is a valid path pointing inside the current asset
            web.
            </summary>
            <param name="value">String value containing a file path.</param>
            <param name="cultureInfo"></param>
            <returns>Valid if the specified object is a path inside the asset web.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainSummaryPage">
            <summary>
            Interaction logic for CreateContentRootPage.xaml
            </summary>
            <summary>
            CreateTerrainSummaryPage
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainSummaryPage.#ctor(Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod)">
            <summary>
            Constructor. Creates the wizard page and lays it out.
            </summary>
            <param name="method">The terrain creation method this page is a part of</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainSummaryPage.OnNavigate">
            <summary>
            Handler for wizard page navigation
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainSummaryPage.Accept">
            <see>IWizardPage</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainSummaryPage.Reject">
            <see>IWizardPage</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainSummaryPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainSummaryPage.Title">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainSummaryPage.Subtitle">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainSummaryPage.CanAdvance">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainSummaryPage.CanRetreat">
            <summary>
            Determination as to whether or not the wizard can retreat.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateTerrainSummaryPage.CanCancel">
            <summary>
            Determination as to whether or not the wizard can cancel.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.FlattenBrushElementDropDownUI">
            <summary>
            Defines the class for managing the UI allowing the flatten brush element to be modified by
            the user.
            </summary>
            <summary>
            FlattenBrushElementDropDownUI
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.FlattenBrushElementDropDownUI.#ctor">
            <summary>
            Defines the UI for the Flatten brush element. This constructor initializes the control. 
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.FlattenBrushElementDropDownUI.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.DefaultBrushElementUI">
            <summary>
            Defines the UI for changing the default values on brush elements. Default values include 
            min/max elevation and min/max slope.
            </summary>
            <summary>
            DefaultBrushElementUI
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.DefaultBrushElementUI.#ctor">
            <summary>
            Constructs the UI.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.DefaultBrushElementUI.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DBlendedMetaDataQuery">
            <summary>
            A query that is used to collect information on the terrain about meta data at a given point
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DBlendedMetaDataQuery.m_numMetaData">
            <summary>
            The number of metaData
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DBlendedMetaDataQuery.m_metaData">
            <summary>
            The list of materials associated with the corresponding blending value
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DBlendedMetaDataQuery.m_rayOrigin">
            <summary>
            The query's point of origin
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DBlendedMetaDataQuery.m_rayDirection">
            <summary>
            The query's point direction
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DBlendedMetaDataQuery.m_mousePoint">
            <summary>
            The mouse point
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DBlendedMetaDataQuery.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DBlendedMetaDataQuery.InitializeQuery">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.InitializeQuery"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DBlendedMetaDataQuery.ShutDownQuery">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.ShutDownQuery"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DBlendedMetaDataQuery.ExecuteQuery">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.ExecuteQuery"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DBlendedMetaDataQuery.OnSceneMouseClicked(System.Int32,System.Int32)">
            <summary>
            Event triggered whenever a MouseMovedMessage is received by the TerrainService
            </summary>
            <param name="mouseX">The mouse X coordinate</param>
            <param name="mouseY">The mouse Y coordinate</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DBlendedMetaDataQuery.NumberOfMetaData">
            <summary>
            The number of materials found
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DBlendedMetaDataQuery.RayOrigin">
            <summary>
            The query ray start point
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DBlendedMetaDataQuery.RayDirection">
            <summary>
            The query ray direction
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DBlendedMetaDataQuery.MetaDataList">
            <summary>
            Returns a collection of the materials
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DBlendedMetaDataQuery.MousePoint">
            <summary>
            The mouse point used for calculation of the 3d and 2d ray start point
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StampBrushTypeControl">
            <summary>
            Implements the back-end code for the stamp brush type type UI.
            </summary>
            <summary>
            StampBrushTypeControl
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StampBrushTypeControl.#ctor">
            <summary>
            Constructs the stamp brush control and sets up default values.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StampBrushTypeControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.CreateBlankTerrainMethod">
            <summary>
            A class to implement a TerrainCreationMethod for creating completely new terrain assets.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.CreateBlankTerrainMethod.#ctor">
            <summary>
            Constructor for the terrain creation method
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.CreateBlankTerrainMethod.OnSelect">
            <summary>
            This function reinitializes the method to it's defaults and is called when the method
            is selected.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.CreateBlankTerrainMethod.Execute">
            <see>TerrainCreationMethod</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.CreateBlankTerrainMethod.TerrainDescriptor">
            <summary>
            A terrain descriptor object to describe the terrain object to create
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.CreateBlankTerrainMethod.Summary">
            <summary>
            A string summarizing what this method will create. 
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreatePhysXTerrainPage">
            <summary>
            Interaction logic for SelectBakeTerrainPhysX.xaml
            </summary>
            <summary>
            CreatePhysXTerrainPage
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreatePhysXTerrainPage.#ctor(Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod)">
            <summary>
            Constructor. Creates the wizard page and lays it out.
            </summary>
            <param name="method">The method used for this page</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreatePhysXTerrainPage.OnNavigate">
            <summary>
            Handler for wizard page navigation
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreatePhysXTerrainPage.Accept">
            <summary>
            Accept function implementation
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreatePhysXTerrainPage.Reject">
            <summary>
            Reject function implementation
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreatePhysXTerrainPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreatePhysXTerrainPage.Title">
            <summary>
            The page's title
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreatePhysXTerrainPage.Subtitle">
            <summary>
            The page's subtitle
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreatePhysXTerrainPage.CanAdvance">
            <summary>
            Returns true if the Next/Finish buttons are permitted right now.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreatePhysXTerrainPage.CanRetreat">
            <summary>
            Determination as to whether or not the wizard can retreat.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreatePhysXTerrainPage.CanCancel">
            <summary>
            Determination as to whether or not the wizard can cancel.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.ExtensionPoints">
            <summary>
            This internal class defines the static strings for extension points exposed by the plug-in.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.ExtensionPoints.BrushTypeUI">
            <summary>
            Exposes an extension point for plug-ins to implement custom UI for brush type objects.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.ExtensionPoints.BrushElementDropdownUI">
            <summary>
            Exposes an extension point for plug-ins to implement custom UI for modifying the values
            of a particular brush element.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.ExtensionPoints.TerrainCreationWizardUI">
            <summary>
            Exposes an extension point for plug-ins to implement custom terrain creation workflow
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushType">
            <summary>
            The standard brush type generates a procedural paint kernel based on the current values set
            on the brush type. These values include inner and outer radius, and falloff or hardness. 
            When these values are changed, the kernel is re-calculated and cached.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushType.#ctor">
            <summary>
            Constructs the brush type and generates a kernel based on the initial values of the 
            brush type. The initial values of the brush type result in a smooth transition from the
            middle of the brush circle to the outer edge.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushType.InitializeSettings(Emergent.Toolbench.Settings.ISettingsAspect)">
            <summary>
            This override will initialize the standard brush specific parameters
            <see cref="M:Emergent.Toolbench.WorldBuilder.TerrainCore.AbstractBrushType.InitializeSettings(Emergent.Toolbench.Settings.ISettingsAspect)"/>
            </summary>
            <param name="settings">The setting aspect to initialize data from</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushType.UpdateSettings(Emergent.Toolbench.Settings.ISettingsAspect)">
            <summary>
            This override will update the settings with the standard brush's specific parameters
            <see cref="M:Emergent.Toolbench.WorldBuilder.TerrainCore.AbstractBrushType.InitializeSettings(Emergent.Toolbench.Settings.ISettingsAspect)"/>
            </summary>
            <param name="settings">The setting aspect to save data to</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushType.Activated">
            <summary>
            Sets the active gizmo terrain edit overlay to the "Standard" overlay.
            </summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.TerrainCore.IBrushType.Activated"/>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushType.GetBuffer">
            <summary>
            Gets the currently cached kernel generated from the brush types current values.
            </summary>
            <returns>A kernel generated from the standard brush type's current values.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushType.UpdateKernel">
            <summary>
            Calculates an image kernel based on the inner and outer radius. 
            </summary>
            <remarks>The kernel is generated by determining the distance of the kernel pixel to the 
                center of the kernel image. The values are 1.0 where the distance is less than or 
                equal to the inner radius and 0.0 where the distance is greater than or equal to the
                outer radius. When the distance falls between the inner and outer radius, the value 
                equals the distance scaled by the outer radius hence scaling the falloff distance. 
                Finally, a Gaussian blur pass is done to smooth any hard transitions.
            </remarks>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushType.UpdateKernelThumbnail">
            <summary>
            Updates the cached thumbnail of the current kernel so the user can see a preview.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushType.OnTerrainServicePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Resizes the maximum dimensions of the brush type kernel when the size is changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushType.Clone">
            <summary>
            Clones the brush type.
            </summary>
            <returns>A deep copy of the brush type.</returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushType.Name">
            <summary>
            Gets the name of the brush type. Returns "Standard".
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushType.InnerRadius">
            <summary>
            Gets or sets the inner radius of the brush. The inner radius can be set from 0.0 to 1.0.
            The actual inner radius is then a factor of the terrain scale and the max. brush radius.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushType.OuterRadius">
            <summary>
            Gets or sets the outer radius of the brush. The outer radius can be set from 0.0 
            percent to 100.0 percent.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushTypes.StandardBrushType.CachedThumbnail">
            <summary>
            Gets a cached thumbnail version of the generated brush kernel.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.SmoothBrushElement">
            <summary>
            Applies a box filter to the input data masked by the kernel.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.SmoothBrushElement.#ctor">
            <summary>
            Constructs the smooth brush element.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.SmoothBrushElement.FilterPaintData(Emergent.Toolbench.WorldBuilder.TerrainCore.PaintBuffer,Emergent.Toolbench.WorldBuilder.TerrainCore.PaintBuffer,System.Single)">
            <summary>
            Applies a box smoothing filter to the incoming data.
            </summary>
            <param name="kernelBuffer">GetKernel to use as a mask for the operation.</param>
            <param name="inputBuffer">Source input data.</param>
            <param name="paintDirection"> The direction of painting.</param>
            <returns>Modified output data.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.SmoothBrushElement.Clone">
            <summary>
            Clones the smooth brush element.
            </summary>
            <returns>A deep copy of the smooth brush element.</returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.SmoothBrushElement.BlurWidth">
            <summary>
            Gets or sets the blur width of the Gaussian Filter. The Blur Width controls the width 
            of the filter. The bigger the width the more data to use for the smoothing.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.SmoothBrushElement.DataSourceType">
            <summary>
            Gets the supported data source type. The smooth brush element supports the 
            <see cref="F:Emergent.Toolbench.WorldBuilder.TerrainCore.PaintDataSourceType.Heightmap"/> type.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.SmoothBrushElement.DataSource">
            <summary>
            Gets the required data source string.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainFormatPage">
            <summary>
            Interaction logic for CreateContentRootPage.xaml
            </summary>
            <summary>
            CreateBlankTerrainFormatPage
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainFormatPage.#ctor(Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod)">
            <summary>
            Constructor. Creates the wizard page and lays it out.
            </summary>
            <param name="method">The terrain creation method this page is a part of</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainFormatPage.OnNavigate">
            <summary>
            Handler for wizard page navigation
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainFormatPage.Accept">
            <see>IWizardPage</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainFormatPage.Reject">
            <see>IWizardPage</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainFormatPage.SetCellSizeDropDown">
            <summary>
            Set the choices in the Cell Size drop down menu based on the sector size.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainFormatPage.NotifyPropertyChanged(System.String)">
            <summary>
            Called to notify any listening bindings that a property has changed
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainFormatPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainFormatPage.Title">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainFormatPage.Subtitle">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainFormatPage.CanAdvance">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainFormatPage.CanRetreat">
            <summary>
            Determination as to whether or not the wizard can retreat.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainFormatPage.CanCancel">
            <summary>
            Determination as to whether or not the wizard can cancel.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainFormatPage.PropertyChanged">
            <summary>
            This event is fired when the CanAdvance property changes.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainTexturePage">
            <summary>
            Interaction logic for CreateContentRootPage.xaml
            </summary>
            <summary>
            CreateBlankTerrainTexturePage
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainTexturePage.#ctor(Emergent.Toolbench.WorldBuilder.Terrain.UI.Wizards.TerrainCreationMethod)">
            <summary>
            Constructor. Creates the wizard page and lays it out.
            </summary>
            <param name="method">The terrain creation method this page is a part of</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainTexturePage.OnNavigate">
            <summary>
            Handler for wizard page navigation
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainTexturePage.Accept">
            <see>IWizardPage</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainTexturePage.Reject">
            <see>IWizardPage</see>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainTexturePage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainTexturePage.Title">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainTexturePage.Subtitle">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainTexturePage.CanAdvance">
            <see>IWizardPage</see>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainTexturePage.CanRetreat">
            <summary>
            Determination as to whether or not the wizard can retreat.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateBlankTerrainTexturePage.CanCancel">
            <summary>
            Determination as to whether or not the wizard can cancel.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.Plugin">
            <summary>
            When the terrain core plug-in is loaded, the terrain core service is added to the platform.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Plugin.Start">
            <summary>
            Starts the terrain core plug-in. This method injects the terrain core service into the 
            platform.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Plugin.OnMigrationRequest(System.Object,Emergent.Toolbench.WorldBuilder.TerrainCore.Migration.TerrainMigrateRequestEventArgs)">
            <summary>
            Handler for when a terrain must be migrated. This function will summon
            the terrain migration wizard and allow the user to proceed with the migration there.
            </summary>
            <param name="sender">The requester</param>
            <param name="e">Details of the migration required</param>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayMaterialUIHeader">
            <summary>
            Interaction logic for TerrainRayMaterialUIHeader.xaml
            </summary>
            <summary>
            TerrainRayMaterialUIHeader
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayMaterialUIHeader.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayMaterialUIHeader.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery">
            <summary>
            A query that is used to collect information on the terrain about material at a given point
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery.m_sumBlendValue">
            <summary>
            The sum of all material blend value
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery.m_numMaterials">
            <summary>
            The number of materials
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery.m_materials">
            <summary>
            The list of materials associated with the corresponding blending value
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery.m_rayOrigin">
            <summary>
            The query's point of origin
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery.m_rayDirection">
            <summary>
            The query's point direction
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery.m_mousePoint">
            <summary>
            The mouse point
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery.m_isReady">
            <summary>
            Whether the ray is ready to collide with a terrain
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery.InitializeQuery">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.InitializeQuery"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery.ShutDownQuery">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.ShutDownQuery"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery.ExecuteQuery">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.ExecuteQuery"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery.OnSceneMouseClicked(System.Int32,System.Int32)">
            <summary>
            Event triggered whenever a MouseMovedMessage is received by the TerrainService
            </summary>
            <param name="mouseX">The mouse X coordinate</param>
            <param name="mouseY">The mouse Y coordinate</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery.RayOrigin">
            <summary>
            The query ray start point
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery.RayDirection">
            <summary>
            The query ray direction
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery.MaterialList">
            <summary>
            Returns a collection of the materials
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery.MousePoint">
            <summary>
            The mouse point used for calculation of the 3d and 2d ray start point
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery.NumberOfMaterials">
            <summary>
            The number of materials found
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.Terrain3DMaterialQuery.MaterialBlendingSum">
            <summary>
            The sum of blending values
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.ElevateBrushElement">
            <summary>
            The elevate brush element filters the incoming paint data by increasing or decreasing the 
            pixel values based on the current strength settings. The incoming kernel is used to modulate
            and mask the results.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.ElevateBrushElement.FilterPaintData(Emergent.Toolbench.WorldBuilder.TerrainCore.PaintBuffer,Emergent.Toolbench.WorldBuilder.TerrainCore.PaintBuffer,System.Single)">
            <summary>
            Applies the elevate operation to the incoming data using the kernel as a mask.
            </summary>
            <param name="kernelBuffer">Get paint buffer which contains kernel mask used to control 
            where the affect is applied.</param>
            <param name="inputBuffer">Incoming data to modify.</param>
            <returns>The modified data.</returns>
            <param name="paintDirection">The direction of the painting.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.ElevateBrushElement.UpdateChangedProperty(System.String)">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.TerrainCore.AbstractBrushElement.UpdateChangedProperty(System.String)"/>
            </summary>
            <param name="propertyName">Name of the property</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.ElevateBrushElement.Clone">
            <summary>
            Clones the elevate brush element.
            </summary>
            <returns>A deep copy of the elevate brush element.</returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.ElevateBrushElement.DataSourceType">
            <summary>
            Gets the supported data source type. The elevate brush element supports the 
            <see cref="F:Emergent.Toolbench.WorldBuilder.TerrainCore.PaintDataSourceType.Heightmap"/> type.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.ElevateBrushElement.DataSource">
            <summary>
            Gets the required data source string.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateNewTerrainAction">
            <summary>
            This action is fired when the user clicks the Create New Terrain icon in the WorldBuilder 
            terrain toolbar. It displays a dialog box for the user to enter in terrain specific data 
            after which the new terrain entity is placed in the world.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateNewTerrainAction.m_childAction">
            <summary>
            Terrain entity created by the action and removed/re-added on undo/redo.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateNewTerrainAction.BeginUndo">
            <summary>
            Empty implementation. Nothing necessary when beginning the undo operation. Work occurs
            during the EndUndo method.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateNewTerrainAction.EndUndo">
            <summary>
            Removes the existing terrain entity previously created.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateNewTerrainAction.BeginRedo">
            <summary>
            Empty implementation. Nothing necessary when beginning the redo operation. Work occurs
            during the EndUndo method.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateNewTerrainAction.EndRedo">
            <summary>
            Using the same parameters chosen in the dialog box when the action was executed, 
            re-create the terrain entity and add it to the world.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateNewTerrainAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Displays the NewTerrainDialog UI and, using the chosen user defined values, create a 
            new terrain entity and adds it to the world.
            </summary>
            <param name="context"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateNewTerrainAction.IsUndoable">
            <summary>
            <see cref="P:Emergent.Toolbench.Actions.IUndoableActionHandler.IsUndoable"/>
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateNewTerrainAction.Description">
            <summary>
            <see cref="P:Emergent.Toolbench.Actions.IUndoableActionHandler.IsUndoable"/>
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.CreateNewTerrainAction.ModifiesContent">
            <summary>
            Always returns true since the action adds a new entity to the world.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialListViewFilter">
            <summary>
            This class defines an individual material list view filter.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialListViewFilter.#ctor(Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialListViewFilter.Operation)">
            <summary>
            Creates a new filter MaterialListViewFilter operation of the type specified.
            </summary>
            <param name="op">MaterialListViewFilter enumerated operation type</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialListViewFilter.#ctor(Emergent.Toolbench.WorldBuilder.TerrainCore.MaterialPackage)">
            <summary>
            Creates a new filter MaterialListViewFilter operation to filter the Material List View 
            to display only materials in the specified Material Package and sets the MaterialPackage
            used by the filtering operation.
            </summary>
            <param name="package">MaterialPackage selected for the filter operation</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialListViewFilter.Matches(Emergent.Toolbench.WorldBuilder.TerrainCore.TerrainMaterial)">
            <summary>
            Return true if the MaterialPackage matches the filter.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialListViewFilter.Title">
            <summary>
            Title for a MaterialListViewFilter, displays either a Material Package Name or the 
            'All packages' option.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialListViewFilter.Location">
            <summary>
            Location of package chosen by a MaterialListViewFilter, displays either a Material 
            Package Location or null if the Filter type is not in a material Package (such as 
            the 'All packages' option.)  
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialListViewFilter.Package">
            <summary>
            Gets the Material Package selected by a MaterialListViewFilter.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialListViewFilter.FilterOperation">
            <summary>
            Gets the filter operation performed by a MaterialListViewFilter.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialListViewFilter.Operation">
            <summary>
            Enumerated list of operations performed by MaterialListViewFilter.  
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialListViewFilter.Operation.None">
            <summary>
            This filter will perform no filtering on the objects given to it.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialListViewFilter.Operation.IsInPackage">
            <summary>
            This filter will only pass objects that belong to a particular package.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.SectorManagementFormContextMenuProvider.CreateItems(Emergent.Toolbench.UI.Workbench.DynamicContextMenuEventArgs)">
            <summary>
            Creates the menu items.
            </summary>
            <param name="e">The event arguments.</param>
            <returns>The list of menu items.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialEditorContextMenuProvider">
            <summary>
            This provider is used when a context menu is displayed over a terrain material item in the
            material editor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialEditorContextMenuProvider.CreateItems(Emergent.Toolbench.UI.Workbench.DynamicContextMenuEventArgs)">
            <summary>
            Creates the required menu items for the selected TerrainMaterial
            </summary>
            <param name="e">The context menu creation arguments</param>
            <returns>The list of created items</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQueryUIHeader">
            <summary>
            Interaction logic for TerrainRayQueryUIHeader.xaml
            </summary>
            <summary>
            TerrainRayQueryUIHeader
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQueryUIHeader.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayQueryUIHeader.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayMetaDataUIHeader">
            <summary>
            Interaction logic for TerrainRayMetaDataUIHeader.xaml
            </summary>
            <summary>
            TerrainRayMetaDataUIHeader
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayMetaDataUIHeader.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayMetaDataUIHeader.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayMetaDataUIContent">
            <summary>
            Interaction logic for TerrainRayMetaDataUIContent.xaml
            </summary>
            <summary>
            TerrainRayMetaDataUIContent
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayMetaDataUIContent.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayMetaDataUIContent.SetColumnWidths(System.Windows.Controls.ListView)">
            <summary>
            Function that calculates the available space and divides it equally between all the 
            listview's column that do not have a width set. It also remembers those columns in the 
            ListView's tag property for future reference.
            </summary>
            <param name="listView"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainRayMetaDataUIContent.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor">
            <summary>
            Source behind class for the terrain editor. This class contains a list of brush elements,
            brush categories and brush types and provides the data-binding glue to the UI.
            </summary>
            <summary>
            TerrainEditor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.#ctor">
            <summary>
            Initializes the terrain editor control.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.ExecuteRemoveCurrentBrushElementCommand(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Removes the currently selected brush element.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.CanExecuteRemoveBrushElementCommand(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Determines whether the menu command for removing a single brush element is enabled. The 
            command is enabled if there is a brush element object selected.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.CanExecuteRemoveAllBrushElementsCommand(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Determines whether or not the remove all active brush elements menu item is enabled. The
            command is enabled if there are any active brush elements.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.ExecuteRemoveAllActiveBrushElementsCommand(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Removes all brush elements in the active brush element list.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.OnInitialized(System.EventArgs)">
            <summary>
            Initializes the terrain editor view by querying for the available brush types and brush
            elements from the terrain core service.
            </summary>
            <see cref="T:Emergent.Toolbench.WorldBuilder.TerrainCore.ITerrainCoreService"/>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.OnActiveContentChanged(System.Object,Emergent.Toolbench.ContentService.ActiveContentChangedEventArgs)">
            <summary>
            Called when the active content has changed in Toolbench. This method will unregister the
            setting changed handler from the setting aspect on the content if it exists and 
            register a handler on the new content.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.OnSettingServiceSettingChanged(System.Object,Emergent.Toolbench.Settings.SettingChangedEventArgs)">
            <summary>
            Called when a setting changes in the settings service. If the setting is related to the
            active gizmo, check to see if the active gizmo is the terrain edit gizmo. If it is not, 
            then disable this UI until the terrain editing gizmo is active again.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.OnTerrainProxyInitialized(System.Object,System.EventArgs)">
            <summary>
            Once the C++ terrain services have been initialized, this method is called which 
            activates the currently selected brush type.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="args">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.OnTerrainPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Any time properties are changed on a terrain, this event is called  to allow for 
            required updating of some UIs
            </summary>
            <param name="sender">The object sending the event</param>
            <param name="args">The property arguments</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.AddTerrainBrushType(Emergent.Toolbench.WorldBuilder.TerrainCore.AbstractBrushType,System.Windows.Controls.UserControl)">
            <summary>
            Adds a new terrain brush type to the list of available brush types. This list is then 
            used to populate a combo-box of brush types for the user to choose from.
            </summary>
            <param name="newBrushType">
            Back-end data-bound class used to implement the brush type.
            </param>
            <param name="editorControl">
                Front-end user control used to manipulate the brush type.
            </param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.AddTerrainBrushElement(Emergent.Toolbench.WorldBuilder.TerrainCore.AbstractBrushElement)">
            <summary>
            Adds a new brush element to the list of available brush elements the user can use to 
            paint the terrain.
            </summary>
            <param name="newBrushElement">Instance of the brush element to add.</param>
            <remarks>Brush elements have categories. If a brush element is added and the category 
                already exists, the brush element is added to the category. If the category does 
                not yet exist a new one is created first.
            </remarks>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.AddActiveBrushElement(Emergent.Toolbench.WorldBuilder.TerrainCore.AbstractBrushElement)">
            <summary>
            Adds a new brush element to the list of active brush elements. Active brush elements 
            apply their operation/filter to the incoming terrain data in succession.
            </summary>
            <param name="newBrushElement">Brush element to add.</param>
            <returns>Returns the newly added BrushElementEntry </returns>
            <remarks>Brush elements of the same class can be added multiple times. Therefore, the 
                brush element is cloned first and then added to the list. This is to support the 
                case where one may want to paint different materials with different procedural 
                parameters at the same time.
             </remarks>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.OnBrushCategoryButtonClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the user clicks from of the brush category drop down buttons. This method 
            places a pop-up menu containing the brush elements in the clicked category.
            </summary>
            <param name="sender">Toggle button category clicked.</param>
            <param name="e">Unused.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.OnBrushElementMenuItemClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This method is called when the user clicks on a brush element item in the brush element
            list pop-up window. This method adds the selected brush to the list of active brush 
            elements.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.OnBrushTypesComboBoxSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            This method is called when the user changes the active brush type using the brush types
            combo-box. This method updates the UI to contain the new brush type UI.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.OnActiveBrushElementsComboBoxSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            This method is called when the user changes the active brush selection within the active 
            brushes combo-box. This method updates the UI to highlight the active brush and call 
            selection changed events such as expand brush type options for the instance.
            </summary>
            <param name="sender">ComboBox</param>
            <param name="e">Active Brush Elements selection changed event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.ParseBrushElementDropDownUIExtensionPoint">
            <summary>
            Looks up the extension point for the custom brush element drop down UIs and stores them
            in a list for lookup when brush elements are made active.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.FindBrushElement(System.String)">
            <summary>
            Checks to see if a brush element of the given name exists.
            </summary>
            <param name="brushElementName">Name of the brush element.</param>
            <returns>
                True if a brush element of the specified name exists, false otherwise.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.ParseBrushTypeUIExtensionPoint">
            <summary>
            Looks up the extension point for the UI frontends for various brush types in the terrain
            editing tools.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.OnPropertyChanged(System.String)">
            <summary>
            Called when a property setter gets invoked.
            </summary>
            <param name="propertyName">Name of the property that changed.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.UseMaterialInFilter(Emergent.Toolbench.WorldBuilder.TerrainCore.TerrainMaterial)">
            <summary>
            Creates a material painting brush filter using the given material.
            </summary>
            <param name="currMaterial">The material to use for painting</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.OnMoveDownListClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This function moves the selected brushElement one place later in the GUI brush list and 
            in the associated Filter list.
            </summary>
            <param name="sender">Down Button</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.OnMoveUpListClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This function moves the selected brushElement one place earlier in the UI brushlist and 
            in the associated Filter list.
            </summary>
            <param name="sender">Up Button</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.BrushElements">
            <summary>
            Gets the list of brush element categories known to the view. This is then data-bound 
            to a list of drop down buttons.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.BrushTypes">
            <summary>
            Gets a list of the available brush types. The brush type entry is used to populate a 
            combo-box allowing the user to select the active brush type.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.ActiveBrushElements">
            <summary>
            Gets a list of the active brush elements.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.CurrentBrushTypeControl">
            <summary>
            Gets the UI for the current brush type selected in the brush types combo-box.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.Terrain.UI.TerrainEditor.PropertyChanged">
            <summary>
            This event is used by consumers wishing to receive notifications of property changes.
            (Used mostly by the front end UI data-bound to the object.)
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.IntegerToVisibilityConverter">
            <summary>
            Converter to detect if item is first in the list, and change button visibility accordingly
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.IntegerToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Using an 'index' integer determine a visibility state enum
            </summary>
            <param name="value">index</param>
            <param name="targetType">Visibility enum</param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns>Visibility enum</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.IntegerToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not Used
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.MultipleIntegersToVisibilityConverter">
            <summary>
            Converter to detect if item is last in the list, and change button visibility accordingly
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MultipleIntegersToVisibilityConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Using an 'index' integer and a 'list size' integer determine a visibility state enum
            </summary>
            <param name="value">value[0] is index, value[1] is listSize</param>
            <param name="targetType">Visibility enum</param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns>Visibility enum</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MultipleIntegersToVisibilityConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not Used.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>Always throws.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.MaterialRemovalFormContextMenuProvider.CreateItems(Emergent.Toolbench.UI.Workbench.DynamicContextMenuEventArgs)">
            <summary>
            Creates the menu items.
            </summary>
            <param name="e">The event arguments.</param>
            <returns>The list of menu items.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.PaintMaterialBrushElement">
            <summary>
            Allows the user to pick a material to paint on the terrain and modify the layer masks on 
            the terrain for a given material.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.PaintMaterialBrushElement.#ctor">
            <summary>
            Construct the brush element object
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.PaintMaterialBrushElement.FilterPaintData(Emergent.Toolbench.WorldBuilder.TerrainCore.PaintBuffer,Emergent.Toolbench.WorldBuilder.TerrainCore.PaintBuffer,System.Single)">
            <summary>
            Based on the current material selection, paint using an operation similar to the elevate
            operation only affecting a material mask instead of a height-field.
            </summary>
            <param name="kernelBuffer">Contains kernel used to mask the resulting operation.</param>
            <param name="inputBuffer">Source pixel data from a material mask.</param>
            <param name="paintDirection">The direction of painting.</param>
            <returns>The modified data.</returns>
            
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.PaintMaterialBrushElement.UpdateChangedProperty(System.String)">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.TerrainCore.AbstractBrushElement.UpdateChangedProperty(System.String)"/>
            </summary>
            <param name="propertyName">Name of the property being changed</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.PaintMaterialBrushElement.Clone">
            <summary>
            Clones the paint material brush element.
            </summary>
            <returns>A deep copy of the paint material brush element.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElement">
            <summary>
            Applies perlin noise to the input data.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElement.#ctor">
            <summary>
            Constructs the noise brush element. 
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElement.FilterPaintData(Emergent.Toolbench.WorldBuilder.TerrainCore.PaintBuffer,Emergent.Toolbench.WorldBuilder.TerrainCore.PaintBuffer,System.Single)">
            <summary>
            Using the input kernel as a mask, this brush element applies a perlin noise operation
            to the incoming data where the perlin noise increases and decreases data values.
            </summary>
            <param name="kernelBuffer">Contains kernel to use as a mask for the brush operation.
            </param>
            <param name="inputBuffer">Incoming source data.</param>
            <returns>Modified source data.</returns>
            <param name="paintDirection">The direction of painting.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElement.Clone">
            <summary>
            Clones the noise brush element.
            </summary>
            <returns>A deep copy of the noise brush element.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElement.ReSeedNoise">
            <summary>
            Re-generates the cached noise values with a new random seed.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElement.GenerateNoiseTable(System.Int32,System.Int32,System.Int32)">
            <summary>
            Generates a 2D array of perlin noise values.
            </summary>
            <param name="width">Width of the array.</param>
            <param name="height">Height of the array.</param>
            <param name="seed">Seed </param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElement.Zoom">
            <summary>
            Gets or sets the zoom value of the noise. The zoom controls how many times the noise 
            tiles. More zoom equals less tiling.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElement.Persistence">
            <summary>
            Gets or sets the persistence value when calculating the noise. The persistance is 
            multiplied by the amplitude of the noise for each octave.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElement.Octaves">
            <summary>
            Gets or sets the number of octaves of noise calculated.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElement.NeutralColor">
            <summary>
            Gets or sets the neutral color of noise calculated.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElement.NoiseThumbnail">
            <summary>
            Gets or sets the thumbnail used to preview the current noise settings.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElement.DataSourceType">
            <summary>
            Gets the supported data source type. The noise brush element supports the 
            <see cref="F:Emergent.Toolbench.WorldBuilder.TerrainCore.PaintDataSourceType.Heightmap"/> type.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Terrain.UI.BrushElements.NoiseBrushElement.DataSource">
            <summary>
            Gets the required data source string.
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
