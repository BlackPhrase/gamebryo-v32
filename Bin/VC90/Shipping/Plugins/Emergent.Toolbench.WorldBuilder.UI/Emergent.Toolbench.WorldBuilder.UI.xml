<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emergent.Toolbench.WorldBuilder.UI</name>
    </assembly>
    <members>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityAspectView.OnContentConnected(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Connects the world document content to the view. This method also 
            adds various event handlers to the aspects contained on the 
            document.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityAspectView.OnContentDisconnecting">
            <summary>
            Called when the current content is disconnected from the view. This
            method cleans up the external resources in use on the document and
            its aspects.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.EntityAspectView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityAspectView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityAspectView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.EntityFolderNavigator">
            <summary>
            EntityFolderNavigator
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityFolderNavigator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.WorldBuilder.UI.EntityFolderNavigator"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityFolderNavigator.Navigate(System.Object)">
            <summary>
            Navigates the specified project content.
            </summary>
            <param name="projectContent">The target project content.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityFolderNavigator.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.EntityFolderNavigator.NavigationMode">
            <summary>
            Specifies the type of navigation that is taking place.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.EntityFolderNavigator.NavigationMode.New">
            <summary>
            Navigating to new content.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.EntityFolderNavigator.NavigationMode.Back">
            <summary>
            Navigating back to the most recent content in back navigation history.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.EntityFolderNavigator.NavigationMode.Forward">
            <summary>
            Navigating to the most recent content on forward navigation history.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.WBRootItemViewModel">
            <summary>
            WB-specific ViewModel class for the root item in the palette.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.WBRootItemViewModel.#ctor(Emergent.Toolbench.WorldBuilder.BlockDocument,Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.WorldBuilder.UI.WBRootItemViewModel"/> class.
            </summary>
            <param name="block">The block.</param>
            <param name="projectExplorer">The project explorer.</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.WBRootItemViewModel.Block">
            <summary>
            Gets the block.
            </summary>
            <value>The block.</value>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.WBRootItemViewModel.Factory">
            <summary>
            Gets the factory to create items.
            </summary>
            <value>The factory.</value>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.WBPresetItemViewModel">
            <summary>
            WB-specific ViewModel class for a preset item in the palette.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.WBPresetItemViewModel.#ctor(Emergent.Toolbench.EntityModeling.EntityModelPreset)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.WorldBuilder.UI.WBPresetItemViewModel"/> class.
            </summary>
            <param name="preset">The preset.</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.WBPresetItemViewModel.DefaultCommand">
            <summary>
            Gets the default command. Represents the double-click command.
            </summary>
            <value>The default command.</value>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.WBPresetItemViewModel.ContextMenuProviderKey">
            <summary>
            Gets the context menu provider key name, as defined in the plugin.xml.
            This is overriden for the World Builder items.
            </summary>
            <value>The context menu provider key.</value>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.WBModelItemViewModel">
            <summary>
            WB-specific ViewModel class for a model item in the palette.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.WBModelItemViewModel.#ctor(Emergent.Toolbench.EntityModeling.EntityModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.WorldBuilder.UI.WBModelItemViewModel"/> class.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.WBModelItemViewModel.DefaultCommand">
            <summary>
            Gets the default command. Represents the double-click command.
            </summary>
            <value>The default command.</value>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.WBModelItemViewModel.ContextMenuProviderKey">
            <summary>
            Gets the context menu provider key name, as defined in the plugin.xml.
            This is overriden for the World Builder items.
            </summary>
            <value>The context menu provider key.</value>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.EntityPaletteViewHost">
            <summary>
            Host class for the World Builder palette view.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.EntityPaletteViewHost.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityPaletteViewHost.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityPaletteViewHost.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityPaletteViewHost.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.WorldBuilder.UI.EntityPaletteViewHost"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityPaletteViewHost.OnContentConnected(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Called just after the content has been connected to the view.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityPaletteViewHost.OnContentDisconnected">
            <summary>
            Called just after the content is disconnected from the view.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.SceneQueryDialog">
            <summary>
            Interaction logic for SceneQueryDialog.xaml
            </summary>
            <summary>
            SceneQueryDialog
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryDialog.ShowSceneQueryTool">
            <summary>
            Creates an instance of this class and displays it
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryDialog.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryDialog.OnClosed(System.EventArgs)">
            <summary>
            Removes the "current window" instance data when the dialog is closed.
            </summary>
            <param name="e">Details of the event.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryDialog.OnInitialized(System.EventArgs)">
            <summary>
            Initializes the query dialog by retrieving data for the available Scene queries and Scene
            queries UI elements from the SceneQueryService and the SceneQueryUI extension point.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryDialog.AddSceneQuery(Emergent.Toolbench.WorldBuilder.UI.AbstractSceneQuery)">
            <summary>
            Adds a new Scene query entry to the list of available Scene query entries the user 
            can use to query objects.
            </summary>
            <param name="newSceneQuery">Instance of the Scene query to add.</param>
            <remarks>
                Scene queries have categories. If a Scene query is added and the category 
                already exists, the Scene query is added to the category. If the category does 
                not yet exist a new one is created first. Categories are used to display queries
                in a tab control.
            </remarks>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryDialog.CreateUIInstance(System.String,System.Collections.Generic.Dictionary{System.String,System.Type})">
            <summary>
            Helper function that creates the UI associated with the given name from the given type
            dictionary.
            </summary>
            <param name="queryName">Query to find UI object for</param>
            <param name="reference">Dictionary of UI types</param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryDialog.ParseSceneQueryUIExtensionPoint">
            <summary>
            Looks up the extension point for the custom Scene query elements header UIs and content 
            UIs and stores them in two dictionaries for lookup when the window is created.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.SceneQueryDialog.SceneQueries">
            <summary>
            Gets the list of brush element categories known to the view. This is then data-bound 
            to a list of drop down buttons.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel">
            <summary>
            ViewModel class for a World Builder layer.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.LayerExportHintSettingsId">
            <summary>
            The setting for determining whether or not the layer export hint is enabled.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.m_children">
            <summary>
            The child layer view models for this object.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.m_parent">
            <summary>
             The parent view model for this layer
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.m_layer">
            <summary>
            The actual layer document used by this layer view model
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.m_isExpanded">
            <summary>
            Determine whether or not the treenode is expanded.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.m_isSelected">
            <summary>
            Determine whether or not the treenode is selected.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.m_layerText">
            <summary>
            The computed text information about the layer
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.m_layerStatus">
            <summary>
            The current status of the layer
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.#ctor(Emergent.Toolbench.WorldBuilder.LayerDocument)">
            <summary>
            Construct a root view model
            </summary>
            <param name="layer">The root layer</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.#ctor(Emergent.Toolbench.WorldBuilder.LayerDocument,Emergent.Toolbench.WorldBuilder.UI.LayerViewModel)">
            <summary>
            Construct a child viewmodel
            </summary>
            <param name="layer">The layer</param>
            <param name="parentLayerModel">The layer's parent viewmodel</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.Load(System.Windows.FrameworkElement)">
            <summary>
            Method used when a given viewmodel is first used by the tree.
            </summary>
            <param name="element">The element that is data-bound to this ViewModel.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.Unload(System.Windows.FrameworkElement)">
            <summary>
            Method used when a viewmodel is no longer being used by the tree.
            </summary>
            <param name="element">The element that is data-bound to this ViewModel.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.LocalEntityAspect_EntityRemoved(System.Object,Emergent.Toolbench.WorldBuilder.EntitiesEventArgs)">
            <summary>
            Handler for when entities are removed. The layer text must be updated.
            </summary>
            <param name="sender">Sending object</param>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.LocalEntityAspect_EntityAdded(System.Object,Emergent.Toolbench.WorldBuilder.EntitiesEventArgs)">
            <summary>
            Handler for when entities are added. The layer text must be updated.
            </summary>
            <param name="sender">Sending object</param>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.OnLayerPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Event handler for layer document changes. In particular, we watch Name, Dirty, and
            ReadOnly properties.
            </summary>
            <param name="sender">Source object</param>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.OnLayerAspectPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Event handler for layer aspect changes. In particular, we watch Visible, Locked, and
            IsActive properties.
            </summary>
            <param name="sender">Source object</param>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.OnSettingChanged(System.Object,Emergent.Toolbench.Settings.SettingChangedEventArgs)">
            <summary>
            Event handler for layer document settings changes.
            </summary>
            <param name="sender">Source object</param>
            <param name="eventArgs">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.ComputeLayerText">
            <summary>
            Helper method for computing the text info for a layer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.ComputeLayerStatus">
            <summary>
            Helper method for computing the status of the layer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.SetLayerLocked(System.Boolean,System.Boolean)">
            <summary>
            Helper method for setting the lock state of the layer.
            </summary>
            <param name="value">Is the layer locked or not?</param>
            <param name="recursive">Should this be applied recursively?</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.SetLayerVisible(System.Boolean,System.Boolean)">
            <summary>
            Helper method for setting the visibility state of the layer
            </summary>
            <param name="value">Is the layer visible?</param>
            <param name="recursive">Should this be applied recursively?</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.CreateContextMenu(System.Collections.Generic.IEnumerable{Emergent.Toolbench.WorldBuilder.UI.LayerViewModel})">
            <summary>
            Creates a context menu for the specificed items.
            </summary>
            <param name="items">The items to build the context menu on.  Those are the items
            on which the action will execute.</param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.Utility_ImportLayer">
            <summary>
            Import a layer from file.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.MakeEditable(Emergent.Toolbench.WorldBuilder.LayerDocument)">
            <summary>
            Internal helper to assist users in automatically checking out layers that 
            they are working on.
            </summary>
            <param name="document">The document to check out.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.Utility_NewLayer">
            <summary>
            Create a blank new layer
            </summary>
            <returns>Resulting layer document.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.Utility_NewLayerFromSelection">
            <summary>
            Create a new layer from the current entity selection.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.Utility_DeleteSelectedLayer">
            <summary>
            Delete the selected layer
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.Utility_AddSelectionToLayer(Emergent.Toolbench.WorldBuilder.LayerDocument)">
            <summary>
            Add the current entity selection to the layer.
            </summary>
            <param name="layer">Layer to add entities to</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.Utility_Rename(Emergent.Toolbench.WorldBuilder.LayerDocument)">
            <summary>
            Prompt the user with UI to rename the layer
            </summary>
            <param name="layer">Layer to be renamed</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.Utility_GetAllLayersRecursively(Emergent.Toolbench.WorldBuilder.LayerDocument,System.Collections.Generic.List{Emergent.Toolbench.ContentService.AbstractDocument}@)">
            <summary>
            Get a list of all layers, starting with the specified layer, and recursing through
            all of its descendants.
            </summary>
            <param name="layer">The root layer where the search should begin.</param>
            <param name="layers">A list where all layers will be added.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.Utility_CheckForChanges(Emergent.Toolbench.WorldBuilder.LayerDocument)">
            <summary>
            If the specified layer or one of its descendants is dirty, ask the user if we should
            save changes before proceeding.
            </summary>
            <param name="layer">The layer where we should start checking for dirtyness.</param>
            <returns>ContentChangesResponse.Ok if successful. ContentChangesResponse.Cancel if
            the user cancelled. ContentChangesResponse.ReadOnlyDocumentsExist if the user wanted
            to save but one of the files was read-only and could not be saved. See
            ContentHelpers.CheckForChanges() for more details.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.Utility_SetLayerLoad(Emergent.Toolbench.WorldBuilder.LayerDocument,System.Boolean)">
            <summary>
            Load or unload the specified layer.
            </summary>
            <param name="layer">The layer to load or unload.</param>
            <param name="load">Should the layer be loaded (true) or unloaded (false)?</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.Utility_SetLayerLoadWithoutChildren(Emergent.Toolbench.WorldBuilder.LayerDocument)">
            <summary>
            Load the layer, but force sub-layers to open in the unloaded state.
            </summary>
            <param name="layer">The layer to load.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.SetAsCurrent">
            <summary>
            Set the current document as current.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.AddSelectionToLayer">
            <summary>
            Summary add the current selection to the layer
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.ImportLayer">
            <summary>
            Import a layer as a child of the current layer
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.CreateNewBlankLayer">
            <summary>
            Create a new blank layer as a child of current layer
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.CreateLayerFromSelection">
            <summary>
            Create a new layer from selection
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.Rename">
            <summary>
            Rename the current layer
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.RemoveLayer">
            <summary>
            Remove the current layer
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.SelectAll">
            <summary>
            Select all child entities for this layer
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.ToggleLoadLayer">
            <summary>
            Toggle the load setting of the layer
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.LoadLayerWithoutChildren">
            <summary>
            Load the layer, but force sub-layers to open in the unloaded state.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.ToggleUnhideLayer">
            <summary>
            Toggle the visibility of the layer
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.ToggleUnhideChildren">
            <summary>
            Toggle layer visibility for this layer and its descendants.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.ToggleUnlockLayer">
            <summary>
            Toggle selectability for this layer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.ToggleUnlockChildren">
            <summary>
            Toggle the selectability of this layer and its descendants.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.Children">
            <summary>
            The child layer view models for this object.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.LayerText">
            <summary>
            The computed text information about the layer
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.Name">
            <summary>
            The computed name of the layer
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.LayerStatus">
            <summary>
            The current status of the layer
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.Document">
            <summary>
            The document pointed to by this view model
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.IsLayerActive">
            <summary>
            Is this layer the active layer?
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.CanLoadUnload">
            <summary>
            Can you load/unload this LayerViewModel?
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.CanLoadWithoutChildren">
            <summary>
            Can you load this LayerViewModel without its children?
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.IsLayerLoad">
            <summary>
            Is this layer set to be loaded?
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.CanShowHide">
            <summary>
            Can you show/hide this LayerViewModel?
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.IsLayerVisible">
            <summary>
            Is this layer visible?
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.LayerExportHintEnabled">
            <summary>
            Should the UI be shown for the LayerExportHint option?
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.LayerExportHint">
            <summary>
            Should this layer generate its own xblock file?
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.CanLockUnlock">
            <summary>
            Can you lock/unlock this LayerViewModel?
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.IsLayerLocked">
            <summary>
            Is this layer selectable?
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.IsExpanded">
            <summary>
            Gets/sets whether the TreeViewItem 
            associated with this object is expanded.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.IsSelected">
            <summary>
            Gets/sets whether the TreeViewItem 
            associated with this object is selected.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.Parent">
            <summary>
            The parent view model for this layer
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.GlobalEntityAspect">
            <summary>
            The global entity aspect for this layer document
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.CanChangeParent">
            <summary>
            Determine if this layer can change parentage.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.CanAcceptDrop">
            <summary>
            Determine if this layer can accept drop requests from valid types.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.RevisionStatus">
            <summary>
            Gets the revision status for the layer file.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.ContextMenuProviderKey">
            <summary>
            Gets the context menu provider key name, as defined in the plugin.xml.
            Override this property to change the context menu provider.
            </summary>
            <value>The context menu provider key.</value>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.ItemContextMenu">
            <summary>
            Gets the context menu bound to the current selection.  If no selection, take the 
            context menu of this item.
            </summary>
            <value>The context menu.</value>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.CanSetAsCurrent">
            <summary>
            Can this layer document be set as the current layer?
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.CanAddSelectionToLayer">
            <summary>
            Can a selection be added to this layer?
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.CanImportLayer">
            <summary>
            Can this view model be open for edit?
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.CanCreateChildLayer">
            <summary>
            Can a child layer be created for the current view model?
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.CanRename">
            <summary>
            Can you rename this LayerViewModel?
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.CanRemoveLayer">
            <summary>
            Determine if this layer can be removed
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.CanSelectAll">
            <summary>
            Can you select all entities on this layer?
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.LayerViewModel.Status">
            <summary>
            The current status of the layer, answering the following questions:
            Is the layer active?
            Is the layer readonly?
            Is the layer writable?
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.WBProjectExplorerViewModel">
            <summary>
            WB-specific ViewModel class for the Project Explorer (palette).
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.WBProjectExplorerViewModel.#ctor(Emergent.Toolbench.WorldBuilder.BlockDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.WorldBuilder.UI.WBProjectExplorerViewModel"/> class.
            </summary>
            <param name="project">The project.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.WBProjectExplorerViewModel.Detach">
            <summary>
            Detaches this object and all its content.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.WBProjectExplorerViewModel.SettingIDHelper(System.String)">
            <summary>
            Helper function to generate setting id
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.WBProjectExplorerViewModel.Root">
            <summary>
            Gets the root. Implementation for the WB palette.
            </summary>
            <value>The root.</value>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.WBProjectExplorerViewModel.SettingsAspect">
            <summary>
            Gets the SettingsAspect.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.EntityOptionPanel">
            <summary>
            Interaction logic for EntityOptionPanel.xaml
            </summary>
            <summary>
            EntityOptionPanel
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityOptionPanel.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.SelectionSetHost.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SelectionSetHost.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SelectionSetHost.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SelectionSetHost.OnContentConnected(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Connects the world document content to the view. This method also 
            adds various event handlers to the aspects contained on the 
            document.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SelectionSetHost.OnContentDisconnecting">
            <summary>
            Called when the current content is disconnected from the view. This
            method cleans up the external resources in use on the document and
            its aspects.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.LayerAspectView">
            <summary>
            Class to wrap the LayerTreeView WPF view.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerAspectView.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerAspectView.OnContentConnected(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Connects the world document content to the view. This method also 
            adds various event handlers to the aspects contained on the 
            document.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerAspectView.OnContentDisconnecting">
            <summary>
            Called when the current content is disconnected from the view. This
            method cleans up the external resources in use on the document and
            its aspects.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.LayerAspectView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerAspectView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerAspectView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.WBProjectExplorerController">
            <summary>
            WB-specific controller class for the Project Explorer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.WBProjectExplorerController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.WorldBuilder.UI.WBProjectExplorerController"/> class.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.WBHierarchicalItemContextMenuProvider">
            <summary>
            The context menu provider for the Entity Palette items.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.WBHierarchicalItemContextMenuProvider.MenuActions">
            <summary>
            Gets the menu actions for the provider.
            Special version for the World Builder Entity Palette.
            </summary>
            <value>The menu actions for the World Builder Entity Palette.</value>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.OpenRootLayerOnlyAction">
            <summary>
            Opens the Block with all sub-layers in the Unloaded state, regardless of user settings.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.OpenRootLayerOnlyAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Opens the Block with all sub-layers in the Unloaded state, regardless of user settings.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.OpenRootLayerOnlyAction.CanExecute(Emergent.Toolbench.Actions.ExecutionContext)">
            <summary>
            Determines whether this action can execute in the specified context.
            </summary>
            <param name="context">The execution context.</param>
            <returns>True if the action can execute.</returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.OpenRootLayerOnlyAction.Item">
            <summary>
            Gets or sets the item on which this action was triggered.
            </summary>
            <value>The item.</value>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.ExportWorldAsAction">
            <summary>
            Exports the current block file out to an xblock file, prompting for a location.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.ExportWorldAsAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Performs a block export operation with a user-supplied output folder.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.DataWorldView">
            <summary>
            Central hub of the world builder perspective. 
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.WorldView.DispatchSyncCheck">
            <summary>
            Because we can't guarantee the confirmation comes in that the files on disk were in 
            fact modified before we get the confirmation that saving has occurred, we need to 
            dispatch a request to check to see if a sync is required.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.WorldView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.WorldView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.WorldView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.DataWorldView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.DataWorldView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.DataWorldView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.DataWorldView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.WorldBuilder.UI.WorldView"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.DataWorldView.CreateEntityInstance(Emergent.Toolbench.EntityModeling.EntityModel)">
            <summary>
            Creates a new entity instance using the entity aspect attached to 
            the view. 
            </summary>
            <param name="entityModel">The entity model.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.DataWorldView.OnContentConnected(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Connects the world document content to the view. This method also 
            adds various event handlers to the aspects contained on the 
            document.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.DataWorldView.OnContentDisconnecting">
            <summary>
            Called when the current content is disconnected from the view. This
            method cleans up the external resources in use on the document.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.DataWorldView.OnEntityAdded(Emergent.Toolbench.WorldBuilder.Entity)">
            <summary>
            Called when an entity is added to the entity aspect. This method 
            inserts the new entity instance in the world.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.DataWorldView.OnEntityNameChanged(Emergent.Toolbench.WorldBuilder.Entity)">
            <summary>
            Called when the name of entity has changed. This method will update
            the icon text for the entity.
            </summary>
            <param name="sender">The entity.</param>
            <param name="e">Empty event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.DataWorldView.OnEntityRemoved(Emergent.Toolbench.WorldBuilder.Entity)">
            <summary>
            Called when an entity is removed from the entity aspect connected
            to the world document being displayed by the view.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.DataWorldView.OnEntitySelectionChanged(System.Object,System.EventArgs)">
            <summary>
            Called when the currently selected entity on the entity aspect has
            changed.
            </summary>        
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.DataWorldView.OnDragEnter(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            Called when a drag/drop operation enters the view. If the specified
            object being dragged in the view is an entity model, it is accepted
            else the drop operation is not allowed.
            </summary>        
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.DataWorldView.OnDragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            Called when a drop operation has been completed. This method will 
            create an entity from the specified entity model in the drop event
            data. Note, entity creation and management occurs in the entity 
            aspect connected to the view.
            </summary> 
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.DataWorldView.OnListViewKeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Called when a key is released on the list view. If the key is the
            delete key, the currently selected entity is removed.
            </summary>        
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.DataWorldView.OnSelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Called when the selected item index in the entities list view has 
            changed.
            </summary>        
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.DataWorldView.OnEndLabelEdit(System.Object,System.Windows.Forms.LabelEditEventArgs)">
            <summary>
            Called when an edit label operation has been completed. This method
            will change the name of the entity using the new label.
            </summary>        
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery">
            <summary>
            Scene query interface defining what queries should implement
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.InitializeQuery">
            <summary>
            Function executed when the query dialog is loaded. Any initialization should be
            done here.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.ShutDownQuery">
            <summary>
            Function executed when the query dialog is unloaded. Any shut down code should be 
            done here
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.ExecuteQuery">
            <summary>
            The core execution of the query. This function is not automatically trigerred and but
            should be handled by any event registered in the InitializeQuery function or any
            UI corresponding to the query
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.IsActive">
            <summary>
            Defines whether the query should be executed or not
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.Name">
            <summary>
            The name of the query
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.Category">
            <summary>
            The name of the category the query belongs to
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.Description">
            <summary>
            A short description for the query. This can be set through the extension point
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.LayerViewModelContextMenuProvider">
            <summary>
            Create a dynamic context menu for layer view models.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModelContextMenuProvider.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerViewModelContextMenuProvider.CreateItems(Emergent.Toolbench.UI.Workbench.DynamicContextMenuEventArgs)">
            <summary>
            Create the default menu items for a LayerViewModel.
            </summary>
            <param name="e">The creation arguments.</param>
            <returns>A list of menu items.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.WBProjectItemViewModel">
            <summary>
            WB-specific ViewModel class for EMT projects in the palette.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.WBProjectItemViewModel.#ctor(Emergent.Toolbench.EntityModeling.ModelingProjectDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.WorldBuilder.UI.WBProjectItemViewModel"/> class.
            </summary>
            <param name="project">The project.</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.WBProjectItemViewModel.IsDragSource">
            <summary>
            Gets a value indicating whether this instance is a drag source.
            </summary>
            <value><c>true</c> if this instance is a drag source; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.WBProjectItemViewModel.ContextMenuProviderKey">
            <summary>
            Gets the context menu provider key name, as defined in the plugin.xml.
            This is overriden for the World Builder items.
            </summary>
            <value>The context menu provider key.</value>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.EntityEditorView">
            <summary>
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.EntityEditorView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityEditorView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityEditorView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityEditorView.#ctor">
            <summary>
            Initializes the view.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerDragDropAdvisor.GetViewModelFromUIElement(System.Windows.UIElement)">
            <summary>
            Find the matching viewmodel for a given UI element
            </summary>
            <param name="element">The WPF UI element</param>
            <returns>The relevant LayerViewModel for the element if it exists.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerDragDropAdvisor.FinishDrag(System.Windows.UIElement,System.Windows.DragDropEffects)">
            <summary>
            Finishes the drag operation.
            </summary>
            <param name="draggedElement">The dragged element.</param>
            <param name="effects">The drag and drop effects.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerDragDropAdvisor.GetDataObject(System.Windows.UIElement)">
            <summary>
            Gets the data object to transfer during the drag and drop operation.
            </summary>
            <param name="draggedElement">The dragged element.</param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerDragDropAdvisor.IsDraggable(System.Windows.UIElement)">
            <summary>
            Determines whether the specified element is draggable.
            </summary>
            <param name="element">The element.</param>
            <returns>
                <c>true</c> if the specified element is draggable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerDragDropAdvisor.OnDragEnter(System.Windows.DragEventArgs)">
            <summary>
            Unused implementation.
            </summary>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerDragDropAdvisor.OnDragOver(System.Windows.DragEventArgs)">
            <summary>
            Unused implementation.
            </summary>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerDragDropAdvisor.OnDragLeave(System.Windows.DragEventArgs)">
            <summary>
            Unused implementation.
            </summary>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerDragDropAdvisor.IsValidDropTarget(System.Windows.UIElement,System.Windows.IDataObject,System.Windows.Point)">
            <summary>
            Can the object be dropped here?
            </summary>
            <param name="targetElement">Target UI element to drop onto</param>
            <param name="dataObject">Current dataobject being dragged</param>
            <param name="dropPoint">Device drop point</param>
            <returns>Can the object be dropped here?</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerDragDropAdvisor.OnDropCompleted(System.Windows.UIElement,System.Windows.IDataObject,System.Windows.DragDropEffects,System.Windows.Point)">
            <summary>
            Handler for when the drop completes execution.
            </summary>
            <param name="targetElement">Target UI element to drop onto</param>
            <param name="dataObject">Current dataobject being dragged</param>
            <param name="effects">Any effects on the dragged object</param>
            <param name="dropPoint">Device drop point</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerDragDropAdvisor.SourceUI">
            <summary>
            Gets or sets the source UI.
            </summary>
            <value>The source UI.</value>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerDragDropAdvisor.SupportedEffects">
            <summary>
            Gets the supported drag and drop effects.
            </summary>
            <value>The supported drag and drop effects.</value>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerDragDropAdvisor.TargetUI">
            <summary>
            Gets or sets the target UI.
            </summary>
            <value>The target UI.</value>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityAspectViewModel.Load(System.Windows.FrameworkElement)">
            <summary>
            Called when the viewmodel is bound to the Framework element and the element has 
            finished loading.
            </summary>
            <param name="element">The framework element</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityAspectViewModel.Unload(System.Windows.FrameworkElement)">
            <summary>
            Called when the viewmodel is unloaded because the either the datacontext has changed,
            or the framework element has been unloaded.
            </summary>
            <param name="element">The framework element</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityAspectViewModel.FilterCallback(System.Object)">
            <summary>
            Called for each item being filtered, this callback determines if the entity should 
            appear in the list after a specific filter has been entered.
            </summary>
            <param name="item">The item being filtered.</param>
            <returns><c>true</c> if the item should appear in the list; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityDragDropAdvisor.FinishDrag(System.Windows.UIElement,System.Windows.DragDropEffects)">
            <summary>
            Finishes the drag operation.
            </summary>
            <param name="draggedElement">The dragged element.</param>
            <param name="effects">The drag and drop effects.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityDragDropAdvisor.GetDataObject(System.Windows.UIElement)">
            <summary>
            Gets the data object to transfer during the drag and drop operation.
            </summary>
            <param name="draggedElement">The dragged element.</param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityDragDropAdvisor.IsDraggable(System.Windows.UIElement)">
            <summary>
            Determines whether the specified element is draggable.
            </summary>
            <param name="element">The element.</param>
            <returns>
                <c>true</c> if the specified element is draggable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.EntityDragDropAdvisor.SourceUI">
            <summary>
            Gets or sets the source UI.
            </summary>
            <value>The source UI.</value>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.EntityDragDropAdvisor.SupportedEffects">
            <summary>
            Gets the supported drag and drop effects.
            </summary>
            <value>The supported drag and drop effects.</value>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.EditPaletteModelAction">
            <summary>
            Implements a palette action for jumping to the selected model or preset in the EMT editor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EditPaletteModelAction.CanExecute(Emergent.Toolbench.Actions.ExecutionContext)">
            <summary>
            Determines whether this action can execute in the specified context.
            </summary>
            <param name="context">The execution context.</param>
            <returns>True if the action can execute.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EditPaletteModelAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Called to handle an action executed by the action executor.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.SelectionSetView">
            <summary>
            Interaction logic for EntityView.xaml
            </summary>
            <summary>
            SelectionSetView
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SelectionSetView.OnContentConnected(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Called when the content is connected to the selection set view.
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SelectionSetView.OnContentDisconnecting">
            <summary>
            Called when the current content is disconnected from the view. This
            method cleans up the external resources in use on the document and
            its aspects.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SelectionSetView.OnNewSelectionClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the AddSelection button is clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SelectionSetView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView">
            <summary>
            Interaction logic for LayerTreeView.xaml
            </summary>
            <summary>
            LayerTreeView
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.m_content">
            <summary>
            Current block
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.m_entityAspect">
            <summary>
            Entity aspect for the current block
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.m_root">
            <summary>
            Root viewmodel for the layer tree
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.OnContentConnected(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Called when content is connected.
            </summary>
            <param name="content">Content being connected</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.OnContentDisconnecting">
            <summary>
            Called when the current content is disconnected from the view. This
            method cleans up the external resources in use on the document and
            its aspects.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.ImportLayer_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handler for importing layer.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.NewLayerFromSelection_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handler for creating a new layer from selection.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.NewLayer_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handler for creating a new layer.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.DeleteLayer_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handler for deleting the current layer.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.LayerTree_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Handle delete key being pressed.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.imgLayerLoad_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handle clicking on the Load image.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.imgLayerHidden_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handle clicking on the hidden image.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.imgLayerLocked_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handle clicking on the locked image.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.OnTreeItemMouseRightButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handle selecting the layer on right-mouse click.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.OnTreeItemMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handle selecting the layer on left-mouse click.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.LayerTree_SelectedItemChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            Handler for when the selected item changes in the treeview. We update the layer info text when
            this occurs.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.LayerTree_ContextMenuOpening(System.Object,System.Windows.Controls.ContextMenuEventArgs)">
            <summary>
            Open the context menu for this layer view model
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.LayerTree_ContextMenuClosing(System.Object,System.Windows.Controls.ContextMenuEventArgs)">
            <summary>
            Handle closing the context menu
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.Entities">
            <summary>
            The list of entities attached to this Layer
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.LayerTreeView.CurrentItem">
            <summary>
            Currently selected treeview view model
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.LayerSelectionEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerSelectionEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerSelectionEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.ExtensionPoints">
            <summary>
            This internal class defines the static strings for extension points exposed by the plug-in.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.ExtensionPoints.SceneQuery">
            <summary>
            Exposes an extension point for plug-ins to implement custom terrain queries
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.ExtensionPoints.SceneQueryUI">
            <summary>
            Exposes an extension point for plug-ins to implement custom terrain query UIs
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.TransmogrifyAction">
            <summary>
            
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.TransmogrifyAction.IsUndoable">
            <summary>
            Gets a value indicating if the action is undo-able.
            </summary>
            <remarks>
            Normally this value should be true but if the action can conditionally become 
            non-undo-able, this property should reflect that.
            </remarks>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.EntityView">
            <summary>
            Interaction logic for EntityView.xaml
            </summary>
            <summary>
            EntityView
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityView.OnContentDisconnecting">
            <summary>
            Called when the current content is disconnected from the view. This
            method cleans up the external resources in use on the document and
            its aspects.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityView.OnClearButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the clear button is pressed.
            </summary>
            <param name="sender">The clear button.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.SelectionSetName.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SelectionSetName.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SelectionSetName.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.WBItemFactory">
            <summary>
            Singleton factory class for generating ViewModel instances for EMT items in the palette.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.WBItemFactory.Instance">
            <summary>
            Access to the factory singleton.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.WBItemFactory.Create(System.Object)">
            <summary>
            Creates the specified item view model from a project item.
            </summary>
            <param name="item">The item.</param>
            <returns>The generated view model instance.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.BlockDocumentContextMenuProvider">
            <summary>
            Generates context menu items for block documents in the game solution.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.BlockDocumentContextMenuProvider.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.BlockDocumentContextMenuProvider.CreateItems(Emergent.Toolbench.UI.Workbench.DynamicContextMenuEventArgs)">
            <summary>
            Creates the menu items.
            </summary>
            <param name="e">The event arguments.</param>
            <returns>The list of menu items.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.ExportWorldAction">
            <summary>
            Exports the current block file out to an xblock file.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.ExportWorldAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Performs a block export operation.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.SceneQueryCategoryEntries">
            <summary>
            Simple subclass for a collection of query category entries. Scene query category entries are 
            constructed from the list of available Scene queries where queries are grouped by 
            category.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.ReadOnlySceneQueryCategoryEntries">
            <summary>
            Simple subclass for a readonly collection of query category entries.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.ReadOnlySceneQueryCategoryEntries.#ctor(Emergent.Toolbench.WorldBuilder.UI.SceneQueryCategoryEntries)">
            <summary>
            Constructs a read-only collection from the specified read/write collection of query 
            category entries.
            </summary>
            <param name="collection">Read/write collection of query category entries.</param>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.SceneQueryCategoryEntry">
            <summary>
            This is a simple class used to help in data-binding the list of available Scene query  
            categories.
            </summary>    
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryCategoryEntry.#ctor(System.String)">
            <summary>
            Constructs a new query category entry using the specified category name.
            </summary>
            <param name="categoryName">Name of the query category.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryCategoryEntry.AddQuery(Emergent.Toolbench.WorldBuilder.UI.SceneQueryEntry)">
            <summary>
            Adds a new query to the category. The queries are then retreived from 
            the UI for display.
            </summary>
            <param name="newQuery">The query entry to add.</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.SceneQueryCategoryEntry.CategoryName">
            <summary>
            Gets the name of the query category.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.SceneQueryCategoryEntry.SceneQueryCollection">
            <summary>
            Gets a collection of queries which are then Scene bound to the UI.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.EntityGroupViewModel.Name">
            <summary>
            Gets the name of the group.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.EntityGroupViewModel.Model">
            <summary>
            Gets the model of the group.
            </summary>
            <value>The model.</value>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.EntityGroupViewModel.IsExpanded">
            <summary>
            Gets or sets a value indicating whether this group is expanded.
            </summary>
            <value><c>true</c> if this group is expanded; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.EntityGroupViewModel.Entities">
            <summary>
            Gets the entities.
            </summary>
            <value>The entities.</value>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.AbstractSceneQuery">
            <summary>
            An abstarct implementation of the ISceneQuery Interface. This defines basic functionality 
            for the main properties and functions.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.AbstractSceneQuery.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.AbstractSceneQuery.InitializeQuery">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.InitializeQuery"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.AbstractSceneQuery.ShutDownQuery">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.ShutDownQuery"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.AbstractSceneQuery.ExecuteQuery">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.ExecuteQuery"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.AbstractSceneQuery.NotifyPropertyChanged(System.String)">
            <summary>
            Called when a property setter has been invoked.
            </summary>
            <param name="propertyName">Name of the property that changed.</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.AbstractSceneQuery.Name">
            <summary>
            <see cref="P:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.Name"/>
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.AbstractSceneQuery.Category">
            <summary>
            <see cref="P:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.Category"/>
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.AbstractSceneQuery.Description">
            <summary>
            <see cref="P:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.Category"/>
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.AbstractSceneQuery.IsActive">
            <summary>
            <see cref="P:Emergent.Toolbench.WorldBuilder.UI.ISceneQuery.IsActive"/>
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.UI.AbstractSceneQuery.PropertyChanged">
            <summary>
            This event is fired when a property on the Scene query changes.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.Plugin">
            <summary>
            Handles the starting and stopping of the World Builder UI plug-in.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.Plugin.Start">
            <summary>
            Starts the plug-in.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Plugin.StaticDescriptor">
            <summary>
            Gets the plug-in descriptor.
            </summary>
            <value>The plug-in descriptor.</value>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Plugin.StaticResources">
            <summary>
            Gets the plug-in resources.
            </summary>
            <value>The plug-in resources.</value>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.Point2">
            <summary>
            A helper class that defines a very simple Point2 type to be used by the query dialog
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.Point2.m_x">
            <summary>
            x coordinate
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.Point2.m_y">
            <summary>
            y coordinate
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.Point2.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.Point2.#ctor(System.Single,System.Single)">
            <summary>
            Initialisation constructor
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Point2.X">
            <summary>
            The x coordinate of the point
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Point2.Y">
            <summary>
            The y coordinate of the point
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Point2.StringValue">
            <summary>
            The point as a string taking the format x , y
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Point2.ArrayValue">
            <summary>
            The point as an array of float
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.Point3">
            <summary>
            A helper class that defines a very simple Point3 type to be used by the query dialog
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.Point3.m_z">
            <summary>
            z coordinate
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.Point3.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.Point3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            initialization constructor
            </summary>
            <param name="x">x coordinate</param>
            <param name="y">y coordinate</param>
            <param name="z">z coordinate</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Point3.Z">
            <summary>
            the z coordinate attribute
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Point3.StringValue">
            <summary>
            The point as a string taking the format x , y only displaying 2 decimals
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Point3.ArrayValue">
            <summary>
            The point as an array of float
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.Point2ValidationRule">
            <summary>
            This validation rule makes sure the string we are setting can be converted into a Point2
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.Point2ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Checks a given string can be converted to a Point2
            </summary>
            <param name="value">Value to check.</param>
            <param name="cultureInfo">Culture information.</param>
            <returns>Valid if the filename exists.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.Point3ValidationRule">
            <summary>
            This validation rule makes sure the string we are setting can be converted into a Point3
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.Point3ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Checks a given string can be converted to a Point3
            </summary>
            <param name="value">Value to check.</param>
            <param name="cultureInfo">Culture information.</param>
            <returns>Valid if the filename exists.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.FloatValidationRule">
            <summary>
            This validation rule makes sure the string we are setting can be converted into a float
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.FloatValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Checks a given filename exists and that it is valid for usage by toolbench.
            </summary>
            <param name="value">Value to check.</param>
            <param name="cultureInfo">Culture information.</param>
            <returns>Valid if the filename exists.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.LayerNameDialog">
            <summary>
            Helper form for changing a layer name
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.LayerNameDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerNameDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerNameDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerNameDialog.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentLayerName">Current layer name</param>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.LayerNameDialog.LayerName">
            <summary>
            Current layer name
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerNameDialog.OKButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handler for OK
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.LayerNameDialog.LayerNameDialog_Load(System.Object,System.EventArgs)">
            <summary>
            Shows the current layer name on first show
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event</param>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.EntityFolderLayout">
            <summary>
            Interaction logic for EntityFolderLayout.xaml
            </summary>
            <summary>
            EntityFolderLayout
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityFolderLayout.OnContentDisconnecting">
            <summary>
            Called when the current content is disconnected from the view. This
            method cleans up the external resources in use on the document and
            its aspects.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityFolderLayout.UpdateFilter">
            <summary>
            Called when the filter text is updated, it should be called using the dispatcher so
            that the filtering does not lock up the UI.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityFolderLayout.FilterCallback(System.Object)">
            <summary>
            Called for each item being filtered, this callback determines if the entity should 
            appear in the list after a specific filter has been entered.
            </summary>
            <param name="item">The item being filtered.</param>
            <returns><c>true</c> if the item should appear in the list; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityFolderLayout.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.ViewSceneQueryAction">
            <summary>
            Action allowing the display of the SceneQueryDialog
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.ViewSceneQueryAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Shows the properties of the current terrain object
            </summary>
            <param name="context">Not used</param>
            <param name="style">Not used</param>
            <returns>Failed if an exception occurred</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.WBVirtualFolderItemViewModel">
            <summary>
            WB-specific ViewModel class for virtual folder items in the palette.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.WBVirtualFolderItemViewModel.#ctor(Emergent.Toolbench.EntityModeling.VirtualFolder)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.WorldBuilder.UI.WBVirtualFolderItemViewModel"/> class.
            </summary>
            <param name="virtualFolder">The virtual folder.</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.WBVirtualFolderItemViewModel.DefaultCommand">
            <summary>
            Gets the default command. Represents the double-click command.
            </summary>
            <value>The default command.</value>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.WBVirtualFolderItemViewModel.IsDragSource">
            <summary>
            We are a drag source.
            </summary>
            <value><c>true</c>, indicating this instance is a drag source.</value>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.WBVirtualFolderItemViewModel.ContextMenuProviderKey">
            <summary>
            Gets the context menu provider key name, as defined in the plugin.xml.
            This is overriden for the World Builder items.
            </summary>
            <value>The context menu provider key.</value>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.BrowseViewName">
            <summary>
              Looks up a localized string similar to Browse.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.CannotAddEntityToUnloadedLayer">
            <summary>
              Looks up a localized string similar to Cannot add an entity to an unloaded layer..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.CannotAddSubLayerToUnloadedLayer">
            <summary>
              Looks up a localized string similar to Cannot add a sub-layer to an unloaded layer..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.CannotDeleteUnloadedLayer">
            <summary>
              Looks up a localized string similar to Cannot delete an unloaded layer..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.CannotEditSettingsOnUnloadedLayer">
            <summary>
              Looks up a localized string similar to Cannot edit settings on an unloaded layer..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.CanNotRemoveNonEmptyFolder">
            <summary>
              Looks up a localized string similar to Unable to remove folders that are not empty.  Please remove anything inside the folder first..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.CannotRenameUnloadedLayer">
            <summary>
              Looks up a localized string similar to Cannot rename an unloaded layer..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.CreateEntityError">
            <summary>
              Looks up a localized string similar to Error Creating Entity.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.CreateEntityErrorReason">
            <summary>
              Looks up a localized string similar to Unable to create an entity of type {0}.  Please make sure that the model being used to create the entity is coming from a valid source; for example, the Entity Palette View.  If you are still encountering this error, it is likely that you have conflicting model names coming from 2 or more separate model projects..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.EntityNotFound_UnloadedLayerInfo">
            <summary>
              Looks up a localized string similar to  (but it appears to exist in a layer that is currently unloaded: {0}).
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.EntityNotFound_Warning">
            <summary>
              Looks up a localized string similar to Target entity &quot;{0}&quot; does not exist{1}..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.EntityNotFoundDisplayText">
            <summary>
              Looks up a localized string similar to {0} (not found!).
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.EntityRefTooltip">
             <summary>
               Looks up a localized string similar to Name: {0}
            ID: {1}
            Layer: {2}.
             </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.EntityUnloadedDisplayText">
            <summary>
              Looks up a localized string similar to {0} (was in unloaded layer &quot;{1}&quot;).
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.ErrorLayerAlreadyLoaded">
            <summary>
              Looks up a localized string similar to Layer already loaded..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.ErrorLayerAlreadyUnloaded">
            <summary>
              Looks up a localized string similar to Layer already unloaded..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.FailedModelRestrictionDummyEntityName">
            <summary>
              Looks up a localized string similar to {0} (does not mix-in the required model &quot;{1}&quot;).
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.HideLayerAndChidren">
            <summary>
              Looks up a localized string similar to Hide layer and children.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.LayerTextFormat_Loaded">
             <summary>
               Looks up a localized string similar to Path: {0}
            EntityCount: {1}.
             </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.LayerTextFormat_Unloaded">
             <summary>
               Looks up a localized string similar to Path: {0}
            (Layer not loaded).
             </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.LockLayerAndChidren">
            <summary>
              Looks up a localized string similar to Lock layer and children.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.ModelRestrictionMismatch">
            <summary>
              Looks up a localized string similar to Model Restriction Mismatch.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.PickEntity">
            <summary>
              Looks up a localized string similar to Pick Entity.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.RestrictionErrorTitle">
            <summary>
              Looks up a localized string similar to Restriction Error.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.SearchViewName">
            <summary>
              Looks up a localized string similar to Search.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.SelectedEntityFailsModelRestriction">
            <summary>
              Looks up a localized string similar to The selected entity does not mix-in the required model &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.SyncWarning">
             <summary>
               Looks up a localized string similar to The following entities will be unreferenced after the sync.
            
            {0}
            
            All unreferenced entities will be automatically removed.
            Do you want to proceed anyway?.
             </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.TransmogrifySelectEntities">
            <summary>
              Looks up a localized string similar to Please select some entities to transmogrify..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.TransmogrifySelectModel">
            <summary>
              Looks up a localized string similar to Please select a model in the model palette before you attempt to transmogrify any entities..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.UnableToFindPaletteAspect">
            <summary>
              Looks up a localized string similar to Unable to create entities. The entity palette aspect could not be located..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.UnableToRetrieveEntityAspect">
            <summary>
              Looks up a localized string similar to Unable to retrieve entity aspect from the block document..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.UnableToRetrievePaletteAspect">
            <summary>
              Looks up a localized string similar to Unable to retrieve entity palette aspect from the block document..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.UnableToRetrieveSelectionSetAspect">
            <summary>
              Looks up a localized string similar to Unable to retrieve selection set aspect from the block document..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.UnHideLayerAndChidren">
            <summary>
              Looks up a localized string similar to Unhide layer and children.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.UnloadLayerAborted">
            <summary>
              Looks up a localized string similar to Unload layer operation aborted..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.UnlockLayerAndChidren">
            <summary>
              Looks up a localized string similar to Unlock layer and children.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.Properties.Resources.WarningTitle">
            <summary>
              Looks up a localized string similar to Warning.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.ISceneQueryService">
            <summary>
            Scene query service interface that defines how the Scene query service should be implemented
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQueryService.FindSceneQueryByName(System.String)">
            <summary>
            Returns the Scene query associated with the given name
            </summary>
            <param name="name">The name of the query we are looking for</param>
            <returns>The Scene query found</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQueryService.ShutDownQueries">
            <summary>
            Parses all queries and calls their ShutDownQuery function
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQueryService.InitializeQueries">
            <summary>
            Parses all queries and calls their InitializeQuery function
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.ISceneQueryService.SceneQueries">
            <summary>
            Gets a list of the Scene queries known to the system. Scene queries are registered 
            with the Scene query extension point.
            </summary>
            <see cref="T:Emergent.Toolbench.WorldBuilder.UI.ExtensionPoints"/>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.ISceneQueryService.Categories">
            <summary>
            Gets a list of the Scene queries categories known to the system. Categories are 
            registered with the SceneQuery extension point.
            </summary>
            <see cref="T:Emergent.Toolbench.WorldBuilder.UI.ExtensionPoints"/>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor">
            <summary>
            Represents an editor for the entity ref type.
            </summary>
            <summary>
            EntityRefEditor
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.SelectionWarningProperty">
            <summary>
            String property that is either null, if everything is fine, or a warning message
            regarding a problem with the current EntityRef (for example if the target doesn't
            exist or doesn't pass the current Restriction).
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.SelectionWarningTitleProperty">
            <summary>
            String property that represents the title for the SelectionWarning, if any.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.OnLayerPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when any property of any layer has changed.
            </summary>
            <param name="sender">The layer.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.OnRestrictionChanged(Emergent.Toolbench.TypeService.RestrictionEventArgs)">
            <summary>
            Invoked whenever the restriction has changed.
            </summary>
            <param name="e">The <see cref="T:Emergent.Toolbench.TypeService.RestrictionEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.CreateDummyForMissingTarget(Emergent.Toolbench.TypeService.Types.EntityRef,Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.DummyEntity@,System.String@,System.String@)">
            <summary>
            Creates a DummyEntity instance representing the missing Entity.
            </summary>
            <param name="entityRef">The invalid entity ref.</param>
            <param name="dummyEntity">The dummy entity representing the missing target.</param>
            <param name="warning">The text for the warning icon's tooltip.</param>
            <param name="warningTitle">The title for the warning icon's tooltip.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.CreateDummyIfFailedRestriction(Emergent.Toolbench.WorldBuilder.Entity,Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.DummyEntity@,System.String@,System.String@)">
            <summary>
            Creates a DummyEntity instance representing the invalid Entity.
            </summary>
            <param name="targetEntity">The invalid target entity.</param>
            <param name="dummyEntity">The dummy entity representing the invalid target.</param>
            <param name="warning">The text for the warning icon's tooltip.</param>
            <param name="warningTitle">The title for the warning icon's tooltip.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.UpdateItemsSource(Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.DummyEntity@,System.Boolean@)">
            <summary>
            Checks if the ItemsSource is valid and can be updated with the specified dummyEntity,
            or if a new ItemsSources should be created instead.
            </summary>
            <param name="dummyEntity">The dummy entity. Note that if a valid DummyEntity is already
            available in the list, it will be kept, and this parameter will be updated to refer
            to that DummyEntity.</param>
            <param name="needNewItemsSource">Will be set to true if a new ItemsSource needs to be
            created; false if the existing ItemsSource can be kept (and either has been updated to
            add the specified DummyEntity, or a valid DummyEntity was already in the list and is
            now referred to by the dummyEntity parameter.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.SelectionWarning">
            <summary>
            String property that is either null, if everything is fine, or a warning message
            regarding a problem with the current EntityRef (for example if the target doesn't
            exist or doesn't pass the current Restriction).
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.SelectionWarningTitle">
            <summary>
            String property that represents the title for the SelectionWarning, if any.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.DummyEntity">
            <summary>
            Temporary Entity that is used as the current selection in the combo when
            our EntityRef targets an entity that doesn't exist.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.DummyEntity.#ctor(System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.DummyEntity"/> class.
            </summary>
            <param name="name">The name to be displayed by this dummy entity.</param>
            <param name="id">The id of the faulty target entity.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.DummyEntity.#ctor(Emergent.Toolbench.TypeService.Types.EntityRef,Emergent.Toolbench.WorldBuilder.GlobalEntityAspect.HierarchyState)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.DummyEntity"/> class.
            </summary>
            <param name="entityRef">The faulty entity reference</param>
            <param name="hierarchyState">State of the layers hierarchy.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.DummyEntity.Create(System.String,System.Guid)">
            <summary>
            Creates a new <see cref="T:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.DummyEntity"/> instance with the specified name and ID.
            </summary>
            <param name="name">The name for the new <see cref="T:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.DummyEntity"/>.</param>
            <param name="id">The id for the new <see cref="T:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.DummyEntity"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.DummyEntity.Create(Emergent.Toolbench.TypeService.Types.EntityRef,Emergent.Toolbench.WorldBuilder.GlobalEntityAspect.HierarchyState)">
            <summary>
            Creates a new <see cref="T:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.DummyEntity"/> instance representing a non-existing entity
            targeted by the specified EntityRef.
            </summary>
            <param name="entityRef">The entity reference that points to an invalid target.</param>
            <param name="hierarchyState">State of the layers hierarchy
            (see <see cref="T:Emergent.Toolbench.WorldBuilder.GlobalEntityAspect.HierarchyState"/>).</param>
            <returns>The new <see cref="T:Emergent.Toolbench.WorldBuilder.UI.EntityRefEditor.DummyEntity"/> instance.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.EntityRefTooltipTextConverter">
            <summary>
            Converter that takes an EntityRef and returns a string to be used as the tooltip for
            this EntityRef. No EntityRef, or an EntityRef with no target, returns a null string.
            Otherwise the tooltip contains the target's name, ID and layer hierarchy.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityRefTooltipTextConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts an EntityRef instance to a string to be used as the tooltip for this EntityRef.
            </summary>
            <param name="value">The EntityRef.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use (ignored).</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityRefTooltipTextConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Back converter (NOT IMPLEMENTED).
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.SceneQueryService">
            <summary>
            The DataQueryService loads the DataQuery extension points and tracks which category each 
            query belongs to.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryService.#ctor">
            <summary>
            Constructs the terrain query service.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryService.LoadExtensions">
            <summary>
            Looks through the Toolbench extension registry to find implementations of terrain 
            queries which are stored on this class for reference by other plug-ins.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryService.FindSceneQueryByName(System.String)">
            <summary>
            Parses through all registered queries untill it finds the first query with the given 
            name.
            <see cref="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQueryService.FindSceneQueryByName(System.String)"/>
            </summary>
            <param name="name">Name of the data query we are looking for</param>
            <returns>The resulting data query</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryService.ShutDownQueries">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQueryService.ShutDownQueries"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryService.InitializeQueries">
            <summary>
            <see cref="M:Emergent.Toolbench.WorldBuilder.UI.ISceneQueryService.InitializeQueries"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryService.Initialize">
            <summary>
            Initializes the DataQueryService by loading the extensions from the extension registry.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryService.Dispose">
            <summary>
            Disposes of the paint processor
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.SceneQueryService.SceneQueries">
            <summary>
            Returns a read only collection of data queries.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.SceneQueryService.Categories">
            <summary>
            Gets a list of the data queries categories known to the system. Categories are 
            registered with the TerrainDataQuery extension point.
            </summary>
            <see cref="T:Emergent.Toolbench.WorldBuilder.UI.ExtensionPoints"/>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.SceneQueryService.Name">
            <summary>
            <see cref="P:Emergent.Toolbench.IService.Name"/>
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.FolderAddAction">
            <summary>
            This action handles adding a new folder to a the folder view of entities in the world.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.FolderAddAction.#ctor(Emergent.Toolbench.WorldBuilder.UI.EntityFolderLayout)">
            <summary>
            Constructs the new action using the specified folder layout as the control in which to 
            interact with when adding a new folder and undo/redo of the operation.
            </summary>
            <param name="folderLayout">Control containing the folder view of entities.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.FolderAddAction.BeginUndo">
            <summary>
            Starts the undo operation. This method removes the newly added folder from the entity
            folder view.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.FolderAddAction.EndUndo">
            <summary>
            Ends the undo. Empty implementation.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.FolderAddAction.BeginRedo">
            <summary>
            Starts the redo operation. This method adds the new folder back to the entity folder
            view.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.FolderAddAction.EndRedo">
            <summary>
             Ends the redo. Empty implementation.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.FolderAddAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Executes the folder add action. This method first adds the new entity folder to the 
            parent folder's item list then dispatches calls for inserting the UI element and 
            allowing the user to type a name for the folder.
            </summary>
            <param name="context">Context in which the action is executing.</param>
            <param name="style">Type of execution.</param>
            <returns>Success.</returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.FolderAddAction.IsUndoable">
            <summary>
            This operation is undoable.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.FolderAddAction.Description">
            <summary>
            Gets the description for the action.
            <return>"Add new folder"</return>
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.FolderAddAction.ModifiesContent">
            <summary>
            Since we are modifying the folder view of entities which needs to persist, this action
            modifies the content.
            <return>True</return>
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.EntityModelLayout">
            <summary>
            Interaction logic for EntityModelLayout.xaml
            </summary>
            <summary>
            EntityModelLayout
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityModelLayout.OnContentDisconnecting">
            <summary>
            Called when the current content is disconnected from the view. This
            method cleans up the external resources in use on the document and
            its aspects.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityModelLayout.UpdateFilter">
            <summary>
            Called when the filter text is updated, it should be called using the dispatcher so
            that the filtering does not lock up the UI.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityModelLayout.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.SceneQueryEntry">
            <summary>
            Class that facilitates the displaying on Scene queries. It is defined by a ISceneQuery object
            and the two associated UserControl object that will help display information for the query.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryEntry.#ctor(Emergent.Toolbench.WorldBuilder.UI.AbstractSceneQuery,System.Windows.Controls.UserControl,System.Windows.Controls.UserControl)">
            <summary>
            Constructs a new brush element entry.
            </summary>
            <param name="query">The data query instance.</param>
            <param name="queryHeaderUI">Custom UI used by a particular query to display important
            information in an expander header.</param>
            <param name="queryContentUI">Custom UI used by a particular query to display and tweak 
            if necessary parameters within an expander's content</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.SceneQueryEntry.NotifyPropertyChanged(System.String)">
            <summary>
            Called when a property setter has been invoked.
            </summary>
            <param name="propertyName">Name of the property that changed.</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.SceneQueryEntry.SceneQuery">
            <summary>
            Gets the Scene query instance.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.SceneQueryEntry.SceneQueryUIHeader">
            <summary>
            Gets the user control that should be displayed in the expander's header.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.SceneQueryEntry.SceneQueryUIContent">
            <summary>
            Gets the user control that should be displayed when the UI is expanded.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.SceneQueryEntry.IsExpanded">
            <summary>
            Tracks whether the associated UI is expanded or not
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.SceneQueryEntry.IsActive">
            <summary>
            Tracks whether the query's check box was checked. This controls whether the associated
            query will be executed or not
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.UI.SceneQueryEntry.IsVisible">
            <summary>
            Tracks whether the query is visible or not. A query will not be executed if the 
            category it belongs to is not the selected tab.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.UI.SceneQueryEntry.PropertyChanged">
            <summary>
            This event is fired when a property on the Scene query changes.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.UI.EntityAlphabeticLayout">
            <summary>
            Interaction logic for EntityAlphabeticLayout.xaml
            </summary>
            <summary>
            EntityAlphabeticLayout
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityAlphabeticLayout.OnContentDisconnecting">
            <summary>
            Called when the current content is disconnected from the view. This
            method cleans up the external resources in use on the document and
            its aspects.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityAlphabeticLayout.UpdateFilter">
            <summary>
            Called when the filter text is updated, it should be called using the dispatcher so
            that the filtering does not lock up the UI.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityAlphabeticLayout.FilterCallback(System.Object)">
            <summary>
            Called for each item being filtered, this callback determines if the entity should 
            appear in the list after a specific filter has been entered.
            </summary>
            <param name="item">The item being filtered.</param>
            <returns><c>true</c> if the item should appear in the list; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.UI.EntityAlphabeticLayout.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.RearrangeLayerAction.IsUndoable">
            <summary>
            Gets a value indicating if the action is undo-able.
            </summary>
            <remarks>
            Normally this value should be true but if the action can conditionally become 
            non-undo-able, this property should reflect that.
            </remarks>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.RearrangeLayerAction.Description">
            <summary>
            Gets a description used to display information about the undo/redo
            operation to the user.
            </summary>
            <value>The label.</value>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
