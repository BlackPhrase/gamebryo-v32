<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emergent.Toolbench.EntityModeling.UI</name>
    </assembly>
    <members>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ThumbnailHelper">
            <summary>
            Helper class for retrieving a thumbnail image.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ThumbnailHelper.GetImageThreadsafe(System.String)">
            <summary>
            Static method to get an image in a threadsafe manner that will act as a WPF thumbnail.
            </summary>
            <param name="image">Full path of the image.</param>
            <returns>The bitmap image.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ThumbnailHelper.GetThumbnail(Emergent.Toolbench.EntityModeling.EntityModelFlatView,System.String)">
            <summary>
            Gets a thumbnail using the <see cref="T:Emergent.Toolbench.Gamebryo.ThumbnailExtractor"/>, or falling back to a
            default.
            </summary>
            <param name="flatView">The flat view of the model to get the thumbnail for.</param>
            <param name="defaultThumbnail">The default thumbnail if none is found.</param>
            <returns>The WPF ImageSource for the thumbnail.</returns>
        </member>
        <member name="E:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ThumbnailHelper.ThumbnailInvalidated">
            <summary>
            Occurs when a thumbnail is invalidated.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ThumbnailHelper.ThumbnailInvalidatedEventHandler">
            <summary>
            Delegate for handling thumbnail invalidation.
            </summary>
            <param name="sender">The event sender.</param>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewHost.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewHost.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewHost.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewHost.ProjectExplorerView">
            <summary>
            Gets the project explorer view.
            </summary>
            <value>The project explorer view.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddDiagramAction">
            <summary>
            Implements the action for adding a new diagram to an EMT project.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddProjectContentAction">
            <summary>
            Base class for implementing actions to add new items to an EMT project.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerAction">
            <summary>
            A base class for implementing actions in the Project Explorer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerAction.CanExecute(Emergent.Toolbench.Actions.ExecutionContext)">
            <summary>
            Determines whether this action can execute in the specified context.
            </summary>
            <param name="context">The execution context.</param>
            <returns>True if the action can execute.</returns>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerAction.Items">
            <summary>
            Gets or sets the associated ViewModel items.
            </summary>
            <value>The associated ViewModel items.</value>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddProjectContentAction.#ctor(System.String,Emergent.Toolbench.EntityModeling.ModelingProjectDocument.ObjectType)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddProjectContentAction"/> class.
            </summary>
            <param name="description">The action description.</param>
            <param name="objType">Type of item to add.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddProjectContentAction.CanExecute(Emergent.Toolbench.Actions.ExecutionContext)">
            <summary>
            Determines whether this action can execute in the specified context.
            </summary>
            <param name="context">The context.</param>
            <returns>True if this action can execute.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddProjectContentAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Called to handle an action executed by the action executor.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddDiagramAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddDiagramAction"/> class.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.EmptyEditor">
            <summary>
            This editor is used by the navigation system when the navigated object is no longer 
            available in the solution.
            </summary>
            <summary>
            EmptyEditor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EmptyEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.EmptyEditor"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EmptyEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.AddMixinTooltip">
            <summary>
            Interaction logic for ConnectorTooltip.xaml
            </summary>
            <summary>
            AddMixinTooltip
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.AddMixinTooltip.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.AddMixinTooltip.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.AddMixinTooltip.HasError">
            <summary>
            Gets or sets a value indicating whether we show the error state
            </summary>
            <value><c>true</c> if this instance has error; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PropertyVisualizerNameValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            When overridden in a derived class, performs validation checks on a value.
            </summary>
            <param name="value">The value from the binding target to check.</param>
            <param name="cultureInfo">The culture to use in this rule.</param>
            <returns>
            A <see cref="T:System.Windows.Controls.ValidationResult"/> object.
            </returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchView">
            <summary>
            Interaction logic for SearchView.xaml
            </summary>
            <summary>
            SearchView
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchView"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchView.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            OnLoaded - explicity setting combo IsEnabled to avoid binding issues when going back
            and forth between multiple emtproj's and between browse / search tabs.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemContextMenuProvider">
            <summary>
            Generates valid context menus for Project Explorer items.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemContextMenuProvider.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemContextMenuProvider.CreateItems(Emergent.Toolbench.UI.Workbench.DynamicContextMenuEventArgs)">
            <summary>
            Creates the menu items for a specific context.
            </summary>
            <param name="e">The
            <see cref="T:Emergent.Toolbench.UI.Workbench.DynamicContextMenuEventArgs"/> instance
            containing the event data.</param>
            <returns>The generated menu items.</returns>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemContextMenuProvider.MenuActions">
            <summary>
            Gets the menu actions for the provider.
            Override this function to provide special menus.
            </summary>
            <value>The menu actions.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemContextMenuProvider.MenuAction">
            <summary>
            Defines an action in a menu item.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemContextMenuProvider.MenuAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemContextMenuProvider.MenuAction"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemContextMenuProvider.MenuAction.#ctor(System.String,System.Type,Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemContextMenuProvider.MenuAction.SelectionType,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemContextMenuProvider.MenuAction"/> class.
            </summary>
            <param name="name">The action name.</param>
            <param name="itemType">Item type required for the action.</param>
            <param name="selection">The selection requirement.</param>
            <param name="validForRef">Whether the action is available on referenced items.
            </param>
            <param name="classification">The classification string.</param>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemContextMenuProvider.MenuAction.Name">
            <summary>
            Gets or sets the name of the Action, as specified in the plugin.xml.
            </summary>
            <value>The action name.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemContextMenuProvider.MenuAction.ItemType">
            <summary>
            Gets or sets the C# Type for which this action is valid.
            </summary>
            <value>The type of item required.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemContextMenuProvider.MenuAction.Selection">
            <summary>
            Gets or sets the selection compatibility for this menu item.
            Can be SingleSelection or MultipleSelection.
            </summary>
            <value>The selection requirement.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemContextMenuProvider.MenuAction.ValidForReference">
            <summary>
            Gets or sets whether this action can be applied to a reference of the type.
            </summary>
            <value><c>true</c> if the action is valid on referenced items; otherwise,
            <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemContextMenuProvider.MenuAction.Classification">
            <summary>
            Gets or sets a string-based classification for the action that allows easy
            addition/ommission of entire sets of actions.
            </summary>
            <value>The classification string.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemContextMenuProvider.MenuAction.SelectionType">
            <summary>
            Enumerates types of selection required for actions.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemContextMenuProvider.MenuAction.SelectionType.SingleSelection">
            <summary>
            When the action is only possible with single selection.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemContextMenuProvider.MenuAction.SelectionType.MultipleSelection">
            <summary>
            When the action is possible with multiple selection.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.NewPresetAction">
            <summary>
            Implements the action for adding a new preset to an EMT project.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.NewPresetAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.NewPresetAction"/> class.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseToLocationAction">
            <summary>
            Implements the action for adding a new model to an EMT project.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseToLocationAction.CanExecute(Emergent.Toolbench.Actions.ExecutionContext)">
            <summary>
            Determines whether this action can execute in the specified context.
            </summary>
            <param name="context">The execution context.</param>
            <returns>True if the action can execute.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseToLocationAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Called to handle an action executed by the action executor.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl">
            <summary>
            DiagramEditorControl
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.NewEntityModel_Executed(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Handles the Executed event of the NewEntityModel control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.NewPreset_Executed(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Handles the Executed event of the NewEntityModel control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.GetNewModelPosition(System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Gets the position to create a new model.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> 
            instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.CreateNewModel(System.String,Emergent.Toolbench.EntityModeling.ModelingProjectDocument.ObjectType,System.Windows.Point)">
            <summary>
            Creates the new model.
            </summary>
            <param name="actionName">Name of the action.</param>
            <param name="objType">Type of the object.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.DeleteEntityModel_Executed(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Handles the Executed event of the DeleteEntityModel control.
            This will remove the selection from the diagram and project.  It will also clear
            associated files.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.RemoveEntityModel_Executed(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Handles the Executed event of the RemoveEntityModel control.
            This will remove the model from the diagram only.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.ConvertTo(Emergent.Toolbench.EntityModeling.ModelingProjectDocument.ObjectType)">
            <summary>
            Converts a model to a preset (or vice-versa).
            </summary>
            <param name="convertType">Type of the desired object.</param>
            <returns>The new object</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.InitBounds">
            <summary>
            Initializes the bounds of the canvas shown in the control.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.ComputeContentBounds">
            <summary>
            Computes the sum of the bounds of the Entity Model boxes.
            </summary>
            <returns>The bounds</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.EnlargeBounds(System.Windows.Rect@)">
            <summary>
            Enlarges the bounds to allow zooming.
            </summary>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.AddViewportToBounds(System.Windows.Rect@)">
            <summary>
            Adds the viewport size to bounds to ensure a minimum size.
            </summary>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.UpdateBounds">
            <summary>
            Updates the bounds of the canvas.  The content shown should stay the same.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.GetItemLayout(System.Windows.Controls.ListBoxItem)">
            <summary>
            Gets the item layout data, such as its position
            </summary>
            <param name="lbi">The listbox item to position in the graph.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.ConnectWithExistingMixin(Emergent.Toolbench.EntityModeling.EntityModel)">
            <summary>
            Connects the with an existing mixin in the diagram.
            </summary>
            <param name="entityModel">The entity model to connect.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.UpdateLayoutInfo(System.Windows.Controls.ListBoxItem)">
            <summary>
            Updates the layout info attached to the given item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl._listBox_PreviewMouseWheel(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Handles the PreviewMouseWheel event of the _listBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseWheelEventArgs"/> instance 
            containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.IsExpanded(System.Windows.Controls.ListBoxItem)">
            <summary>
            Determines whether the specified listbox item is is expanded.
            </summary>
            <param name="lbi">The lbi.</param>
            <returns>
                <c>true</c> if the specified lbi is expanded; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.Zoom">
            <summary>
            Gets or sets the zoom factor.
            This is a dependency property.
            </summary>
            <value>The zoom factor.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.DiagramEditorControl.Editor">
            <summary>
            Gets the editor where the EntityModels properties are displayed.
            </summary>
            <value>The editor.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewDisplayMode">
            <summary>
            Display modes supported by the project contents view.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewDisplayMode.Details">
            <summary>
            Display the items in a simple list view.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewDisplayMode.Thumbnails">
            <summary>
            Display the items as thumbnails.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewListType">
            <summary>
            List types displayed by the project contents view.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewListType.ListBox">
            <summary>
            Displays the items in a ListBox.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewListType.ListView">
            <summary>
            Displays the items in a ListView.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.DisplayModeToVisibility">
            <summary>
            ValueConverter for mapping items view display mode visibility.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.DisplayModeToVisibility.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.DisplayModeToVisibility.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.
            </returns>
            <exception cref="T:System.NotImplementedException">Always thrown.</exception>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemWithChildrenViewModel">
            <summary>
            Defines a HierarchicalItemViewModel that has children and takes its children from a Virtual
            Folder.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel">
            <summary>
            Base class for ViewModel classes for EMT items in the Project Explorer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel"/> class.
            </summary>
            <param name="data">The data to be wrapped by this view model.</param>
            <remarks>The data type is <see cref="T:System.Object"/> because there is no base class for the
            various data types wrapped (see derived classes).</remarks>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.PopulateChildren">
            <summary>
            Populates the children. To implement in derived classes as lazy-loading.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.Detach">
            <summary>
            Detaches this instance.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.OnChildrenCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the Children control. Sync the Parent property 
            from the Children.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The 
            <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.OnChildrenItemPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyChanged event for each children.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.OnSelectionChanged(Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel)">
            <summary>
            Called when the selection has changed.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.CreateContextMenu(System.Collections.Generic.IEnumerable{Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel},System.Object)">
            <summary>
            Creates a context menu for the specified items.
            </summary>
            <param name="items">The items to build the context menu on. Those are the items on which
            the action will execute.</param>
            <param name="tag">The tag.</param>
            <returns>The context menu.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.RaiseNeedRenameChild(System.Object)">
            <summary>
            Raises the need to rename a child.
            </summary>
            <param name="childData">The child data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.RaiseNeedRename">
            <summary>
            Raises the need for a rename. The view will respond to that event.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.NeedRename">
            <summary>
            Occurs when an item rename is requested.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.ParentChanged">
            <summary>
            Occurs when parent changed.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.Data">
            <summary>
            Gets the data wrapped by this view model.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.IsSelected">
            <summary>
            Gets a value indicating whether this instance is selected.
            </summary>
            <value><c>true</c> if this instance is selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.IsExpanded">
            <summary>
            Gets or sets a value indicating whether this instance is selected.
            </summary>
            <value><c>true</c> if this instance is selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.IconImageSource">
            <summary>
            Gets the icon image source.
            </summary>
            <value>The icon image source.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.DefaultCommand">
            <summary>
            Gets the default command. Represents the double-click command.
            </summary>
            <value>The default command.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.DropTargetCommand">
            <summary>
            Gets the drop target command. Executed when a we drop an item over this item.
            </summary>
            <value>The drop target command.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.DeleteCommand">
            <summary>
            Gets the delete command.
            </summary>
            <value>The delete command.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.IsDragSource">
            <summary>
            Gets a value indicating whether this instance is a drag source.
            </summary>
            <value><c>true</c> if this instance is a drag source; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.CanHaveChildren">
            <summary>
            Gets a value indicating whether this instance can have children.
            </summary>
            <value><c>true</c> if this instance can have children; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.Thumbnail">
            <summary>
            Gets the thumbnail.
            </summary>
            <value>The thumbnail image source.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.Path">
            <summary>
            Gets the path of the item.
            </summary>
            <value>The path of the item.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.File">
            <summary>
            Gets the file name of the item.
            </summary>
            <value>The file name.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.RevisionStatus">
            <summary>
            Gets the revision status.
            </summary>
            <value>The revision control status</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.Children">
            <summary>
            Gets the children.
            </summary>
            <value>A read only collection of the children.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.ChildrenWithCanHaveChildren">
            <summary>
            Gets the children that can themselves have children.
            </summary>
            <value>The children that can themselves have children.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.Parent">
            <summary>
            Gets or sets the parent. The parent can't be set by a derived class or externally.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.ProjectExplorer">
            <summary>
            Gets the project explorer view model.
            </summary>
            <value>The project explorer.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.Factory">
            <summary>
            Gets the factory to create items.
            </summary>
            <value>The factory.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.ChildrenInternal">
            <summary>
            Gets the children for derived classes.
            </summary>
            <value>The children.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.HasChildrenPopulated">
            <summary>
            Gets a value indicating whether the children were populated.
            </summary>
            <value><c>true</c> if this instance has populated; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.SelectionContextMenu">
            <summary>
            Gets the context menu bound to the current selection. If no selection, take the context
            menu of this item.
            </summary>
            <value>The selection context menu.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.ItemContextMenu">
            <summary>
            Gets the item context menu bound to this item.
            </summary>
            <value>The item context menu.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.ContentsListContextMenu">
            <summary>
            Gets the context menu bound to this item when it is the root of the Contents list.
            </summary>
            <value>The item context menu when it is the root of the Contents list.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.ContextMenuProviderKey">
            <summary>
            Gets the context menu provider key name, as defined in the plugin.xml.
            Override this property to change the context menu provider.
            </summary>
            <value>The context menu provider key.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.NeedRenameEventArgs">
            <summary>
            EventArgs class for the NeedRename event.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.NeedRenameEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether the event is handled.
            </summary>
            <value><c>true</c> if handled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel.NeedRenameEventArgs.Unique">
            <summary>
            Gets or sets a value indicating whether the event is unique.
            </summary>
            <value><c>true</c> if unique; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.IVirtualFolderHierarchicalItem">
            <summary>
            A hierarchical item that has an associated virtual folder.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.IVirtualFolderHierarchicalItem.VirtualFolder">
            <summary>
            Gets the virtual folder.
            </summary>
            <value>The virtual folder.</value>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemWithChildrenViewModel.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemWithChildrenViewModel"/> class.
            </summary>
            <param name="data">The data to be wrapped by this view model.</param>
            <remarks>The data type is <see cref="T:System.Object"/> because there is no base class for the
            various data types wrapped (see derived classes).</remarks>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemWithChildrenViewModel.PopulateChildren">
            <summary>
            Populates the children.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemWithChildrenViewModel.VirtualFolder_Items_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the VirtualFolder_Items control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The 
            <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemWithChildrenViewModel.Detach">
            <summary>
            Detaches the events.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemWithChildrenViewModel.CanHaveChildren">
            <summary>
            Gets a value indicating whether this instance can have children.
            </summary>
            <value><c>true</c> if this instance can have children; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemWithChildrenViewModel.VirtualFolder">
            <summary>
            Gets the virtual folder.
            </summary>
            <value>The virtual folder.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseView">
            <summary>
            Interaction logic for BrowseView.xaml
            </summary>
            <summary>
            BrowseView
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseView"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseView.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked whenever the effective value of any dependency property on this
            <see cref="T:System.Windows.FrameworkElement"/> has been updated. The specific
            dependency property that changed is reported in the arguments parameter.
            </summary>
            <param name="e">The event data that describes the property that changed, as well as old
            and new values.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseView.UpdateCurrentItem">
            <summary>
            Updates the current item.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseView.EditItem_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Loaded event of the EditItem control.
            Create the binding and add the validation rule
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing 
            the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseView.EditItem_EditFailed(System.Object,Emergent.Toolbench.UI.Common.WPF.EditFailedEventArgs)">
            <summary>
            Edits the item_ edit failed.
            Show a message box with the error.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseView.EditItem_Unloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Unloaded event of the EditItem control.
            Clear the binding
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing 
            the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddFolderAction">
            <summary>
            Implements the action for adding a new virtual folder to an EMT project.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddFolderAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddFolderAction"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddFolderAction.CanExecute(Emergent.Toolbench.Actions.ExecutionContext)">
            <summary>
            Determines whether this action can execute in the specified context.
            </summary>
            <param name="context">The context.</param>
            <returns>True if this action can execute.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddFolderAction.BeginUndo">
            <summary>
            Starts the undo operation. Empty implementation.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddFolderAction.EndUndo">
            <summary>
            Ends the undo. This method removes the newly added folder.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddFolderAction.BeginRedo">
            <summary>
            Starts the redo operation. This method adds the new folder back.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddFolderAction.EndRedo">
            <summary>
            Ends the redo. Empty implementation.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddFolderAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Called to handle an action executed by the action executor.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddFolderAction.IsUndoable">
            <summary>
            This operation is undoable.
            </summary>
            <value>true.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddFolderAction.Description">
            <summary>
            Gets the description for the action.
            </summary>
            <value>The action description.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddFolderAction.ModifiesContent">
            <summary>
            Gets a value indicating if the <see cref="T:Emergent.Toolbench.Actions.IContentModifyingAction"/> should actually
            dirty the content.
            </summary>
            <value>true, indicating that content is dirtied.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorView">
            <summary>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorView.#ctor">
            <summary>
            Initializes the view.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.EntityModelBox">
            <summary>
            Interaction logic for EntityModelBox.xaml
            </summary>
            <summary>
            EntityModelBox
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.EntityModelBox"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelBox.EditName">
            <summary>
            Edits the name.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelBox.OnLayoutInfoChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when layout info has changed.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelBox.PropertyNameEditLabel_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Loaded event of the PropertyNameEditLabel control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the
            event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelBox.BehaviorNameEditLabel_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Loaded event of the BehaviorNameEditLabel control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the
            event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelBox.NameEditLabel_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Loaded event of the NameEditLabel control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the 
            event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelBox.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelBox.IsExpanded">
            <summary>
            Gets or sets a value indicating whether the box is expanded.
            </summary>
            <value>
                <c>true</c> if this instance is expanded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelBox.EnableEditing">
            <summary>
            Gets a value indicating whether editing is enabled.
            </summary>
            <value><c>true</c> if editing is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelBox.ShowProjectName">
            <summary>
            Gets a value indicating whether we show the project name in the header.
            </summary>
            <value><c>true</c> if the project name is shown; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ConnectorTooltip">
            <summary>
            Interaction logic for ConnectorTooltip.xaml
            </summary>
            <summary>
            ConnectorTooltip
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ConnectorTooltip.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ExportAllAction">
            <summary>
            Action handler that opens all EMT projects in the game solution in a global or shared
            context, then exports all flat models.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ExportAllAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Called to handle an action executed by the action executor.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.Generic">
            <summary>
            Generic
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.Generic.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.VirtualFolderItemViewModel">
            <summary>
            ViewModel base class for virtual folder items in the Project Explorer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.VirtualFolderItemViewModel.#ctor(Emergent.Toolbench.EntityModeling.VirtualFolder)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.VirtualFolderItemViewModel"/> class.
            </summary>
            <param name="virtualFolder">The virtual folder.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.VirtualFolderItemViewModel.DefaultCommandExecute">
            <summary>
            Executes the default command, expanding the project in the project explorer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.VirtualFolderItemViewModel.OnFolderPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Propogates property changes.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.VirtualFolderItemViewModel.VirtualFolder">
            <summary>
            Gets the virtual folder.
            </summary>
            <value>The virtual folder.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.VirtualFolderItemViewModel.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.VirtualFolderItemViewModel.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.VirtualFolderItemViewModel.DefaultCommand">
            <summary>
            Gets the default command. Represents the double-click command.
            </summary>
            <value>The default command.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.VirtualFolderItemViewModel.IconImageSource">
            <summary>
            Gets the icon image source.
            </summary>
            <value>The icon image source.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.VirtualFolderItemViewModel.Path">
            <summary>
            Gets the path of the item.
            </summary>
            <value>The path of the item.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.VirtualFolderItemViewModel.Thumbnail">
            <summary>
            Gets the thumbnail.
            </summary>
            <value>The thumbnail image source.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.VirtualFolderItemViewModel.ParentProject">
            <summary>
            Helper to get the parent project.
            </summary>
            <value>The parent project.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchItemsViewModel">
            <summary>
            ViewModel class for the results list in Search mode of Project Explorer.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewModel">
            <summary>
            ViewModel used as the DataContext for the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsView"/>.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewModel.#ctor(Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewModel"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewModel.Detach">
            <summary>
            Detaches this instance.  Unregister events.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewModel.RaiseSelectedItemsChanged">
            <summary>
            Raise the property changed event on the SelectedItems collection.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewModel.RaiseSelectedItemViewModelChanged">
            <summary>
            Raise the property changed event on the SelectedItemViewModel.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewModel.SelectedItemViewModel">
            <summary>
            Gets or sets the selected item in the list.
            </summary>
            <value>The selected item.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewModel.SelectedItems">
            <summary>
            Gets the selected items collection.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewModel.ProjectExplorerViewModel">
            <summary>
            Gets ProjectExplorerViewModel
            </summary>
            <value>The ProjectExplorerViewModel.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewModel.ItemsSource">
            <summary>
            Gets or sets the items source.
            </summary>
            <value>The items source.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewModel.FilteredItems">
            <summary>
            Gets the filtered items.
            </summary>
            <value>The filtered items.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewModel.DisplayStyles">
            <summary>
            Gets or sets the display styles.
            </summary>
            <value>The display styles.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewModel.ContentsViewMode">
            <summary>
            Gets or sets the contents view display mode.
            </summary>
            <value>The contents view display mode.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewModel.Filter">
            <summary>
            Gets or sets the filter.
            </summary>
            <value>The filter.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsViewModel.SetContentsViewModeCommand">
            <summary>
            Gets the command to set the view display mode.
            </summary>
            <value>The view display mode command.</value>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchItemsViewModel.#ctor(Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchItemsViewModel"/> class.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchItemsViewModel.ContentsViewMode">
            <summary>
            Gets or sets the contents view display mode.
            </summary>
            <value>The contents view display mode.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerView">
            <summary>
            Interaction logic for ProjectExplorerView.xaml
            </summary>
            <summary>
            ProjectExplorerView
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerView"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerView.ProjectExplorerViewModel">
            <summary>
            Gets or sets the project explorer view model. This represents the DataContext.
            </summary>
            <value>The project explorer view model.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTRootItemViewModel">
            <summary>
            EMT-specific ViewModel class for the root item in the Project Explorer.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RootItemViewModel">
            <summary>
            ViewModel class for the root item in the Project Explorer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RootItemViewModel.#ctor(Emergent.Toolbench.EntityModeling.IProjectReferenceOwner,Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RootItemViewModel"/> class.
            </summary>
            <param name="projectReferenceOwner">The project reference owner.</param>
            <param name="projectExplorer">The project explorer.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RootItemViewModel.PopulateChildren">
            <summary>
            Populates the children.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RootItemViewModel.Detach">
            <summary>
            Detaches the events.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RootItemViewModel.FlatReferences">
            <summary>
            Gets the flat references.
            </summary>
            <value>The flat references.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RootItemViewModel.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RootItemViewModel.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RootItemViewModel.IconImageSource">
            <summary>
            Gets the icon image source.
            </summary>
            <value>The icon image source.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RootItemViewModel.IsDragSource">
            <summary>
            Gets a value indicating whether this instance is a drag source.
            </summary>
            <value><c>true</c> if this instance is a drag source; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RootItemViewModel.CanHaveChildren">
            <summary>
            Gets a value indicating whether this instance can have children.
            </summary>
            <value><c>true</c> if this instance can have children; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RootItemViewModel.Thumbnail">
            <summary>
            Gets the thumbnail.
            </summary>
            <value>The thumbnail image source.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RootItemViewModel.ProjectExplorer">
            <summary>
            Gets the project explorer view model.
            </summary>
            <value>The project explorer.</value>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTRootItemViewModel.#ctor(Emergent.Toolbench.EntityModeling.ModelingProjectDocument,Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTRootItemViewModel"/> class.
            </summary>
            <param name="project">The project.</param>
            <param name="projectExplorer">The project explorer.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTRootItemViewModel.PopulateChildren">
            <summary>
            Populates the children.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTRootItemViewModel.Project">
            <summary>
            Gets the project.
            </summary>
            <value>The project.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTRootItemViewModel.Factory">
            <summary>
            Gets the factory to create items.
            </summary>
            <value>The factory.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTProjectExplorerViewModel">
            <summary>
            EMT-specific ViewModel class for the Project Explorer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewModel.Detach">
            <summary>
            Detaches this object and all its content.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewModel.SettingIDHelper(System.String)">
            <summary>
            Helper function to generate setting id.
            </summary>
            <param name="id">The setting id suffix.</param>
            <returns>The full view-specific setting string.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewModel.SetSelectedItem(Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel)">
            <summary>
            Sets the selected item.
            </summary>
            <param name="model">The item view model to select.</param>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewModel.Root">
            <summary>
            Gets the root.  Must be implemented by derived classes.
            </summary>
            <value>The root.</value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewModel.ProjectExplorerController" -->
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewModel.BrowseViewModel">
            <summary>
            Gets or sets the BrowseViewModel.
            </summary>
            <value>The browse view model.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewModel.SearchViewModel">
            <summary>
            Gets or sets the SearchViewModel.
            </summary>
            <value>The search view model.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewModel.SelectedViewModel">
            <summary>
            Gets or sets the selected view model.
            </summary>
            <value>The selected view model.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewModel.Selection">
            <summary>
            Gets the selected item view models.
            </summary>
            <value>The selected item view models.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewModel.TabViewModels">
            <summary>
            Gets the collection of view models to display as tabs in the view.
            </summary>
            <value>The tab view models.</value>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTProjectExplorerViewModel.#ctor(Emergent.Toolbench.EntityModeling.ModelingProjectDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTProjectExplorerViewModel"/> class.
            </summary>
            <param name="project">The project.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTProjectExplorerViewModel.SettingIDHelper(System.String)">
            <summary>
            Helper function to generate setting id
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTProjectExplorerViewModel.Root">
            <summary>
            Gets the root. Implementation for the EMT project explorer.
            </summary>
            <value>The root.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTProjectExplorerViewModel.SettingsAspect">
            <summary>
            Gets the SettingsAspect.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.DesignerItem">
            <summary>
            These attributes identify the types of the named parts that are used for templating
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DesignerItem.#cctor">
            <summary>
            Static constructor
            Initializes the <see cref="T:Emergent.Toolbench.EntityModeling.UI.DesignerItem"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DesignerItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.DesignerItem"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DesignerItem.OnLayoutInfoChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [layout info changed].
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DesignerItem.DesignerItem_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Loaded event of the DesignerItem control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing 
            the event data.</param>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ViewContentAction">
            <summary>
            Implements a UI action for jumping to the EMT editor for a specific model, preset, or
            diagram.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ViewContentAction.#ctor(Emergent.Toolbench.EntityModeling.ProjectContent)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ViewContentAction"/> class.
            </summary>
            <param name="content">The content to view.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ViewContentAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Called to handle an action executed by the action executor.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.DeleteReferenceAction">
            <summary>
            Removes the selected project reference in the Solution View.
            This action applies only to ProjectReferenceItems
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DeleteReferenceAction.CanExecute(Emergent.Toolbench.Actions.ExecutionContext)">
            <summary>
            Determines whether this action can execute the specified context.
            </summary>
            <param name="context">The context.</param>
            <returns>True if this action can execute</returns>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.DeleteReferenceAction.Item">
            <summary>
            Gets or sets the item on which this action was triggered.
            </summary>
            <value>The item.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTProjectExplorerController">
            <summary>
            EMT-specific controller class for the Project Explorer.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerController">
            <summary>
            Base controller class for the Project Explorer.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerController.BreadcrumbRootName">
            <summary>
            The display name for the root of the breadcrumb control.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerController.#cctor">
            <summary>
            Initializes the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerController"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerController.#ctor(Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.IItemViewModelFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerController"/> class.
            </summary>
            <param name="itemViewModelFactory">The item view model factory.</param>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerController.ItemViewModelFactory">
            <summary>
            Gets or sets the item view model factory.
            </summary>
            <value>The item view model factory.</value>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTProjectExplorerController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTProjectExplorerController"/> class.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTModelItemViewModel">
            <summary>
            EMT-specific ViewModel class for a model item in the Project Explorer.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ModelItemViewModel">
            <summary>
            Base for ViewModel classes for model items in the Project Explorer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ModelItemViewModel.#ctor(Emergent.Toolbench.EntityModeling.EntityModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ModelItemViewModel"/> class.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ModelItemViewModel.Detach">
            <summary>
            Detaches the events.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ModelItemViewModel.PopulateChildren">
            <summary>
            Populates the children. To implement in derived classes as lazy-loading.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ModelItemViewModel.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyChanged event of the Property, to notify when Name changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ModelItemViewModel.EntityModel">
            <summary>
            Gets the entity model.
            </summary>
            <value>The entity model.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ModelItemViewModel.Name">
            <summary>
            Gets the item name.
            </summary>
            <value>The item name.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ModelItemViewModel.Description">
            <summary>
            Gets the item description.
            </summary>
            <value>The item description.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ModelItemViewModel.IconImageSource">
            <summary>
            Gets the icon image source.
            </summary>
            <value>The icon image source.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ModelItemViewModel.IsDragSource">
            <summary>
            Gets a value indicating whether this instance is a drag source.
            </summary>
            <value><c>true</c> if this instance is a drag source; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ModelItemViewModel.CanHaveChildren">
            <summary>
            Gets a value indicating whether this instance can have children.
            </summary>
            <value><c>true</c> if this instance can have children; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ModelItemViewModel.Thumbnail">
            <summary>
            Gets the thumbnail.
            </summary>
            <value>The thumbnail image source.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ModelItemViewModel.Path">
            <summary>
            Gets the path of the item.
            </summary>
            <value>The path of the item.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ModelItemViewModel.File">
            <summary>
            Gets the file name of the item.
            </summary>
            <value>The file name.</value>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTModelItemViewModel.#ctor(Emergent.Toolbench.EntityModeling.EntityModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTModelItemViewModel"/> class.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTModelItemViewModel.DefaultCommand">
            <summary>
            Gets the default command. Represents the double-click command.
            </summary>
            <value>The default command.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTItemFactory">
            <summary>
            Singleton factory class for generating ViewModel instances for EMT items.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.IItemViewModelFactory">
            <summary>
            Define a factory that can create View Model objects for the Project Explorer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.IItemViewModelFactory.Create(System.Object)">
            <summary>
            Creates the View Model for specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>The View Model of type HierarchicalItemViewModel.</returns>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTItemFactory.Instance">
            <summary>
            Access to the factory singleton.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTItemFactory.Create(System.Object)">
            <summary>
            Creates the specified item view model from a project item.
            </summary>
            <param name="item">The item.</param>
            <returns>The generated view model instance.</returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ReadOnlyPresetEditorControl">
            <summary>
            Interaction logic for PresetEditorControl.xaml
            </summary>
            <summary>
            ReadOnlyPresetEditorControl
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ReadOnlyPresetEditorControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.TraitsSelector">
            <summary>
            Interaction logic for TraitsSelector.xaml
            </summary>
            <summary>
            TraitsSelector
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitsSelector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.TraitsSelector"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitsSelector.RebuildActiveTraits">
            <summary>
            Regenerate the active traits array for this ITraitsOwner
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitsSelector.InitCheckboxes">
            <summary>
            Initialize the checkboxes for the popup menu to the current
            state of the ActiveTraits.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitsSelector.OnChecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle checkbox being checked.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitsSelector.OnUnchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle checkbox being unchecked.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitsSelector.OnPopupOpened(System.Object,System.EventArgs)">
            <summary>
            Initialize the checkboxes in the popup menu
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitsSelector.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle when the control is loaded
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitsSelector.RegisterCollectionEvents(Emergent.Toolbench.EntityModeling.ITraitsOwner)">
            <summary>
            Register to handle collection events for a traits owner
            </summary>
            <param name="owner">Traits owner to monitor</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitsSelector.OnUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the UI being unloaded
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitsSelector.UnregisterCollectionEvents(Emergent.Toolbench.EntityModeling.ITraitsOwner)">
            <summary>
            Unregister to handle collection events for a traits owner
            </summary>
            <param name="owner">Traits owner to monitor</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitsSelector.TraitsOwnerChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle the traits owner dependency property being set.
            </summary>
            <param name="d">Dependency object</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitsSelector.Traits_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handle the traitsowner collection being changed.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitsSelector.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.TraitsSelector.TraitsOwner">
            <summary>
            Gets or sets the traits owner.
            This is a dependency property.
            </summary>
            <value>The traits owner.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.TraitsSelector.Traits">
            <summary>
            Gets or sets the traits.
            This is a dependency property.
            </summary>
            <value>The traits.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.TraitsSelector.ActiveTraits">
            <summary>
            The active traits for this ITraitsOwner
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.TraitsSelector.TraitProxy">
            <summary>
            View model class that brokers ActiveTrait Trait names
            with their friendly counterparts.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.UI.ProjectView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectView.#ctor">
            <summary>
            Initializes the view.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTPresetItemViewModel">
            <summary>
            EMT-specific ViewModel class for a preset item in the Project Explorer.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.PresetItemViewModel">
            <summary>
            Base for ViewModel classes for preset items in the Project Explorer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.PresetItemViewModel.#ctor(Emergent.Toolbench.EntityModeling.EntityModelPreset)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.PresetItemViewModel"/> class.
            </summary>
            <param name="preset">The preset.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.PresetItemViewModel.Detach">
            <summary>
            Detaches the events.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.PresetItemViewModel.PopulateChildren">
            <summary>
            Populates the children. To implement in derived classes as lazy-loading.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.PresetItemViewModel.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyChanged event of the Property, to notify when Name changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.PresetItemViewModel.Preset">
            <summary>
            Gets the preset.
            </summary>
            <value>The preset.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.PresetItemViewModel.Name">
            <summary>
            Gets the item name.
            </summary>
            <value>The item name.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.PresetItemViewModel.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.PresetItemViewModel.IconImageSource">
            <summary>
            Gets the icon image source.
            </summary>
            <value>The icon image source.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.PresetItemViewModel.IsDragSource">
            <summary>
            Gets a value indicating whether this instance is a drag source.
            </summary>
            <value><c>true</c> if this instance is a drag source; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.PresetItemViewModel.CanHaveChildren">
            <summary>
            Gets a value indicating whether this instance can have children.
            </summary>
            <value><c>true</c> if this instance can have children; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.PresetItemViewModel.Thumbnail">
            <summary>
            Gets the thumbnail.
            </summary>
            <value>The thumbnail image source.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.PresetItemViewModel.Path">
            <summary>
            Gets the path of the item.
            </summary>
            <value>The path of the item.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.PresetItemViewModel.File">
            <summary>
            Gets the file name of the item.
            </summary>
            <value>The file name.</value>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTPresetItemViewModel.#ctor(Emergent.Toolbench.EntityModeling.EntityModelPreset)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTPresetItemViewModel"/> class.
            </summary>
            <param name="preset">The preset.</param>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTPresetItemViewModel.DefaultCommand">
            <summary>
            Gets the default command. Represents the double-click command.
            </summary>
            <value>The default command.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EditItem">
            <summary>
            Represents a specialized EditTextBlock that is used inside as a TreeViewItem.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EditItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EditItem"/> class.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.RestrictionEditor">
            <summary>
            Represents an editor to configure restriction on an entity model property.
            </summary>
            <summary>
            RestrictionEditor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.RestrictionEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.RestrictionEditor"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.RestrictionEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.PropertyNameValidationRule">
            <summary>
            The validation rule to be used in WPF for validating the property names
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PropertyNameValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            When overridden in a derived class, performs validation checks on a value.
            </summary>
            <param name="value">The value from the binding target to check.</param>
            <param name="cultureInfo">The culture to use in this rule.</param>
            <returns>
            A <see cref="T:System.Windows.Controls.ValidationResult"/> object.
            </returns>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.PropertyNameValidationRule.Model">
            <summary>
            Gets or sets the model that defines the scope of validation.
            </summary>
            <value>The model.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.PropertyNameValidationRule.Property">
            <summary>
            Gets or sets the property to validate..
            </summary>
            <value>The property.</value>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.AddReferenceAction.CanExecute(Emergent.Toolbench.Actions.ExecutionContext)">
            <summary>
            Determines whether this action can execute the specified context.
            </summary>
            <param name="context">The context.</param>
            <returns>True if this action can execute</returns>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.AddReferenceAction.Item">
            <summary>
            Gets or sets the item on which this action was triggered.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.AddReferenceAction.IsUndoable">
            <summary>
            Gets a value indicating if the action is undo-able.
            </summary>
            <remarks>
            Normally this value should be true but if the action can conditionally become 
            non-undo-able, this property should reflect that.
            </remarks>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.TypeSelector">
            <summary>
            TypeSelector
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TypeSelector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.TypeSelector"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TypeSelector.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.TypeSelector.Property">
            <summary>
            Gets or sets the property.
            This is a dependency property.
            </summary>
            <value>The property.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTDiagramItemViewModel">
            <summary>
            ViewModel class for a diagram item in the EMT-specific version of Project Explorer.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.DiagramItemViewModel">
            <summary>
            ViewModel class for a diagram item in the Project Explorer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.DiagramItemViewModel.#ctor(Emergent.Toolbench.EntityModeling.Diagram)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.DiagramItemViewModel"/> class.
            </summary>
            <param name="diagram">The diagram item.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.DiagramItemViewModel.PopulateChildren">
            <summary>
            Populates the children.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown.</exception>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.DiagramItemViewModel.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyChanged event of the Property, to notify when Name changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.DiagramItemViewModel.Detach">
            <summary>
            Detaches the events.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.DiagramItemViewModel.Diagram">
            <summary>
            Gets the diagram item.
            </summary>
            <value>The diagram item.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.DiagramItemViewModel.Name">
            <summary>
            Gets the diagram name.
            </summary>
            <value>The diagram name.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.DiagramItemViewModel.Description">
            <summary>
            Gets the diagram description.
            </summary>
            <value>The diagram description. Always empty.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.DiagramItemViewModel.IconImageSource">
            <summary>
            Gets the diagram icon image source.
            </summary>
            <value>The icon image source.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.DiagramItemViewModel.IsDragSource">
            <summary>
            Gets a value indicating whether this is a drag source.
            </summary>
            <value><c>true</c>, indicating the diagram item is a drag source.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.DiagramItemViewModel.CanHaveChildren">
            <summary>
            Gets a value indicating whether the diagram item can have children.
            </summary>
            <value><c>false</c>, indicating the diagram item cannot have children.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.DiagramItemViewModel.Thumbnail">
            <summary>
            Gets the thumbnail.
            </summary>
            <value>The thumbnail image source.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.DiagramItemViewModel.Path">
            <summary>
            Gets the path of the item.
            </summary>
            <value>The path of the item.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.DiagramItemViewModel.File">
            <summary>
            Gets the file name of the item.
            </summary>
            <value>The file name.</value>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTDiagramItemViewModel.#ctor(Emergent.Toolbench.EntityModeling.Diagram)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTDiagramItemViewModel"/> class.
            </summary>
            <param name="diagram">The diagram item.</param>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTDiagramItemViewModel.DefaultCommand">
            <summary>
            Gets the default command. Represents the double-click command.
            </summary>
            <value>The default command.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ViewAssetAction">
            <summary>
            Action implementation for viewing the asset of the selected model or preset in an external
            tool.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ViewAssetAction.CanExecute(Emergent.Toolbench.Actions.ExecutionContext)">
            <summary>
            Determines whether this action can execute in the specified context.
            </summary>
            <param name="context">The execution context.</param>
            <returns>True if the action can execute.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ViewAssetAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Called to handle an action executed by the action executor.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderMoveItemsAction">
            <summary>
            Implements the action for moving EMT project items between virtual folders.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderMoveItemsAction.#ctor(Emergent.Toolbench.EntityModeling.VirtualFolder,System.Collections.Generic.IEnumerable{Emergent.Toolbench.EntityModeling.IVirtualFolderItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderMoveItemsAction"/> class.
            </summary>
            <param name="targetFolder">The target folder.</param>
            <param name="moveables">The items to move.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderMoveItemsAction.BeginUndo">
            <summary>
            Starts the undo operation.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderMoveItemsAction.EndUndo">
            <summary>
            Ends the undo operation by restoring items to their original locations.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderMoveItemsAction.BeginRedo">
            <summary>
            Starts the redo operation by moving items to the target folder.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderMoveItemsAction.EndRedo">
            <summary>
            Ends the redo operation.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderMoveItemsAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Called to handle an action executed by the action executor.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderMoveItemsAction.CanExecute(Emergent.Toolbench.Actions.ExecutionContext)">
            <summary>
            Determines whether this instance can execute the specified context.
            </summary>
            <param name="context">The context.</param>
            <returns><c>true</c> if this instance can execute the specified context; otherwise,
            <c>false</c>.</returns>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderMoveItemsAction.IsUndoable">
            <summary>
            Gets a value indicating if the action is undo-able.
            </summary>
            <value>true, indicating the action can be undone.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderMoveItemsAction.Description">
            <summary>
            Gets a description used to display information about the undo/redo operation to the
            user.
            </summary>
            <value>The action description.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderMoveItemsAction.ModifiesContent">
            <summary>
            Gets a value indicating if the <see cref="T:Emergent.Toolbench.Actions.IContentModifyingAction"/> should actually
            dirty the content.
            </summary>
            <value>true, indicating that content is dirtied.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.RestrictionTemplateSelector">
            <summary>
            Provides mechanism to select the proper DataTemplate according to the current restriction
            type.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.RestrictionTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            When overridden in a derived class, returns a 
            <see cref="T:System.Windows.DataTemplate"/> based on custom logic.
            </summary>
            <param name="item">The data object for which to select the template.</param>
            <param name="container">The data-bound object.</param>
            <returns>
            Returns a <see cref="T:System.Windows.DataTemplate"/> or null.
            The default value is null.
            </returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.RestrictionConverter">
            <summary>
            Provides conversion between RestrictionType and Restriction.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.RestrictionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.RestrictionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.RangeRestrictionValidator">
            <summary>
            Encapsulates the logical behind the RangeRestriction validation rules.
            This class handles the validation of the input values of the minimum and the maximum
            parameters of the RangeRestriction
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.RangeRestrictionInputValidationRule">
            <summary>
            Provides validation logic for input values of the minimum and maximum parameters of
            a RangeRestriction. This validation rule checks if the input value is convertible
            regarding the current data type.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.RangeRestrictionMinimumValidationRule">
            <summary>
            Provides validation logic for minimum parameter according to the current maximum parameter.
            This validation rule ensures that the new minimum value is under the current maximum value.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.RangeRestrictionMinimumValidationRule.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.RangeRestrictionMinimumValidationRule"/> 
            class.
            </summary>
            <param name="maximum">The maximum.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.RangeRestrictionMinimumValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            When overridden in a derived class, performs validation checks on a value.
            </summary>
            <param name="value">The value from the binding target to check.</param>
            <param name="cultureInfo">The culture to use in this rule.</param>
            <returns>
            A <see cref="T:System.Windows.Controls.ValidationResult"/> object.
            </returns>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.RangeRestrictionMinimumValidationRule.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.RangeRestrictionMaximumValidationRule">
            <summary>
            Provides validation logic for maximum parameter according to the current minimum parameter.
            This validation rule ensures that the new maximum value is higher than the current minimum 
            value.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.RangeRestrictionMaximumValidationRule.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.RangeRestrictionMaximumValidationRule"/> 
            class.
            </summary>
            <param name="minimum">The minimum.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.RangeRestrictionMaximumValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            When overridden in a derived class, performs validation checks on a value.
            </summary>
            <param name="value">The value from the binding target to check.</param>
            <param name="cultureInfo">The culture to use in this rule.</param>
            <returns>
            A <see cref="T:System.Windows.Controls.ValidationResult"/> object.
            </returns>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.RangeRestrictionMaximumValidationRule.Minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemComparer">
            <summary>
            Implement a comparer that is used to sort HierarchicalItemViewModel items
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to,
            or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Less than zero: <paramref name="x"/> is less than <paramref name="y"/>.
            Zero: <paramref name="x"/> equals <paramref name="y"/>.
            Greater than zero: <paramref name="x"/> is greater than <paramref name="y"/>.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemComparer.Compare(Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel,Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to,
            or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Less than zero: <paramref name="x"/> is less than <paramref name="y"/>.
            Zero: <paramref name="x"/> equals <paramref name="y"/>.
            Greater than zero: <paramref name="x"/> is greater than <paramref name="y"/>.
            </returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.PathFinder">
            <summary>
            Helper class to provide an function to find the best connection paths
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PathFinder.GetConnectionLine(Emergent.Toolbench.EntityModeling.UI.ConnectorInfo,Emergent.Toolbench.EntityModeling.UI.ConnectorInfo,System.Boolean)">
            <summary>
            Gets the connection line.
            </summary>
            <param name="source">The source.</param>
            <param name="sink">The sink.</param>
            <param name="bVerticalConnectorOnly">if set to <c>true</c> 
            [use vertical connector only].</param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PathFinder.Center(System.Windows.Rect)">
            <summary>
            Calculate the center point of the specified rect.
            Extention method.
            </summary>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PathFinder.GetShorterSegment(System.Windows.Rect@,System.Windows.Rect@,System.Boolean)">
            <summary>
            Gets the shorter segment between two rectangles
            </summary>
            <param name="rcSrc">The rc SRC.</param>
            <param name="rcDest">The rc dest.</param>
            <param name="bVerticalConnectorOnly">if set to <c>true</c> [b vertical connector only].</param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PathFinder.Distance(System.Windows.Point,System.Windows.Point)">
            <summary>
            Calulate the distances between 2 points
            </summary>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PathFinder.GetRectWithMargin(Emergent.Toolbench.EntityModeling.UI.ConnectorInfo,System.Double)">
            <summary>
            Gets the rect with margin.
            </summary>
            <param name="connectorThumb">The connector thumb.</param>
            <param name="margin">The margin.</param>
            <returns></returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ReadOnlyEntityModelEditorControl">
            <summary>
            ReadOnlyEntityModelEditorControl
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ReadOnlyEntityModelEditorControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ReadOnlyEntityModelEditorControl"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ReadOnlyEntityModelEditorControl.FilterOutSelfProperties(System.Object)">
            <summary>
            Filters out properties owned directly by the entity model.
            </summary>
            <param name="item">The item to filter</param>
            <returns>False if the item is filtered out</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ReadOnlyEntityModelEditorControl.FilterOutSelfBehaviors(System.Object)">
            <summary>
            Filters out behaviors owned directly by the entity model.
            </summary>
            <param name="item">The item to filter</param>
            <returns>False if the item is filtered out</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ReadOnlyEntityModelEditorControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ReadOnlyEntityModelEditorControl.EntityModel">
            <summary>
            Gets or sets the entity model. This is a dependency property.
            </summary>
            <value>The entity model.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl">
            <summary>
            EntityModelEditorControl
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.FilterOutSelfProperties(System.Object)">
            <summary>
            Filters out properties owned directly by the entity model.
            </summary>
            <param name="item">The item to filter</param>
            <returns>False if the item is filtered out</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.FilterOutSelfBehaviors(System.Object)">
            <summary>
            Filters out behaviors owned directly by the entity model.
            </summary>
            <param name="item">The item to filter</param>
            <returns>False if the item is filtered out</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.OnPreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the PreviewKeyDown event of the _root control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing
            the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.GenericDeleteSelection">
            <summary>
            Delete selection in a generic manner
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.GenericDeleteSelection(System.Windows.Controls.ListBox)">
            <summary>
            Delete selection in the specificed listbox
            </summary>
            <param name="listBox">The list box.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.PropertyNameTextBox_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Loaded event of the PropertyNameTextBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing 
            the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.PropertyVisualizerNameTextBox_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Loaded event of the PropertyVisualizerNameTextBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing 
            the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.BehaviorNameTextBox_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Loaded event of the BehaviorNameTextBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing 
            the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.LoadValidationRuleOnName">
            <summary>
            Handles the Loaded event of the Name control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the
            event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl._propertyVisualizerTypeComboBox_Changed(System.Object,System.EventArgs)">
            <summary>
            Called when the Property Visualizer Type combo box item selection has changed.
            This will change the type of the visualizer, setting up any dependencies.
            </summary>
            <param name="sender">The ComboBox that triggered the event.</param>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl._propertyVisualizerTypeComboBox_Initialized(System.Object,System.EventArgs)">
            <summary>
            Sets the initial selection of the visualizer type combo box.
            </summary>
            <param name="sender">The ComboBox.</param>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.PropertyVisualizerExtraDataFilter(System.Object,System.Windows.Data.FilterEventArgs)">
            <summary>
            Filters the ExtraData, only accepting ExtraData with the type of PropertyVisualizer.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The FilterEventArgs.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.PropertyVisualizerDependencyFilter(System.Object)">
            <summary>
            Filters the ExtraData entries, only accepting the entires with type Dependency.
            </summary>
            <param name="sender">The item being checked for filtering.</param>
            <returns>True if accepted, false  if filtered away.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl._dependencyListView_Initialized(System.Object,System.EventArgs)">
            <summary>
            Called when the dependency list view is created.  This will setup a filter to
            filter out all ExtraData entries which do not have type Dependency.
            </summary>
            <param name="sender">The ListView.</param>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl._dependencyComboBox_Initialized(System.Object,System.EventArgs)">
            <summary>
            Sets the initial selection of the visualizer dependency combo box.
            </summary>
            <param name="sender">The ComboBox.</param>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl._dependencyComboBox_Changed(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Called when the visualizer dependency combo box changes.  Ideally, this would
            be taken care of via data binding, but certain events cause the data binding
            to produce invalid results.
            </summary>
            <param name="sender">The ComboBox.</param>
            <param name="e">The SelectionChangedEventArgs.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.CommandAddProperty(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Commands to the add property.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance 
            containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.CommandAddPropertyVisualizer(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Commands to add a property visualizer.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance 
            containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.CommandRemovePropertyVisualizer(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Commands to remove a property visualizer.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance 
            containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.CommandRemoveProperty(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Commands the to remove property.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance 
            containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.CommandAddBehavior(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Commands to the add behavior.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance 
            containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.CommandEditBehavior(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Opens the code editor
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance 
            containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.EntityModel">
            <summary>
            Gets or sets the entity model. This is a dependency property.
            </summary>
            <value>The entity model.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorControl.PropertiesView">
            <summary>
            Gets the properties view.
            </summary>
            <value>The properties view.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.Controls.DragDetector">
            <summary>
            The drag detector is used to know if the user is moving the mouse
            It can't use the WPF functions because it's blocking the UI thread
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.Controls.DragDetector.IsDragging(System.Windows.DependencyObject)">
            <summary>
            Determines whether the mouse is draggin right now using the Win32 API.
            </summary>
            <param name="dpo">The dpo.</param>
            <returns>
                <c>true</c> if the specified dpo is dragging; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.Controls.DragThumb">
            <summary>
            The drag thumb control on a Designer Item
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.Controls.DragThumb.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.Controls.DragThumb"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.Controls.DragThumb.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when loaded.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing 
            the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.Controls.DragThumb.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides class handling for the 
            <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown"/> event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.Controls.DragThumb.editLabel_IsEditingChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the IsEditingChanged event of the editLabel control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.Controls.DragThumb.ListBoxHandleMouseDown">
            <summary>
            Special helper that simulate a button down event on the listbox
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.Controls.DragThumb.DragThumb_DragDelta(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Handles the DragDelta event of the DragThumb control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.DiagramAction">
            <summary>
            Performs a generic action, converted to a command
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Executes the action convert to an action
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel">
            <summary>
            ViewModel class for Search mode of the Project Explorer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.#ctor(Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel"/> class.
            </summary>
            <param name="projectExplorer">The project explorer.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.OnProjectCollectionsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when project collections changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The NotifyCollectionChangedEventArgs instance containing the event data.
            </param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.OnParentChanged(System.Object,System.EventArgs)">
            <summary>
            Called when parent changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The EventArgs instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.RequestQueryCommandExecute">
            <summary>
            Requests the query command execute.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.m_selected">
            <summary>
            Used to persist the selected index of the combo box.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.m_searchUnder">
            <summary>
            Used to persist state of search under folder setting.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.Detach">
            <summary>
            Detaches this instance.  Unregister events, etc.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.Results_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the Results collection.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The 
            <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.ResultsItem_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyChanged event for each children.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.ViewName">
            <summary>
            Gets the name of the view.
            </summary>
            <value>The name of the view.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.ProjectExplorerViewModel">
            <summary>
            Gets the project explorer view model.
            </summary>
            <value>The project explorer view model.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.ItemsViewModel">
            <summary>
            Gets the items view model.
            </summary>
            <value>The items view model.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.BreadcrumbPath">
            <summary>
            Gets or sets the breadcrumb path.
            </summary>
            <value>The breadcrumb path.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.Results">
            <summary>
            Gets the results.
            </summary>
            <value>The results.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.IsExpanded">
            <summary>
            Gets or sets a value indicating whether this instance is expanded.
            </summary>
            <value><c>true</c> if this instance is expanded; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.UseItemName">
            <summary>
            Gets or sets a value indicating whether to search on the item name.
            </summary>
            <value><c>true</c> if searching on the item name; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.ItemName">
            <summary>
            Gets or sets the name of the item.
            </summary>
            <value>The name of the item.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.UseMixinModelName">
            <summary>
            Gets or sets a value indicating whether to search on the mixin model name.
            </summary>
            <value><c>true</c> if searching on the mixin model name; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.MixinModelName">
            <summary>
            Gets or sets the name of the mixin model.
            </summary>
            <value>The name of the mixin model.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.UsePropertyName">
            <summary>
            Gets or sets a value indicating whether to search on the property name.
            </summary>
            <value><c>true</c> if searching on the property name; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.PropertyName">
            <summary>
            Gets or sets the name of the property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.UseBehaviorName">
            <summary>
            Gets or sets a value indicating whether to search on the behavior name.
            </summary>
            <value><c>true</c> if searching on the behavior name; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.BehaviorName">
            <summary>
            Gets or sets the name of the behavior.
            </summary>
            <value>The name of the behavior.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.QueryCommand">
            <summary>
            Gets or sets the query command.
            </summary>
            <value>The query command.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.SearchSelectionContextMenu">
            <summary>
            Gets the search selection context menu.
            </summary>
            <value>The search selection context menu.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SearchViewModel.DeleteCommand">
            <summary>
            Gets the delete command.
            </summary>
            <value>The delete command.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddModelAction">
            <summary>
            Implements the action for adding a new model to an EMT project.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddModelAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.AddModelAction"/> class.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectReferenceItemContextMenuProvider">
            <summary>
            Generates context menu items for project references on EMT projects in the game solution.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectReferenceItemContextMenuProvider.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectReferenceItemContextMenuProvider.CreateItems(Emergent.Toolbench.UI.Workbench.DynamicContextMenuEventArgs)">
            <summary>
            Creates the menu items.
            </summary>
            <param name="e">The event arguments.</param>
            <returns>The menu items.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PresetModelDropAdvisor.IsValidDropTarget(System.Windows.UIElement,System.Windows.IDataObject,System.Windows.Point)">
            <summary>
            Determines whether the control under the mouse is a valid drop target.
            </summary>
            <param name="targetElement">The target element.</param>
            <param name="dataObject">The data object.</param>
            <returns>
                <c>true</c> if the control under the mouse is a valid drop target otherwise,
            <c>false</c>.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PresetModelDropAdvisor.OnDropCompleted(System.Windows.UIElement,System.Windows.IDataObject,System.Windows.DragDropEffects,System.Windows.Point)">
            <summary>
            Called when the drop is completed.
            </summary>
            <param name="targetElement">The target element.</param>
            <param name="dataObject">The data object.</param>
            <param name="effects">The drag and drop effects.</param>
            <param name="dropPoint">The drop point.</param>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.PresetModelDropAdvisor.TargetUI">
            <summary>
            Gets or sets the target UI.
            </summary>
            <value>The target UI.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.MixinDragAdorner">
            <summary>
            Adorner shown when dragging a model over the mixin editor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinDragAdorner.#ctor(System.Windows.UIElement,Emergent.Toolbench.EntityModeling.EntityModel,Emergent.Toolbench.EntityModeling.EntityModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.MixinDragAdorner"/> class.
            </summary>
            <param name="adornedElement">The adorned element.</param>
            <param name="dragModel">The drag model.</param>
            <param name="currentModel">The current model.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinDragAdorner.UpdateTooltip(System.Windows.Point)">
            <summary>
            Updates the tooltip.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinDragAdorner.UpdateAction(System.Windows.Point)">
            <summary>
            Updates the current action.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinDragAdorner.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            When overridden in a derived class, participates in rendering operations that are 
            directed by the layout system. The rendering instructions for this element are not used
            directly when this method is invoked, and are instead preserved for later asynchronous
            use by layout and drawing.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element. This
            context is provided to the layout system.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinDragAdorner.GetVisualChild(System.Int32)">
            <summary>
            Overrides <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)"/>, and
            returns a child at the specified index from a collection of child elements.
            </summary>
            <param name="index">The zero-based index of the requested child element in the 
            collection.</param>
            <returns>
            The requested child element. This should not return null; if the provided index is out 
            of range, an exception is thrown.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinDragAdorner.ArrangeOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, positions child elements and determines a size for 
            a <see cref="T:System.Windows.FrameworkElement"/> derived class.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use 
            to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.MixinDragAdorner.CurrentAction">
            <summary>
            Gets the current action.
            </summary>
            <value>The current action.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.MixinDragAdorner.VisualChildrenCount">
            <summary>
            Gets the number of visual child elements within this element.
            </summary>
            <value></value>
            <returns>
            The number of visual child elements for this element.
            </returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTVirtualFolderItemViewModel">
            <summary>
            EMT-specific ViewModel class for virtual folder items in the Project Explorer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTVirtualFolderItemViewModel.#ctor(Emergent.Toolbench.EntityModeling.VirtualFolder)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTVirtualFolderItemViewModel"/> class.
            </summary>
            <param name="virtualFolder">The virtual folder.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTVirtualFolderItemViewModel.CanDrop(System.Collections.IList)">
            <summary>
            Determines whether someone can drop the specified objects.
            </summary>
            <param name="objects">The objects.</param>
            <returns><c>true</c> if this instance can drop the specified objects; otherwise,
            <c>false</c>.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTVirtualFolderItemViewModel.Drop(System.Collections.IList)">
            <summary>
            Implements the drop for the specified objects.
            </summary>
            <param name="objects">The objects.</param>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTVirtualFolderItemViewModel.DropTargetCommand">
            <summary>
            Gets the drop target command. Executed when a we drop an item over this item.
            </summary>
            <value>The drop target command.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTVirtualFolderItemViewModel.DeleteCommand">
            <summary>
            Gets the delete command.
            </summary>
            <value>The delete command.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTVirtualFolderItemViewModel.IsDragSource">
            <summary>
            We are a drag source.
            </summary>
            <value><c>true</c>, indiciating this is a drag source.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseItemsViewModel">
            <summary>
            ViewModel class for the contents list in Browse mode of Project Explorer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseItemsViewModel.#ctor(Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseItemsViewModel"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseItemsViewModel.Detach">
            <summary>
            Detaches this instance.  Unregister events.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseItemsViewModel.BrowseViewModel_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Reacts to PropertyChanged notifications on our BrowseViewModel.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseItemsViewModel.ContentsViewMode">
            <summary>
            Gets or sets the contents view display mode.
            </summary>
            <value>The contents view display mode.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseItemsViewModel.BackgroundMenu">
            <summary>
            Gets the contents of the "Background" menu
            </summary>
            <value>The contents of the "Background" menu
            </value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RenameAction">
            <summary>
            Implements the action for renaming an item in an EMT project.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RenameAction.CanExecute(Emergent.Toolbench.Actions.ExecutionContext)">
            <summary>
            Determines whether this action can execute in the specified context.
            </summary>
            <param name="context">The execution context.</param>
            <returns>True if the action can execute.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RenameAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Called to handle an action executed by the action executor.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.OpenAction">
            <summary>
            Implements an action that opens the views for an EMT ProjectContent within the active
            project. This will utilize read-only views if opening referenced content.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.OpenAction.CanExecute(Emergent.Toolbench.EntityModeling.ProjectContent)">
            <summary>
            Determines whether this action can execute on the specified content.
            </summary>
            <param name="content">The content to open.</param>
            <returns>True if the action can execute.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.OpenAction.Execute(Emergent.Toolbench.EntityModeling.ProjectContent)">
            <summary>
            Performs the action of opening the specified content.
            </summary>
            <param name="content">The content to open.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.OpenAction.CanExecute(Emergent.Toolbench.Actions.ExecutionContext)">
            <summary>
            Determines whether this action can execute in the specified context.
            </summary>
            <param name="context">The execution context.</param>
            <returns>True if the action can execute.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.OpenAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Called to handle an action executed by the action executor.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AddBehavior">
            <summary>
              Looks up a localized string similar to Add entity model behavior.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AddDiagramAction">
            <summary>
              Looks up a localized string similar to Add Diagram.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AddEnumerationValueCommand">
            <summary>
              Looks up a localized string similar to Add enumaration value.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AddExistingFiles">
            <summary>
              Looks up a localized string similar to Add Existing Files.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AddFileErrorTitle">
            <summary>
              Looks up a localized string similar to File not added.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AddMixin">
            <summary>
              Looks up a localized string similar to Add Mixin.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AddMixinToModel">
            <summary>
              Looks up a localized string similar to Drop in this region to add a mixin to &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AddModelAction">
            <summary>
              Looks up a localized string similar to Add Model.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AddProperty">
            <summary>
              Looks up a localized string similar to Add entity model property.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AddPropertyVisualizer">
            <summary>
              Looks up a localized string similar to Add entity model property visualizer.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AddReferenceUndoName">
            <summary>
              Looks up a localized string similar to Add Reference.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AddReverseMixinToModel">
            <summary>
              Looks up a localized string similar to Drop in this region to add a reverse mixin to &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AlignBottomUndo">
            <summary>
              Looks up a localized string similar to Align bottom.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AlignHorizontalCenterUndo">
            <summary>
              Looks up a localized string similar to Align horizontal center.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AlignLeftUndo">
            <summary>
              Looks up a localized string similar to Align left.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AlignRightUndo">
            <summary>
              Looks up a localized string similar to Align right.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AlignTopUndo">
            <summary>
              Looks up a localized string similar to Align top.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AlignVerticalCenterUndo">
            <summary>
              Looks up a localized string similar to Align vertical center.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.AssetNotFound">
            <summary>
              Looks up a localized string similar to Asset not found at {0}..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.BreadcrumbRootName">
            <summary>
              Looks up a localized string similar to Root.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.BringForwardUndo">
            <summary>
              Looks up a localized string similar to Bring forward.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.BringToFrontUndo">
            <summary>
              Looks up a localized string similar to Bring to front.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.CannotCreateMixinInvalidSelection">
            <summary>
              Looks up a localized string similar to The current selection can&apos;t be used as a mixin..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.CannotCreateReverseMixinFromCurrentProjectError">
            <summary>
              Looks up a localized string similar to The reverse mixin from &apos;{0}&apos; to &apos;{1}&apos; cannot be created in the &apos;{1}&apos; project context. Create a mixin in &apos;{0}&apos; project context instead..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.CannotCreateReverseMixinInvalidSelection">
            <summary>
              Looks up a localized string similar to The current selection can&apos;t be used as a reverse mixin..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.CannotViewAsset">
            <summary>
              Looks up a localized string similar to Cannot view asset..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ChangePropertyVisualizer">
            <summary>
              Looks up a localized string similar to Change property visualizer.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.CollapseAll">
            <summary>
              Looks up a localized string similar to Collapse All.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ConvertToModel">
            <summary>
              Looks up a localized string similar to Convert To Model.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ConvertToPreset">
            <summary>
              Looks up a localized string similar to Convert To Preset.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.CreateModelFromModel">
            <summary>
              Looks up a localized string similar to Create _Model Mixing &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.CreatePresetFromModel">
            <summary>
              Looks up a localized string similar to Create _Preset Mixing &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.CutSelection">
            <summary>
              Looks up a localized string similar to Cut diagram selection.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.DeleteAction">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.DeleteErrorFileReadOnly">
            <summary>
              Looks up a localized string similar to Cannot delete the file &quot;{0}&quot; because it is read-only or missing..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.DeleteObjectPrompt">
            <summary>
              Looks up a localized string similar to Are you sure you want to permanently delete this?.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.DeleteObjectTitle">
            <summary>
              Looks up a localized string similar to Delete from project?.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.DeleteObjectUndo">
            <summary>
              Looks up a localized string similar to Delete {0} from project.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.DiskAccessError">
             <summary>
               Looks up a localized string similar to File {0} 
            cannot be copied in 
            {1}. 
             Verify directory permission or duplicate files..
             </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.DistributeHorizontalUndo">
            <summary>
              Looks up a localized string similar to Distribute horizontal.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.DistributeVerticalUndo">
            <summary>
              Looks up a localized string similar to Distribute vertical.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.DoYouWantToContinue">
            <summary>
              Looks up a localized string similar to Do you want to continue?.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.DuplicateFilePrompt">
            <summary>
              Looks up a localized string similar to File {0} already exists, do you want to replace it?.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.DuplicateFileTitle">
            <summary>
              Looks up a localized string similar to Duplicate file.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.DuplicateReferenceTitle">
            <summary>
              Looks up a localized string similar to Duplicate Reference.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.DuplicateReferenceWarning">
            <summary>
              Looks up a localized string similar to This project is already referenced or there is a cycle with existing referenced projects..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.Edit">
            <summary>
              Looks up a localized string similar to Edit.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.EditBehavior">
            <summary>
              Looks up a localized string similar to Edit entity model behavior.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.EditMixinBehavior">
            <summary>
              Looks up a localized string similar to Edit entity model mixin behavior.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.EntityModelName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ExcludeAction">
            <summary>
              Looks up a localized string similar to Exclude.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ExcludeProjectObjectUndo">
            <summary>
              Looks up a localized string similar to Exclude {0} from project.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ExpandAll">
            <summary>
              Looks up a localized string similar to Expand All.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ExternalEditorLaunchFail">
            <summary>
              Looks up a localized string similar to Could not launch the external editor: {0} {1}.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ExternalToolLaunchFail">
            <summary>
              Looks up a localized string similar to Could not launch the external tool: {0} {1}..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.FileAccessError">
            <summary>
              Looks up a localized string similar to File &quot;{0}&quot; is not found or its access is denied..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.FileFormatError">
            <summary>
              Looks up a localized string similar to File &quot;{0}&quot; is badly formated..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.FileSaveError">
            <summary>
              Looks up a localized string similar to Error saving file &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.Insert">
            <summary>
              Looks up a localized string similar to Insert.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.LowerMixinPriority">
            <summary>
              Looks up a localized string similar to Lower mixin priority.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ModelMixinUndoName">
            <summary>
              Looks up a localized string similar to Change Model Mixin.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.MoveItemsAction">
            <summary>
              Looks up a localized string similar to Move Items.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.MoveItemUndo">
            <summary>
              Looks up a localized string similar to Move item(s).
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.MultiEditSelectionNotSupported">
            <summary>
              Looks up a localized string similar to The currently selected objects do not support multi-edit..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.MultipleObjects">
            <summary>
              Looks up a localized string similar to multiple objects.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.MultipleSourceModels">
            <summary>
              Looks up a localized string similar to [ Multiple Source Models ].
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.NewBehaviorName">
            <summary>
              Looks up a localized string similar to Behavior.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.NewFolderAction">
            <summary>
              Looks up a localized string similar to New Folder.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.NewFolderDefaultName">
            <summary>
              Looks up a localized string similar to Folder.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.NewPresetAction">
            <summary>
              Looks up a localized string similar to New Preset.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.NewPropertyName">
            <summary>
              Looks up a localized string similar to Property.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.NoSelection">
            <summary>
              Looks up a localized string similar to No object selected..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.OverrideAndEditBehavior">
            <summary>
              Looks up a localized string similar to Override and Edit mixin behavior.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ProjectContentDiagramInputError">
            <summary>
              Looks up a localized string similar to projectContent must be a diagram..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ProjectContentModelPresetInputError">
            <summary>
              Looks up a localized string similar to projectContent must be an entity model or a preset..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ProjectExplorerBrowseViewName">
            <summary>
              Looks up a localized string similar to Browse.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ProjectExplorerSearchViewName">
            <summary>
              Looks up a localized string similar to Search.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.PropertyOverrideNameConflict">
            <summary>
              Looks up a localized string similar to Model &apos;{0}&apos; would override and define property &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.PropertyVisualizerTypeChanged">
            <summary>
              Looks up a localized string similar to Property visualizer type changed.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.RaiseMixinPriority">
            <summary>
              Looks up a localized string similar to Raise mixin priority.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.RangeMaximumError">
            <summary>
              Looks up a localized string similar to The maximum must be higher than the minimum..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.RangeMinimumError">
            <summary>
              Looks up a localized string similar to The minimum must be lower than the maximum..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.RangeRestrictionValidatorError">
            <summary>
              Looks up a localized string similar to RangeRestrictionValidator can only handle restriction of type Range..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ReadOnlyReasonNotSameProject">
            <summary>
              Looks up a localized string similar to Not all objects are from the current project..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ReadOnlyReasonReadOnly">
            <summary>
              Looks up a localized string similar to The object is read-only..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.RemoveBehavior">
            <summary>
              Looks up a localized string similar to Remove entity model behavior.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.RemoveEntityModels">
            <summary>
              Looks up a localized string similar to Remove {0} from diagram.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.RemoveEnumerationValueCommand">
            <summary>
              Looks up a localized string similar to Remove enumeration value.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.RemoveMixin">
            <summary>
              Looks up a localized string similar to Remove mixin(s).
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.RemoveModelPrompt">
             <summary>
               Looks up a localized string similar to The following models are mixing in the selected models. 
            {0}
            Do you still want to {1} them?.
             </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.RemoveModelTitle">
            <summary>
              Looks up a localized string similar to {0} Models.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.RemoveProperty">
            <summary>
              Looks up a localized string similar to Remove entity model property.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.RemovePropertyVisualizer">
            <summary>
              Looks up a localized string similar to Remove entity model property visualizer.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.RemoveReferenceDependentObjectsWarning">
             <summary>
               Looks up a localized string similar to The following objects depend on the project you are about to remove.
            {0}
            
            .
             </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.RemoveReferenceTitle">
            <summary>
              Looks up a localized string similar to Remove Project Reference.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.RemoveReferenceUndoClearedWarning">
             <summary>
               Looks up a localized string similar to The undo/redo actions for this project will be cleared.
            
            .
             </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.RenameAction">
            <summary>
              Looks up a localized string similar to Rename.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ResetTraitOverrides">
            <summary>
              Looks up a localized string similar to Reset Trait Overrides.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.RestrictionConverterError">
            <summary>
              Looks up a localized string similar to Invalid type for value. Value must be of type PropertyType..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ScriptJustCreated">
            <summary>
              Looks up a localized string similar to The following script was just created: {0}.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.SendBackwardUndo">
            <summary>
              Looks up a localized string similar to Send backward.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.SendToBackUndo">
            <summary>
              Looks up a localized string similar to Send to back.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.SetValue">
            <summary>
              Looks up a localized string similar to Set Value.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.ToggleBehaviorOverride">
            <summary>
              Looks up a localized string similar to Has Behavior Override.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.TogglePropertyOverride">
            <summary>
              Looks up a localized string similar to Has Property Override.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.TogglePropertyValueOverride">
            <summary>
              Looks up a localized string similar to Has value override.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Properties.Resources.TypeChangedUndoName">
            <summary>
              Looks up a localized string similar to Property &quot;{0}&quot; Type=&quot;{1}&quot;..
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel">
            <summary>
            ViewModel class for Browse mode of the Project Explorer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.#ctor(Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel"/> class.
            </summary>
            <param name="projectExplorer">The project explorer view model.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.BrowseToLocation(Emergent.Toolbench.EntityModeling.IVirtualFolderItem)">
            <summary>
            Browses to location.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.FindViewModel(Emergent.Toolbench.EntityModeling.IVirtualFolderItem)">
            <summary>
            Finds the HierarchicalItemViewModel associated with the IVirtualFolderItem.
            The function will uses the parent of the IVirtualFolder to get up to the root of 
            the tree, then find its way back to the HierarchicalItemViewModel.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.CompareData(System.Object,System.Object)">
            <summary>
            Compares the data.
            Helper function for FindViewModel()
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.BrowseToLocation(Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel)">
            <summary>
            Browses to location.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.FindParentContainer(Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel)">
            <summary>
            Finds the parent container.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.BuildItemChain(Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel)">
            <summary>
            Builds the item chain.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.SetCurrentItem(System.String)">
            <summary>
            Sets the current item.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.ClearFilterCommandExecute">
            <summary>
            Clears the filter command execute.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.DeleteCommandExecute">
            <summary>
            Deletes the command execute.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.DeleteCommandCanExecute">
            <summary>
            Deletes the command can execute.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.ParentCommandExecute">
            <summary>
            Navigate to the parent.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.ParentCommandCanExecute">
            <summary>
            Check if it is possible to navigate to the parent.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.FindParentProject(Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel)">
            <summary>
            Finds the parent project.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.RaiseBreadcrumbPathChanged">
            <summary>
            Raises the breadcrumb path changed.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.Detach">
            <summary>
            Detaches this instance.  Unregister events
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.ViewName">
            <summary>
            Gets the name of the view.
            </summary>
            <value>The name of the view.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.ProjectExplorerViewModel">
            <summary>
            Gets the project explorer view model.
            </summary>
            <value>The project explorer view model.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.IsFolderViewExpanded">
            <summary>
            Gets or sets a value indicating whether the folder view is expanded.
            </summary>
            <value><c>true</c> if this instance is folder view expanded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.ItemsViewModel">
            <summary>
            Gets the items view model.
            </summary>
            <value>The items view model.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.CurrentItem">
            <summary>
            Gets or sets the current item. It represents the current HierarchicalItemViewModel being
            explored.
            </summary>
            <value>The current item.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.BreadcrumbPath">
            <summary>
            Gets or sets the breadcrumb path.
            </summary>
            <value>The breadcrumb path.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.TreeViewWidth">
            <summary>
            Gets the tree view width.
            </summary>
            <value>The tree view width.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.TreeRestoreWidth">
            <summary>
            Gets the tree restore view width.
            </summary>
            <value>The tree restore view width.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.ClearFilterCommand">
            <summary>
            Gets the command to clear the filter.
            </summary>
            <value>The command.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.DeleteCommand">
            <summary>
            Gets the command to delete an item.
            </summary>
            <value>The command.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.BrowseViewModel.ParentCommand">
            <summary>
            Gets the command to navigate to the parent of the current item, if possible.
            </summary>
            <value>The command.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ValueCloneHolder">
            <summary>
            The clone holder creates a proxy clone for the automatic override of DataValues
            When the clone is modified, the property is automatically overriden
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ValueCloneHolder.#ctor(Emergent.Toolbench.TypeService.Types.DataValue,System.Windows.FrameworkElement,Emergent.Toolbench.EntityModeling.EntityModelPropertyProxy)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ValueCloneHolder"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="editor">The editor.</param>
            <param name="propertyProxy">The property proxy.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ValueCloneHolder.Dispose">
            <summary>
            Release event handlers
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ValueCloneHolder.CloneSource">
            <summary>
            Clones the source.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ValueCloneHolder.OnSourceValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the Source DataValue.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ValueCloneHolder.OnCloneValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the Cloned DataValue.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ValueCloneHolder.Clone">
            <summary>
            Gets or sets the clone.
            </summary>
            <value>The clone.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ValueCloneHolder.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FlatReferencesViewModel">
            <summary>
            ViewModel class for managing EMT project references in the Project Explorer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FlatReferencesViewModel.#ctor(Emergent.Toolbench.EntityModeling.IProjectReferenceOwner,Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FlatReferencesViewModel"/> class.
            </summary>
            <param name="projectReferenceOwner">The project reference owner.</param>
            <param name="projectExplorer">The project explorer.</param>
        </member>
        <member name="E:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FlatReferencesViewModel.ReferenceAdded">
            <summary>
            Occurs when a reference is added in the resulting flat list.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FlatReferencesViewModel.ReferenceRemoved">
            <summary>
            Occurs when a reference is removed in the resulting flat list.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FlatReferencesViewModel.References">
            <summary>
            Gets the current list of references (flat).
            </summary>
            <value>The references.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FlatReferencesViewModel.ReferenceArgs">
            <summary>
            EventArgs class passed to ReferenceAdded and ReferenceRemoved events.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FlatReferencesViewModel.ReferenceArgs.Project">
            <summary>
            Gets or sets the project.
            </summary>
            <value>The project.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RevisionContextMenuProvider">
            <summary>
            Generates valid context menus for Project Explorer items for revision control.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RevisionContextMenuProvider.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.RevisionContextMenuProvider.CreateItems(Emergent.Toolbench.UI.Workbench.DynamicContextMenuEventArgs)">
            <summary>
            Creates the menu items for a specific context.
            </summary>
            <param name="e">The
            <see cref="T:Emergent.Toolbench.UI.Workbench.DynamicContextMenuEventArgs"/> instance
            containing the event data.</param>
            <returns>The generated menu items.</returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.OpenInProjectAction">
            <summary>
            Implements an action that opens an EMT ProjectContent in its own project document.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.OpenInProjectAction.CanExecute(Emergent.Toolbench.Actions.ExecutionContext)">
            <summary>
            Determines whether this action can execute in the specified context.
            </summary>
            <param name="context">The execution context.</param>
            <returns>True if the action can execute.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.OpenInProjectAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Called to handle an action executed by the action executor.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.NameValidationRule">
            <summary>
            Validation rule to validate project content name.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.NameValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            When overridden in a derived class, performs validation checks on a value.
            </summary>
            <param name="value">The value from the binding target to check.</param>
            <param name="cultureInfo">The culture to use in this rule.</param>
            <returns>
            A <see cref="T:System.Windows.Controls.ValidationResult"/> object.
            </returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.FolderNameValidationRule">
            <summary>
            Validation rule to validate folder names.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.FolderNameValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            When overridden in a derived class, performs validation checks on a value.
            </summary>
            <param name="value">The value from the binding target to check.</param>
            <param name="cultureInfo">The culture to use in this rule.</param>
            <returns>
            A <see cref="T:System.Windows.Controls.ValidationResult"/> object.
            </returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.PropertyIntegrityChecker">
            <summary>
            Interaction logic for PropertyIntegrityChecker.xaml
            </summary>
            <summary>
            PropertyIntegrityChecker
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PropertyIntegrityChecker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.PropertyIntegrityChecker"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PropertyIntegrityChecker.EntityModelPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Entities the model property changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PropertyIntegrityChecker.OnEntityModelPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:EntityModelPropertyChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PropertyIntegrityChecker.PropertyIntegrityChecker_PropertyPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyPropertyChanged event of the PropertyIntegrityChecker control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PropertyIntegrityChecker.OnUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [unloaded].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing 
            the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PropertyIntegrityChecker._popup_MouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the MouseDown event of the _popup control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance 
            containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PropertyIntegrityChecker.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.PropertyIntegrityChecker.Property">
            <summary>
            Gets or sets the entity model property.
            </summary>
            <value>The property.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.PropertyIntegrityChecker.Model">
            <summary>
            Gets or sets the entity model.
            </summary>
            <value>The model.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.MixinsEditor">
            <summary>
            The mixin editor show the specified entity entity model with its mixin at the top
            and its reverse mixins at the bottom.  It is shown inside a diagram layout.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.#ctor(Emergent.Toolbench.EntityModeling.ProjectContent)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.MixinsEditor"/> class
            with a project content.
            </summary>
            <param name="projectContent">Content of the project.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.ItemContainerGenerator_StatusChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the StatusChanged event of the ItemContainerGenerator control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.OnEntityModelChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the entity model changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.UpdateModel(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the current model to the new value
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.CreateDiagram">
            <summary>
            Creates the diagram and returns it
            </summary>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.AddModel(Emergent.Toolbench.EntityModeling.Diagram,Emergent.Toolbench.EntityModeling.EntityModel)">
            <summary>
            Helper: Adds a model to a diagram.
            </summary>
            <param name="diagram">The diagram.</param>
            <param name="model">The model.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.OnUpdateMixins(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handler called when the mixins or reverse mixins changes.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.RefreshDiagram">
            <summary>
            Refreshes the diagram.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.LayoutDiagram">
            <summary>
            Layouts the diagram.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.DistributeHorizontally(System.Collections.Generic.IEnumerable{System.Windows.Controls.ListBoxItem},System.Double)">
            <summary>
            Distributes the horizontally.
            </summary>
            <param name="items">The items.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.GetContainer(Emergent.Toolbench.EntityModeling.EntityModel)">
            <summary>
            Gets the container.
            </summary>
            <param name="model">The model.</param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [loaded].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the
            event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.OnUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when unloaded.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing 
            the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.BuildContextMenu">
            <summary>
            Builds the context menu for the Mixin Editor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.CreateModelFromModel_Executed(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Handles the Executed event of the CreateModelFromModel control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.CreatePresetFromModel_Executed(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Handles the Executed event of the CreatePresetFromModel control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.CreateModelFromModel_Enabled(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Check if we can execute the CreatePresetFromModel command
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.CreateNewModel(System.String,Emergent.Toolbench.EntityModeling.ModelingProjectDocument.ObjectType)">
            <summary>
            Creates a new model, can either be a Model or a Preset
            </summary>
            <param name="actionName">Name of the action for the Undo event.</param>
            <param name="objType">Type of the object.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.EnlargeBounds(System.Windows.Rect@)">
            <summary>
            Enlarges the bounds to include the viewport size at minimum.  Not done the same way
            as the regular diagram as we don't want to allow zoom out by large amounts.
            </summary>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.InitBounds">
            <summary>
            Inits the bounds.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.MixinsEditor.EntityModel">
            <summary>
            Gets or sets the context of the viewer. This can be an EntityModel or a Preset.
            This is a dependency property.
            </summary>
            <value>The EntityModel or the preset.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorSelector">
            <summary>
            Interaction logic for EntityModelEditorSelector.xaml
            </summary>
            <summary>
            EntityModelEditorSelector
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorSelector._root_PreviewMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the PreviewMouseLeftButtonDown event of the _root control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance 
            containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorSelector.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelEditorSelector.EntityModel">
            <summary>
            Gets or sets the entity model. This is a dependency property.
            </summary>
            <value>The entity model.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ValueWrapper">
            <summary>
            ValueWrapper
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ValueWrapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ValueWrapper"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ValueWrapper.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ReferenceGroupItemContextMenuProvider">
            <summary>
            Generates context menu items for project reference folders on EMT projects in the game
            solution.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ReferenceGroupItemContextMenuProvider.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ReferenceGroupItemContextMenuProvider.CreateItems(Emergent.Toolbench.UI.Workbench.DynamicContextMenuEventArgs)">
            <summary>
            Creates the menu items.
            </summary>
            <param name="e">The event arguments.</param>
            <returns>The menu items.</returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.PropertyVisualizerDefinitions">
            <summary>
            Contains utility functions that allow the UI to show the correct information
            for property visualizers.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PropertyVisualizerDefinitions.GetVisualizerTypes">
            <summary>
            Gets an ObservableCollection (for data binding) containing all the
            types of property visualizers.
            </summary>
            <returns>The ObservableCollection.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PropertyVisualizerDefinitions.GetDependencies(System.String)">
            <summary>
            Gets all the dependencies for a given visualizer.
            </summary>
            <param name="type">Type of visualizer.</param>
            <returns>An array containing all the dependency names.</returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTProjectItemViewModel">
            <summary>
            EMT-specific ViewModel class for EMT projects in the Project Explorer.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectItemViewModel">
            <summary>
            ViewModel class for EMT projects in the Project Explorer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectItemViewModel.#ctor(Emergent.Toolbench.EntityModeling.ModelingProjectDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectItemViewModel"/> class.
            </summary>
            <param name="project">The project.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectItemViewModel.Detach">
            <summary>
            Detaches the events.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectItemViewModel.OnLocationChanged(Emergent.Toolbench.ContentService.AbstractDocument)">
            <summary>
            Handles the PropertyChanged event of the Property, to notify when Name changed.
            </summary>
            <param name="sender">The source of the event.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectItemViewModel.DefaultCommandExecute">
            <summary>
            Executes the default command, expanding the project in the project explorer.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectItemViewModel.Project">
            <summary>
            Gets the project associated with the View Model.
            </summary>
            <value>The project.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectItemViewModel.VirtualFolder">
            <summary>
            Gets the Root virtual folder for the project.
            </summary>
            <value>The virtual folder.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectItemViewModel.Name">
            <summary>
            Gets the project name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectItemViewModel.Description">
            <summary>
            Gets the description.
            </summary>
            <value>No description.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectItemViewModel.DefaultCommand">
            <summary>
            Gets the default command. Represents the double-click command.
            </summary>
            <value>The default command.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectItemViewModel.IconImageSource">
            <summary>
            Gets the icon image source.
            </summary>
            <value>The icon image source.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectItemViewModel.IsDragSource">
            <summary>
            Gets a value indicating whether this instance is a drag source.
            </summary>
            <value><c>true</c> if this instance is a drag source; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectItemViewModel.Thumbnail">
            <summary>
            Gets the thumbnail.
            </summary>
            <value>The thumbnail image source.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectItemViewModel.File">
            <summary>
            Gets the file name of the item.
            </summary>
            <value>The file name.</value>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTProjectItemViewModel.#ctor(Emergent.Toolbench.EntityModeling.ModelingProjectDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTProjectItemViewModel"/> class.
            </summary>
            <param name="project">The project.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTProjectItemViewModel.CanDrop(System.Collections.IList)">
            <summary>
            Determines whether someone can can drop the specified objects.
            </summary>
            <param name="objects">The objects.</param>
            <returns><c>true</c> if this instance can drop the specified objects; otherwise,
            <c>false</c>.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTProjectItemViewModel.Drop(System.Collections.IList)">
            <summary>
            Implements the drop of the specified objects.
            </summary>
            <param name="objects">The objects.</param>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTProjectItemViewModel.DropTargetCommand">
            <summary>
            Gets the drop target command. Executed when a we drop an item over this item.
            </summary>
            <value>The drop target command.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTProjectItemViewModel.DeleteCommand">
            <summary>
            Gets the delete command.
            </summary>
            <value>The delete command.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.EMTProjectItemViewModel.IsDragSource">
            <summary>
            Gets a value indicating whether this instance is a drag source.
            </summary>
            <value>false, indicating this is not a drag source.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderRemoveAction">
            <summary>
            Implements the action for removing virtual folders from EMT projects.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderRemoveAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderRemoveAction"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderRemoveAction.BeginUndo">
            <summary>
            Starts the undo operation.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderRemoveAction.EndUndo">
            <summary>
            Ends the undo operation by restoring the removed items.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderRemoveAction.BeginRedo">
            <summary>
            Starts the redo operation by removing folders.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderRemoveAction.EndRedo">
            <summary>
            Ends the redo operation by removing leaves.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderRemoveAction.ConfirmRemove(System.Collections.Generic.IEnumerable{Emergent.Toolbench.EntityModeling.IVirtualFolderItem})">
            <summary>
            Warns the user about models that are used as mixins but are not deleted with the current
            action.
            </summary>
            <param name="deletedItems">The items to be deleted.</param>
            <returns>True if the user accepts, false otherwise.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderRemoveAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Called to handle an action executed by the action executor.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderRemoveAction.CanExecute(Emergent.Toolbench.Actions.ExecutionContext)">
            <summary>
            Determines whether this action can execute in the specified context.
            </summary>
            <param name="context">The execution context.</param>
            <returns>True if the action can execute.</returns>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderRemoveAction.IsUndoable">
            <summary>
            Gets a value indicating if the action is undo-able.
            </summary>
            <value>true, indicating the action can be undone.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderRemoveAction.Description">
            <summary>
            Gets a description used to display information about the undo/redo operation to the
            user.
            </summary>
            <value>The action description.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.FolderRemoveAction.ModifiesContent">
            <summary>
            Gets a value indicating if the <see cref="T:Emergent.Toolbench.Actions.IContentModifyingAction"/> should actually
            dirty the content.
            </summary>
            <value>true, indicating that content is dirtied.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.PresetEditorControl">
            <summary>
            Interaction logic for PresetEditorControl.xaml
            </summary>
            <summary>
            PresetEditorControl
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PresetEditorControl.SetPropertyHidingTraits(Emergent.Toolbench.EntityModeling.Trait[])">
            <summary>
            Sets the property traits that, when applied on a property, makes it hidden
            from the list.
            </summary>
            <param name="propertyHidingTraits">The traits collection.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.PresetEditorControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.PropertyProxyHiddenTraitToVisibilityConverter">
            <summary>
            Returns the visibility based on the hidden trait being set or not on the property proxy.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.BehaviorNameValidationRule">
            <summary>
            The validation rule to be used in WPF for validating the behavior names
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.BehaviorNameValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            When overridden in a derived class, performs validation checks on a value.
            </summary>
            <param name="value">The value from the binding target to check.</param>
            <param name="cultureInfo">The culture to use in this rule.</param>
            <returns>
            A <see cref="T:System.Windows.Controls.ValidationResult"/> object.
            </returns>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.BehaviorNameValidationRule.Model">
            <summary>
            Gets or sets the model that defines the scope of validation.
            </summary>
            <value>The model.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.BehaviorNameValidationRule.Behavior">
            <summary>
            Gets or sets the behavior to validate.
            </summary>
            <value>The behavior.</value>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramDropAdvisor.IsValidDropTarget(System.Windows.UIElement,System.Windows.IDataObject,System.Windows.Point)">
            <summary>
            Determines whether the control under the mouse is a valid drop target.
            </summary>
            <param name="targetElement">The target element.</param>
            <param name="dataObject">The data object.</param>
            <returns>
                <c>true</c> if the control under the mouse is a valid drop target otherwise,
            <c>false</c>.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramDropAdvisor.OnDropCompleted(System.Windows.UIElement,System.Windows.IDataObject,System.Windows.DragDropEffects,System.Windows.Point)">
            <summary>
            Called when the drop is completed.
            </summary>
            <param name="targetElement">The target element.</param>
            <param name="dataObject">The data object.</param>
            <param name="effects">The drag and drop effects.</param>
            <param name="dropPoint">The drop point.</param>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.DiagramDropAdvisor.TargetUI">
            <summary>
            Gets or sets the target UI.
            </summary>
            <value>The target UI.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector">
            <summary>
            Interaction logic for TraitOverridesSelector.xaml
            </summary>
            <summary>
            TraitOverridesSelector
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.RebuildActiveTraits">
            <summary>
            Regenerate the active traits array for this ITraitsOwner
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.InitCheckboxes">
            <summary>
            Initialize the checkboxes for the popup menu to the current
            state of the ActiveTraits.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.OnChecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle checkbox being checked.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.OnUnchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle checkbox being unchecked.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.AddTraitOverride(System.Windows.RoutedEventArgs,System.Boolean)">
            <summary>
            Add an override for a trait
            </summary>
            <param name="e">Event args</param>
            <param name="isActive">Determine if the override is on or off.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.OnPopupOpened(System.Object,System.EventArgs)">
            <summary>
            Initialize the checkboxes in the popup menu
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.ResetButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the reset button being pressed
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle when the control is loaded
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.RegisterCollectionEvents(Emergent.Toolbench.EntityModeling.ITraitsOwner)">
            <summary>
            Register to handle collection events for a traits owner
            </summary>
            <param name="owner">Traits owner to monitor</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.OnUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the UI being unloaded
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.UnregisterCollectionEvents(Emergent.Toolbench.EntityModeling.ITraitsOwner)">
            <summary>
            Unregister to handle collection events for a traits owner
            </summary>
            <param name="owner">Traits owner to monitor</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.TraitsOwnerChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle the traits owner dependency property being set.
            </summary>
            <param name="d">Dependency object</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.Traits_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handle the traitsowner collection being changed.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.TraitsOwner">
            <summary>
            Gets or sets the traits owner.
            This is a dependency property.
            </summary>
            <value>The traits owner.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.Traits">
            <summary>
            Gets or sets the traits.
            This is a dependency property.
            </summary>
            <value>The traits.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.ActiveTraits">
            <summary>
            The active traits for this ITraitsOwner
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.TraitOverridesOwner">
            <summary>
            Determine who owns the traits that will be overridden.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.TraitOverridesSelector.TraitProxy">
            <summary>
            View model class that brokers ActiveTrait Trait names
            with their friendly counterparts.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.DependenciesFlatStringConverter">
            <summary>
            Converts the dependencies of a property visualizer into a flat string
            for visualizing in the UI.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.Plugin">
            <summary>
            Handles the starting and stopping of the Entity Modeling UI plug-in.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.Plugin.Start">
            <summary>
            Starts the plug-in.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Plugin.StaticDescriptor">
            <summary>
            Gets the plug-in descriptor.
            </summary>
            <value>The plug-in descriptor.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.Plugin.StaticResources">
            <summary>
            Gets the plug-in resources.
            </summary>
            <value>The plug-in resources.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.NavigationMode">
            <summary>
            Specifies the type of navigation that is taking place.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.UI.NavigationMode.New">
            <summary>
            Navigating to new content.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.UI.NavigationMode.Back">
            <summary>
            Navigating back to the most recent content in back navigation history.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.UI.NavigationMode.Forward">
            <summary>
            Navigating to the most recent content on forward navigation history.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ModelingProjectNavigator">
            <summary>
            ModelingProjectNavigator
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ModelingProjectNavigator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ModelingProjectNavigator"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ModelingProjectNavigator.Navigate(Emergent.Toolbench.EntityModeling.ProjectContent)">
            <summary>
            Navigates the specified project content.
            </summary>
            <param name="projectContent">The target project content.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ModelingProjectNavigator.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ModelingProjectNavigator.JournalEntry">
            <summary>
            Represents an entry in either back or forward navigation history.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ModelingProjectNavigator.JournalEntry.ProjectContent">
            <summary>
            Gets or sets the project content related to the journal entry.
            </summary>
            <value>The project content.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.PropertyListConverter">
            <summary>
            Converts the list of properties on an EntityModel into an (sorted) ObservableCollection,
            which can then be bound to a combo box to allow easy property selection.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsView">
            <summary>
            Interaction logic for ItemsView.xaml
            </summary>
            <summary>
            ItemsView
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsView"/> class.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsView.HeaderProperty">
            <summary>
            The header dependency property.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsView.ItemsSourceProperty">
            <summary>
            The items source dependency property.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsView.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked whenever the effective value of any dependency property on this 
            <see cref="T:System.Windows.FrameworkElement"/> has been updated. The specific 
            dependency property that changed is reported in the arguments parameter. 
            </summary>
            <param name="e">The event data that describes the property that changed, as 
            well as old and new values.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsView.SelectedItems_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the SelectedItems control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The NotifyCollectionChangedEventArgs instance containing the event 
            data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsView.EditItem_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Loaded event of the EditItem control.
            Create the binding and add the validation rule for the rename operation
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing 
            the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsView.EditItem_EditFailed(System.Object,Emergent.Toolbench.UI.Common.WPF.EditFailedEventArgs)">
            <summary>
            Edits the item_ edit failed.
            Show error message on validation rule failed
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsView.EditItem_Unloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Unloaded event of the EditItem control.
            Clears the binding
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing 
            the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsView.Header">
            <summary>
            Gets or sets the header.
            </summary>
            <value>The header.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ItemsView.ItemsSource">
            <summary>
            Gets or sets the items source.
            </summary>
            <value>The items source.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ListViewStyleConverter">
            <summary>
            Applies custom multi-binding logic to the items view.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ListViewStyleConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts source values to a value for the binding target. The data binding engine calls
            this method when it propagates the values from source bindings to the binding target.
            </summary>
            <param name="values">The array of values that the source bindings produce.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ListViewStyleConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a binding target value to the source binding values.
            </summary>
            <param name="value">The value that the binding target produces.</param>
            <param name="targetTypes">The array of types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>An array of values that have been converted from the target value back to the
            source values.</returns>
            <exception cref="T:System.NotImplementedException">Always thrown.</exception>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SelectionConverter">
            <summary>
            Makes sure the items in the SelectedItems collection are selected.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SelectionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Used to select the item that are in the SelectedItems collection.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.SelectionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetTypes">The target types.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>Always null.</returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerMenuItemFactory">
            <summary>
            Helper class that generates context menu items based on actions and the selected item in the
            Project Explorer.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerMenuItemFactory.CreateMenuItem(System.String,System.String,System.Collections.Generic.IEnumerable{Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel})">
            <summary>
            Creates a menu item associated with a specific action.
            </summary>
            <param name="action">The action to execute when the item is clicked.</param>
            <param name="command">The command which is passed into the action.</param>
            <param name="item">The HierarchicalItemViewModel that is the target of the action.
            </param>
            <returns>The menu item.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerMenuItemFactory.CreateMenuItem(System.String,System.Collections.Generic.IEnumerable{Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel})">
            <summary>
            Creates a menu item associated with a specific action.
            </summary>
            <param name="action">The action to execute when the item is clicked.</param>
            <param name="item">The HierarchicalItemViewModel that is the target of the action.
            </param>
            <returns>The menu item.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerMenuItemFactory.CreateFromActions(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel})">
            <summary>
            Creates the menu items given an array of action names. To use commands, put the command
            in the string with the action name separated by a space.
            </summary>
            <param name="actions">The actions.</param>
            <param name="items">The items.</param>
            <returns>The menu items.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerMenuItemFactory.OnClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event handler for when a context menu item generated by this factory is clicked.
            This executes the action associated with the menu item.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the
            event data.</param>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerMenuItemFactory.ProjectExplorerActionWrapper">
            <summary>
            Wrapper class around an action which will be used to execute the action when a context
            menu item is clicked.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerMenuItemFactory.ProjectExplorerActionWrapper.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerMenuItemFactory.ProjectExplorerActionWrapper.#ctor(System.String,System.Collections.Generic.IEnumerable{Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.HierarchicalItemViewModel},System.Windows.Controls.MenuItem)">
            <summary>
            Constructor which takes the action, items, and sender that this wrapper wraps.
            </summary>
            <param name="actionName">The name of an action to execute.</param>
            <param name="items">The items.</param>
            <param name="sender">The sender.</param>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerMenuItemFactory.ProjectExplorerActionWrapper.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerMenuItemFactory.ProjectExplorerActionWrapper.Context">
            <summary>
            Gets the context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.ProjectExplorer.ProjectExplorerMenuItemFactory.ProjectExplorerActionWrapper.Action">
            <summary>
            Gets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.EntityModelViewModel">
            <summary>
            The <see cref="T:Emergent.Toolbench.EntityModeling.UI.EntityModelViewModel"/> wraps the functionality used by the preset editor when 
            viewing presets.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelViewModel.#ctor(Emergent.Toolbench.UI.ViewState,Emergent.Toolbench.TypeService.EditorPolicy,Emergent.Toolbench.EntityModeling.EntityModel)">
            <summary>
            Creates a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.EntityModelViewModel"/>
            </summary>
            <param name="viewState">The viewstate object to save state information to.</param>
            <param name="policy">The editor policy to use.</param>
            <param name="preset">The preset this viewmodel should represent.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelViewModel.Load(System.Windows.FrameworkElement)">
            <summary>
            Called when the viewmodel is bound to the Framework element and the element has 
            finished loading.
            </summary>
            <param name="element">The framework element</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelViewModel.Unload(System.Windows.FrameworkElement)">
            <summary>
            Called when the viewmodel is unloaded because the either the datacontext has changed,
            or the framework element has been unloaded.
            </summary>
            <param name="element">The framework element</param>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelViewModel.Preset">
            <summary>
            Gets the preset this view model represents.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelViewModel.PropertiesView">
            <summary>
            Gets the view models that represent the list of properties. This collection will consist
            of <see cref="T:Emergent.Toolbench.EntityModeling.UI.EntityModelPropertyViewModel"/> and potentially
            <see cref="T:Emergent.Toolbench.EntityModeling.UI.EntityModelPropertyGroupViewModel"/>.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelViewModel.EditorPolicy">
            <summary>
            Gets the editor policy to use.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelViewModel.Filter">
            <summary>
            Gets or sets the text filter to apply to the properties list.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelViewModel.SortMode">
            <summary>
            Gets or sets the sorting mode currently active on the properties.  This
            determines if the properties appear in groups or not.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelViewModel.FilterOverridden">
            <summary>
            Gets or sets whether or not we filter properties for overridden properties.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelViewModel.FilterSummary">
            <summary>
            Gets or sets ehther or not we filter properties for summary properties.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelViewModel.HiddenTraits">
            <summary>
            Gets or sets the traits to use for determing if the property is hidden.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelViewModel.CommandViewParentModel">
            <summary>
            Gets the command to view the parent model.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.PropertySortMode">
            <summary>
            This enum contains the different types of property sort modes.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.MultiEditControl">
            <summary>
            User control to display a <see cref="T:Emergent.Toolbench.EntityModeling.MultiEdit"/>
            instance.
            </summary>
            <summary>
            MultiEditControl
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MultiEditControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.MultiEditControl"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MultiEditControl.SetPropertyHidingTraits(System.Collections.Generic.IEnumerable{Emergent.Toolbench.EntityModeling.Trait})">
            <summary>
            Sets the property traits that, when applied on a property, makes it hidden
            from the list.
            </summary>
            <param name="propertyHidingTraits">The traits collection.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MultiEditControl.RefreshFilter">
            <summary>
            Forces the property filter to refresh, causing the view source to also refresh.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MultiEditControl.RefreshCollectionView">
            <summary>
            Forces a refresh on the mixin property list, which may need to happen as the result
            of a new selection or a change in filtering.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.MultiEditControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.ValueCellTemplateSelector">
            <summary>
            Data template selector class for the value cell of the ListView's GridView.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.SourceModelsToGroupNameConverter">
            <summary>
            From the list of source models declaring the mixin properties of a MultiEditProperty,
            get the common model name for grouping, which can be "multiple".
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.MultiEditControlModeToVisibilityConverter">
            <summary>
            Converter class to determine the visibility of the read-only information panel.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.MultiEditControlModeToBoolConverter">
            <summary>
            Converts the current <c>MultiEditControlMode</c> to bool. Yields <c>true</c> if the mode
            is <c>MultiEditControlMode.ReadWrite</c>, false otherwise. Typical usage is as a converter
            for the <c>IsEnabled</c> property of a control.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.MultiEditPropertyCustomSort">
            <summary>
            This classes sorts by source model name (for the grouping to appear in the same order all
            the time), taking care of putting the "multiple source" case at the end, and then by
            property name.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.EmptyEntityModelEditorControl">
            <summary>
            EmptyEntityModelEditorControl
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EmptyEntityModelEditorControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.DiagramMoveItemAction.IsUndoable">
            <summary>
            Gets a value indicating if the action is undo-able.
            </summary>
            <remarks>
            Normally this value should be true but if the action can conditionally become 
            non-undo-able, this property should reflect that.
            </remarks>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.DiagramToolbarItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.DiagramToolbarItem"/> class.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.UI.EntityModelPropertyGroupViewModel">
            <summary>
            A ViewModel for managing the display of a preset property group.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.UI.EntityModelPropertyGroupViewModel.#ctor(Emergent.Toolbench.EntityModeling.UI.EntityModelViewModel,System.Linq.IGrouping{Emergent.Toolbench.EntityModeling.EntityModel,Emergent.Toolbench.EntityModeling.MixinProperty})">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.EntityModeling.UI.EntityModelPropertyGroupViewModel"/> class.
            </summary>
            <param name="preset">The preset.</param>
            <param name="group">The group.</param>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelPropertyGroupViewModel.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelPropertyGroupViewModel.Model">
            <summary>
            Gets the model.
            </summary>
            <value>The model.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelPropertyGroupViewModel.IsExpanded">
            <summary>
            Gets or sets a value indicating whether this group is expanded.
            </summary>
            <value><c>true</c> if this group is expanded; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.EntityModeling.UI.EntityModelPropertyGroupViewModel.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
