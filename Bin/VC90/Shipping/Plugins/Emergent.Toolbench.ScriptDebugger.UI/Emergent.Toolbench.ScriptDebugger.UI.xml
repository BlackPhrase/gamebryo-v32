<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emergent.Toolbench.ScriptDebugger.UI</name>
    </assembly>
    <members>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.Resources.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.Resources.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.Resources.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.Resources.Resource.EditValueFromEntityView">
            <summary>
              Looks up a localized string similar to Script Debugger: property edit result received..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.Resources.Resource.EditValueFromLocalsView">
            <summary>
              Looks up a localized string similar to Script Debugger: local edit result received..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.Resources.Resource.StartDebuggingFailedCaption">
            <summary>
              Looks up a localized string similar to Cannot Start Debugging.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.Resources.Resource.StartDebuggingFailedMessage">
            <summary>
              Looks up a localized string similar to Debugging cannot be started because no game supporting Rapid Iteration is currently connected..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.Resources.Resource.StartDebuggingLogMessage">
            <summary>
              Looks up a localized string similar to ScriptDebugger: Debugging session started..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.Resources.Resource.StopDebuggingLogMessage">
            <summary>
              Looks up a localized string similar to ScriptDebugger: Debugging session stopped..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.Resources.Resource.ValidationEnityIDMessage">
            <summary>
              Looks up a localized string similar to Must enter a valid Entity ID.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EntityViewHost.#ctor">
            <summary>
            Constructor for EntityViewHost.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.ScriptDebugger.UI.EntityViewHost.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EntityViewHost.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EntityViewHost.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.EntityView">
            <summary>
            Interaction logic for EntityView.xaml
            </summary>
            <summary>
            EntityView
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.BaseVariableInspectorView">
                    A base implementation of the IVariableInspectorView class. This class provides a base 
                    implementation of the ValueChangedByUser function that handles non-POD property type 
                    editing from within Toolbench.  When an update is generated from the UI, Toolbench
                    sends a Lua debugger command to the running application to update the property.  It uses
                    a 'BehaviorAPI.SetProperty' call to set the property from Lua.  For non-POD types, the Lua
                    syntax needs to include the Lua module name in addition to the data value.
            
                    Any child classes of this view must call base.ValueChangedByUser in their implementation. 
                    Failure to do so will result in the inability to update non-POD property types from within 
                    the editor.
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.IVariableInspectorView.ValueChangedByUser(System.Object,System.EventArgs)">
            <summary>
            Called when the user edit the value in the UI
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EntityView.#ctor(Emergent.Toolbench.ScriptDebugger.UI.EntityViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.ScriptDebugger.UI.EntityView"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EntityView.ValueChangedByUser(System.Object,System.EventArgs)">
            <summary>
            Pushes a value change to the connected game.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EntityView.EditValueCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Checks if value editing is available.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EntityView.EditValueExecuted(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Called when value editing begins.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EntityView.OnExecutionResultReceived(System.Object,Emergent.Toolbench.ScriptDebugger.ExecutionResultEventArgs)">
            <summary>
            Responds to the arrival of an execution response by adding it to the log.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EntityView.TextBox_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the LostFocus event of the TextBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EntityView.TextBox_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the KeyDown event of the TextBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EntityView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.EntityView.SeletectedEditValueBox">
            <summary>
            Gets the selected edit value box.
            </summary>
            <value>The selected edit value box.</value>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.ImmediateView">
            <summary>
            Interaction logic for ImmediateView.xaml
            </summary>
            <summary>
            ImmediateView
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ImmediateView.#ctor">
            <summary>
            Constructor for ImmediateView.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ImmediateView.ExecuteStatement">
            <summary>
            Uses the current text in the input box as a statement to be remotely executed.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ImmediateView.OnExecuteButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Responds to a button click by remotely executing the statement in the input box.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ImmediateView.OnInputBoxKeyUp(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Responds to special keys in the input box, triggering statement execution or recall.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ImmediateView.OnAtBreakChanged(System.Object,System.EventArgs)">
            <summary>
            Responds to a change in debugger break status by updating the availability of the
            Execute button.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ImmediateView.OnExecutionResultReceived(System.Object,Emergent.Toolbench.ScriptDebugger.ExecutionResultEventArgs)">
            <summary>
            Responds to the arrival of an execution response by adding it to the statement history.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ImmediateView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.CallStackViewHost">
            <summary>
            Hosts the WPF CallStackView used with script debugging.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.ScriptDebugger.UI.CallStackViewHost.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.CallStackViewHost.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.CallStackViewHost.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.CallStackViewHost.#ctor">
            <summary>
            Constructor for CallStackViewHost.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.WatchesView">
            <summary>
            Interaction logic for WatchesView.xaml
            </summary>
            <summary>
            WatchesView
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchesView.#ctor">
            <summary>
            Constructor for WatchesView.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchesView.ValueChangedByUser(System.Object,System.EventArgs)">
            <summary>
            Called when the user edit the value in the UI
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchesView.AddWatchExecuted(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Implements the AddWatch command.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchesView.EditWatchExpressionCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Determines whether the EditWatchExpression command should be available.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchesView.EditWatchExpressionExecuted(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Implements the EditWatchExpression command.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchesView.DeleteWatchCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Determines whether the DeleteWatch command should be available.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchesView.DeleteWatchExecuted(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Implements the DeleteWatch command.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchesView.DeleteAllWatchesExecuted(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Implements the DeleteAllWatches command.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchesView.OnWatchesListMouseDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when user double-clicks the watches list.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchesView.OnWatchesListKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when user hits a key in the watches list.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchesView.DeleteSelectedWatch">
            <summary>
            Helper for deleting a selected watch.  This can be triggered in multiple ways.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchesView.EditSelectedWatch">
            <summary>
            Helper for editing the expression of a selected watch.  This can be triggered in
            multiple ways.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchesView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.Plugin">
            <summary>
            Handles startup for the script debugger UI.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.Plugin.Start">
            <summary>
            Sets up handlers to keep CodeView UI and the ScriptDebuggerService in sync.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.Plugin.OnAppConnected(System.String,System.String,System.String)">
            <summary>
            Called when an application connects.
            </summary>
            <param name="strAppName"></param>
            <param name="strAppType"></param>
            <param name="strAppExtra"></param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.Plugin.OnAppDisconnected(System.String,System.String,System.String)">
            <summary>
            Called when an application disconnects.
            </summary>
            <param name="strAppName"></param>
            <param name="strAppType"></param>
            <param name="strAppExtra"></param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.Plugin.OnDisconnected(System.UInt64)">
            <summary>
            Called when Toolbench is disconnected from the asset controller.
            </summary>
            <param name="connectionId">The connection id.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.Plugin.OnEditorBreakpointSet(System.Object,Emergent.Toolbench.CodeEditor.BreakpointEventArgs)">
            <summary>
            Called when a breakpoint is added in the CodeEditor.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.Plugin.OnEditorBreakpointCleared(System.Object,Emergent.Toolbench.CodeEditor.BreakpointEventArgs)">
            <summary>
            Called when a breakpoint is removed in the CodeEditor.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.Plugin.OnCodeViewContentLoaded(System.Object,Emergent.Toolbench.CodeEditor.CodeViewEventArgs)">
            <summary>
            Called when a CodeView opens new content or reloads existing content.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.Plugin.OnCodeDocumentSaved(System.Object,Emergent.Toolbench.CodeEditor.CodeDocumentEventArgs)">
            <summary>
            Called when a CodeDocument is saved.  Breakpoint records are updated to account for
            edits made to the file.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.Plugin.OnBreakpointsListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Called when breakpoints are added or removed, or when breakpoint conditions are
            changed.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.Plugin.OnWatchesListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Called when watches are added or removed, or when watch expressions are changed.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.Plugin.OnCallStackListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Called when the call stack records are modified.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.Plugin.OnDebuggingStateChanged(System.Object,System.EventArgs)">
            <summary>
            Called when the debugging state changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.Plugin.OnGameSolutionDocumentChanged(System.Object,Emergent.Toolbench.GameSolution.GameSolutionEventArgs)">
            <summary>
            Called when the active game solution is changed to trigger application of different
            settings.
            </summary>
            <param name="newDoc">The new game solution.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.Plugin.StoreUserBreakpointSettings">
            <summary>
            Updates the user settings of the current game solution to reflect breakpoint state in
            the current script debugging session.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.Plugin.StoreUserWatchSettings">
            <summary>
            Updates the user settings of the current game solution to reflect watch state in the
            current script debugging session.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.Plugin.ApplyUserSettings">
            <summary>
            Sets breapoint and watch state based on user settings previously stored in the game
            solution.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EditValueBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.ScriptDebugger.UI.EditValueBox"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EditValueBox.EditValueBox_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Loaded event of the EditValueBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EditValueBox.EditValueBox_Unloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Unloaded event of the EditValueBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EditValueBox.GetDependencyObjectFromVisualTree(System.Windows.DependencyObject,System.Type)">
            <summary>
            Walk visual tree to find the first DependencyObject 
            of the specific type.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EditValueBox.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/>
            routed event is raised on this element. Activate editing mode on double click
            </summary>
            <param name="e">The MouseButtonEventArgs that
            contains the event data. The event data reports that the left mouse button was pressed.
            </param>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.EditValueBox.VariableEntry">
            <summary>
            Gets or sets the variable entry.
            </summary>
            <value>The variable entry.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.EditValueBox.ParentView">
            <summary>
            Gets or sets the parent view.
            </summary>
            <value>The parent view.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.EditValueBox.IsSelectedInternal">
            <summary>
            Gets a value indicating whether the EditTextBlock is selected.
            </summary>
            <value>
                <c>true</c> if the EditTextBlock is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.EditValueBox.IsParentSelected">
            <summary>
            Gets whether the ListViewItem that contains the 
            EditBox is selected.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.BreakpointViewHost">
            <summary>
            Hosts the WPF BreakpointView used with script debugging.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.ScriptDebugger.UI.BreakpointViewHost.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.BreakpointViewHost.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.BreakpointViewHost.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.BreakpointViewHost.#ctor">
            <summary>
            Constructor for BreakpointViewHost.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.ContinueAction">
            <summary>
            This action allows script execution to proceed.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ContinueAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Passes a Continue request to the ScriptDebuggerProxy.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.ImmediateViewHost">
            <summary>
            Hosts the ImmediateView used with script debugging.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ImmediateViewHost.#ctor">
            <summary>
            Constructor for ImmediateViewHost.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.ScriptDebugger.UI.ImmediateViewHost.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ImmediateViewHost.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ImmediateViewHost.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.ScriptDebugger.UI.WatchEntityViewHost.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchEntityViewHost.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchEntityViewHost.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchEntityViewHost.#ctor">
            <summary>
            Constructor for WatchEntityViewHost.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.StepOutAction">
            <summary>
            This action steps out of the current line of script execution.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.StepOutAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Passes a StepOut request to the ScriptDebuggerProxy.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.PauseAction">
            <summary>
            This action pauses execution of all scripts.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.PauseAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Passes a Pause request to the ScriptDebuggerProxy.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.BuiltinOverviewDocAction">
            <summary>
            This action provides access to quick reference documentation for behavior authors.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.BuiltinOverviewDocAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Called when the action is invoked by Toolbench. Opens the web site in the user's
            default browser.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.ToggleBreakpointAction">
            <summary>
            This action toggles a breakpoint at the current line of script.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ToggleBreakpointAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Tells any active CodeView to toggle a breakpoint.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.EntityViewModel">
            <summary>
            A ViewModel class for managing the display of entity data in the Script Debugger.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.VariablesInspectorViewModel">
            <summary>
            A ViewModel class for managing the user preference of how values are displayed in the Script
            Debugger windows.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.VariablesInspectorViewModel.Load(System.Windows.FrameworkElement)">
            <summary>
            Registers for setting change notification.
            </summary>
            <param name="element">The element that is data-bound to this ViewModel.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.VariablesInspectorViewModel.Unload(System.Windows.FrameworkElement)">
            <summary>
            Unregisters for setting change notification.
            </summary>
            <param name="element">The element that is data-bound to this ViewModel.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.VariablesInspectorViewModel.OnSettingChanged(System.Object,Emergent.Toolbench.Settings.SettingChangedEventArgs)">
            <summary>
            Called when a user setting has changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The object containing the event data.</param>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.VariablesInspectorViewModel.IsHexadecimalDisplay">
            <summary>
            Gets or sets a value indicating whether this instance is hexadecimal display.
            </summary>
            <value><c>true</c> if this instance is hexadecimal display; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.VariablesInspectorViewModel.Locals">
            <summary>
            Gets the locals.
            </summary>
            <value>The locals.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.VariablesInspectorViewModel.Watches">
            <summary>
            Gets the watches.
            </summary>
            <value>The watches.</value>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EntityViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.ScriptDebugger.UI.EntityViewModel"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EntityViewModel.Load(System.Windows.FrameworkElement)">
            <summary>
            Registers for events on load.
            </summary>
            <param name="element">The element that is data-bound to the ViewModel.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EntityViewModel.Unload(System.Windows.FrameworkElement)">
            <summary>
            Unregisters event handlers on unload.
            </summary>
            <param name="element">The element that is data-bound to the ViewModel.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EntityViewModel.AtBreakChanged(System.Object,System.EventArgs)">
            <summary>
            Ats the break changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.EntityViewModel.Entity">
            <summary>
            Gets the entity.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.EntityViewModel.IsEntityIDReadOnly">
            <summary>
            Gets a value indicating whether the EntityID is read only.
            </summary>
            <value><c>true</c> if entity ID is read only; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.EntityViewModel.EntityProperties">
            <summary>
            Gets the Entity properties.
            </summary>
            <value>The Entity properties.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.EntityViewModel.ScriptDebuggerService">
            <summary>
            Gets the script debugger service.
            </summary>
            <value>The script debugger service.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.EntityViewModel.AtBreak">
            <summary>
            Gets a value indicating whether the script debugger is at break.
            </summary>
            <value><c>true</c> if at break; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.AutoEntityViewModel">
            <summary>
            Specialization of the EntityViewModel to show auto Entity properties.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.AutoEntityViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.ScriptDebugger.UI.AutoEntityViewModel"/> class.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.AutoEntityViewModel.Entity">
            <summary>
            Gets the entity.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.AutoEntityViewModel.IsEntityIDReadOnly">
            <summary>
            Gets a value indicating whether the EntityID is read only.
            </summary>
            <value><c>true</c> if entity ID is read only; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.AutoEntityViewModel.EntityProperties">
            <summary>
            Gets the Entity properties.
            </summary>
            <value>The Entity properties.</value>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.WatchEntityViewModel">
            <summary>
            Specialization of the EntityViewModel to show watched entity properties.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.WatchEntityViewModel.Entity">
            <summary>
            Gets the entity.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.WatchEntityViewModel.IsEntityIDReadOnly">
            <summary>
            Gets a value indicating whether the EntityID is read only.
            </summary>
            <value><c>true</c> if entity ID is read only; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.WatchEntityViewModel.EntityProperties">
            <summary>
            Gets the Entity properties.
            </summary>
            <value>The Entity properties.</value>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.WatchesViewHost">
            <summary>
            Hosts the WPF WatchesView used with script debugging.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.ScriptDebugger.UI.WatchesViewHost.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchesViewHost.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchesViewHost.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.WatchesViewHost.#ctor">
            <summary>
            Constructor for WatchesViewHost.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.RunToCursorAction">
            <summary>
            This action advances execution to the selected line of script.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.RunToCursorAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Passes a RunToCursor request to the ScriptDebuggerProxy.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.LocalsViewHost">
            <summary>
            Hosts the WPF LocalsView used with script debugging.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.ScriptDebugger.UI.LocalsViewHost.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.LocalsViewHost.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.LocalsViewHost.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.LocalsViewHost.#ctor">
            <summary>
            Constructor for LocalsViewHost.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.LocalsView">
            <summary>
            Interaction logic for LocalsView.xaml
            </summary>
            <summary>
            LocalsView
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.LocalsView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.ScriptDebugger.UI.LocalsView"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.LocalsView.ValueChangedByUser(System.Object,System.EventArgs)">
            <summary>
            Pushes a value change to the connected game.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.LocalsView.EditValueCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Checks if value editing is available.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.LocalsView.EditValueExecuted(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Called when value editing begins.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.LocalsView.OnExecutionResultReceived(System.Object,Emergent.Toolbench.ScriptDebugger.ExecutionResultEventArgs)">
            <summary>
            Responds to the arrival of an execution response by adding it to the log.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.LocalsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.LocalsView.SeletectedEditValueBox">
            <summary>
            Gets the selected edit value box.
            </summary>
            <value>The selected edit value box.</value>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.ConditionWindow">
            <summary>
            Interaction logic for ConditionWindow.xaml
            </summary>
            <summary>
            ConditionWindow
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ConditionWindow.#ctor">
            <summary>
            The ConditionWindow constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ConditionWindow.OnOkButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the user clicks the OK button.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ConditionWindow.OnCancelButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the user clicks the Cancel button.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ConditionWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.ConditionWindow.Condition">
            <summary>
            The condition entered in the dialog.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.BreakpointView">
            <summary>
            Interaction logic for BreakpointView.xaml
            </summary>
            <summary>
            BreakpointView
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.BreakpointView.#ctor">
            <summary>
            Constructor for BreakpointView.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.BreakpointView.EditBreakpointConditionCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Determines whether the EditBreakpointCondition command should be available.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.BreakpointView.EditBreakpointConditionExecuted(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Implements the EditBreakpointCondition command.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.BreakpointView.DeleteBreakpointCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Determines whether the DeleteBreakpoint command should be available.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.BreakpointView.DeleteBreakpointExecuted(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Implements the DeleteBreakpoint command.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.BreakpointView.DeleteAllBreakpointsExecuted(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Implements the DeleteAllBreakpoints command.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.BreakpointView.OnBreakpointListMouseDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when user double-clicks the breakpoint list.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.BreakpointView.OnBreakpointListKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when user hits a key in the breakpoint list.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.BreakpointView.DeleteSelectedBreakpoint">
            <summary>
            Helper for deleting a selected breakpoint.  This can be triggered in multiple ways.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.BreakpointView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.StepOverAction">
            <summary>
            This action steps over the current line of script execution.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.StepOverAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Passes a StepOver request to the ScriptDebuggerProxy.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.StepIntoAction">
            <summary>
            This action steps into the current line of script execution.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.StepIntoAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Passes a StepInto request to the ScriptDebuggerProxy.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.EntityIDConverter">
            <summary>
            A utility class for converting back values from string
            to a ulong
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EntityIDConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.EntityIDConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts back a string a value to ulong
            </summary>
            <param name="value">A string.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.HexConverter">
            <summary>
            A utility class for converting values to hexadecimal representation.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.ScriptDebugger.UI.HexConverter.HexCandidateRegex">
            <summary>
            A regular expression for matching Script Debugger values. Equal signs, commas, and curly
            braces are considered delimiters.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.HexConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.HexConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.
            </returns>
            <exception cref="T:System.NotImplementedException">Always thrown.</exception>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.HexConverter.ConvertToHex(System.Text.RegularExpressions.Match)">
            <summary>
            Converts a value to hex.
            </summary>
            <param name="m">A regular expression match.</param>
            <returns>A value represented in hex.</returns>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.EntityIDValidationRule">
            <summary>
            Validate an EntityID 
            Following format are valid : hexadecimal, signed int 64, unsigned int 64
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.CallStackView">
            <summary>
            Interaction logic for CallStackView.xaml
            </summary>
            <summary>
            CallStackView
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.CallStackView.#ctor">
            <summary>
            Constructor for CallStackView.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.CallStackView.OnCallStackListMouseDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when user double-clicks the call stack list.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.CallStackView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.ToggleScriptDebuggingAction">
            <summary>
            This action controls access to the ScriptDebugging perspective state.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ToggleScriptDebuggingAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Triggers access to the ScriptDebugging state.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ToggleScriptDebuggingAction.IsCurrentlyDebugging">
            <summary>
            Determines whether we are currently in debugging mode or not.
            </summary>
            <returns><c>true</c> if currently debugging; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ToggleScriptDebuggingAction.StartDebugging">
            <summary>
            Starts debugging.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ToggleScriptDebuggingAction.StopDebugging">
            <summary>
            Stops debugging.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ToggleScriptDebuggingAction.GameAvailableForDebugging">
            <summary>
            Checks if at least one game is currently available for debugging.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Emergent.Toolbench.ScriptDebugger.UI.ExpressionWindow">
            <summary>
            Interaction logic for ExpressionWindow.xaml
            </summary>
            <summary>
            ExpressionWindow
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ExpressionWindow.#ctor">
            <summary>
            The ExpressionWindow constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ExpressionWindow.OnOkButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the user clicks the OK button.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ExpressionWindow.OnCancelButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the user clicks the Cancel button.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.ScriptDebugger.UI.ExpressionWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.ScriptDebugger.UI.ExpressionWindow.Expression">
            <summary>
            The expression entered in the dialog.
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
