<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emergent.Toolbench.WorldBuilder.Framework</name>
    </assembly>
    <members>
        <member name="T:Emergent.Toolbench.WorldBuilder.Framework.FrameworkWorldAspect">
            <summary>
            The <see cref="T:Emergent.Toolbench.WorldBuilder.Framework.FrameworkWorldAspect"/> is the middle man that forwards events that happen 
            in WorldBuilder to the WorldBuilder messaging proxy who will translate and send the 
            information to unmanaged code where entities will be manipulated in the entity game
            framework.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Framework.FrameworkWorldAspect.OnEntitiesUpdating(System.Object,System.EventArgs)">
            <summary>
            Called when the EMT projects referenced by the block file are being updated in memory
            to a newer version than what world builder opened them with.  So we need to notify
            framework that it needs to reload flat models also.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Framework.FrameworkWorldAspect.SynchronizeEntities">
            <summary>
            Synchronizes all the entities found in the block and layer files with the entities 
            that need to be created on the framework side.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Framework.FrameworkWorldAspect.OnEntityAdded(System.Object,Emergent.Toolbench.WorldBuilder.EntitiesEventArgs)">
            <summary>
            Called when an entity gets added to the world.
            </summary>
            <param name="newEntity">The added entity.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Framework.FrameworkWorldAspect.OnEntityRemoved(System.Object,Emergent.Toolbench.WorldBuilder.EntitiesEventArgs)">
            <summary>
            Called when an entity gets removed from the world.
            </summary>
            <param name="removedEntity">The entity removed.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Framework.FrameworkWorldAspect.OnEntityPropertyChanged(System.Object,Emergent.Toolbench.WorldBuilder.EntityPropertyEventArgs)">
            <summary>
            Called when an entity property has changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The property change event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Framework.FrameworkWorldAspect.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when an entity in the aspect has been modified. 
            </summary>
            <param name="prop"></param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Framework.FrameworkWorldAspect.OnEntityPropertyReset(System.Object,Emergent.Toolbench.WorldBuilder.EntityPropertyEventArgs)">
            <summary>
            Called when an entity property is reset to the default value.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The property change event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Framework.FrameworkWorldAspect.OnEntitySelectionChanged(System.Object,Emergent.Toolbench.WorldBuilder.EntitySelectionEventArgs)">
            <summary>
            Called when the entity selection changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Framework.FrameworkWorldAspect.SynchronizeOverriddenProperties(Emergent.Toolbench.WorldBuilder.Entity)">
            <summary>
            Synchronizes the values of the overridden properties with the 
            framework by sending a set entity property message for each
            overridden property.  This is needed when entities are recreated
            from an undo.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Framework.FrameworkWorldAspect.FirePropertyValueChangedMessage(Emergent.Toolbench.WorldBuilder.Entity,Emergent.Toolbench.EntityModeling.IModelProperty)">
            <summary>
            Sends a message to the framework letting it know that a property
            has been changed on the entity.
            </summary>
            <param name="entity">The entity that has been changed.</param>
            <param name="property">The new overridden property value.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Framework.FrameworkWorldAspect.FirePropertyValueResetMessage(Emergent.Toolbench.WorldBuilder.Entity,Emergent.Toolbench.EntityModeling.IModelProperty)">
            <summary>
            Sends a message to the framework setting it know that a property has been reset
            on an entity to the default value.
            </summary>
            <param name="entity">The entity that has been changed.</param>
            <param name="property">The default property that is replacing the override.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Framework.FrameworkWorldAspect.OnSettingsChanged(System.Object,Emergent.Toolbench.Settings.SettingChangedEventArgs)">
            <summary>
            Called when the settings impacting the world view are modified.
            </summary>
            <param name="e"></param>
        </member>
    </members>
</doc>
