<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emergent.Toolbench.SimDebugger.UI</name>
    </assembly>
    <members>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.EntityTextVisual">
            <summary>
            A SimVisual for rendering important text about each entity, such as model name.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.SimVisual">
            <summary>
            Abstract base class for the visual layers rendered to the Sim Debugger WorldView. SimVisuals
            provide a graphical representation of the SimWorldAspect's databases.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimVisual.#ctor">
            <summary>
            Constructor for <see cref="T:Emergent.Toolbench.SimDebugger.UI.SimVisual"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimVisual.Initialize(System.String)">
            <summary>
            Initializes the SimVisual.
            </summary>
            <param name="visibilitySetting">The ID of a setting that toggles the visibility of the
            SimVisual.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimVisual.OnRendering(Emergent.Toolbench.SimDebugger.UI.WorldView,Emergent.Toolbench.SimDebugger.ISimWorldAspect)">
            <summary>
            Called when it is time to render the SimVisual to the WorldView canvas.
            </summary>
            <param name="view">The world view.</param>
            <param name="simWorld">The current world state to render.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimVisual.ProcessClick(System.Windows.Point,Emergent.Toolbench.SimDebugger.UI.WorldView)">
            <summary>
            Checks for a clickable object in the SimVisual at the given screen location.
            </summary>
            <param name="testPoint">The screen location to check.</param>
            <param name="view">The world view.</param>
            <returns>True if the click event is consumed by the SimVisual.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimVisual.ProcessDoubleClick(System.Windows.Point,Emergent.Toolbench.SimDebugger.UI.WorldView)">
            <summary>
            Checks for a double-click response in the SimVisual at the given screen location.
            </summary>
            <param name="testPoint">The screen location to check.</param>
            <param name="view">The world view.</param>
            <returns>True if the click event is consumed by the SimVisual.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimVisual.UpdateVisibility">
            <summary>
            Updates the visibility of the SimVisual by checking current user settings.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimVisual.IsSettingOn">
            <summary>
            Checks the visibility toggle in the user setting associated with this SimVisual.
            </summary>
            <returns><c>true</c> if the visibility setting is on; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.SimVisual.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Emergent.Toolbench.SimDebugger.UI.SimVisual"/> is currently
            visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityTextVisual.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.UI.EntityTextVisual"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityTextVisual.OnRendering(Emergent.Toolbench.SimDebugger.UI.WorldView,Emergent.Toolbench.SimDebugger.ISimWorldAspect)">
            <summary>
            Called when it is time to render the SimVisual to the WorldView canvas.
            </summary>
            <param name="view">The world view.</param>
            <param name="simWorld">The current world state to render.</param>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.BackdropVisual">
            <summary>
            A SimVisual for rendering a top-down backdrop image of the static game world.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.BackdropVisual.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.UI.BackdropVisual"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.BackdropVisual.OnRendering(Emergent.Toolbench.SimDebugger.UI.WorldView,Emergent.Toolbench.SimDebugger.ISimWorldAspect)">
            <summary>
            Called when it is time to render the SimVisual to the WorldView canvas.
            </summary>
            <param name="view">The world view.</param>
            <param name="simWorld">The current world state to render.</param>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.ZoomOutAction">
            <summary>
            Zooms out of the Sim Debugger world view.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.ZoomOutAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Zooms out of the world view.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.WidgetsVisual">
            <summary>
            A SimVisual for rendering top level HUD elements.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WidgetsVisual.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.UI.WidgetsVisual"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WidgetsVisual.OnRendering(Emergent.Toolbench.SimDebugger.UI.WorldView,Emergent.Toolbench.SimDebugger.ISimWorldAspect)">
            <summary>
            Called when it is time to render the SimVisual to the WorldView canvas.
            </summary>
            <param name="view">The world view.</param>
            <param name="simWorld">The current world state to render.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WidgetsVisual.ProcessClick(System.Windows.Point,Emergent.Toolbench.SimDebugger.UI.WorldView)">
            <summary>
            Checks for a clickable object in the SimVisual at the given screen location.
            </summary>
            <param name="testPoint">The screen location to check.</param>
            <param name="view">The world view.</param>
            <returns>True if the click event is consumed by the SimVisual.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WidgetsVisual.DrawText(System.Windows.Media.DrawingContext,System.String,System.Windows.Point)">
            <summary>
            Draws text at the specified location.
            </summary>
            <param name="context">The active drawing context.</param>
            <param name="text">The text to draw.</param>
            <param name="location">The location for the text.</param>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.SnapshotVisual">
            <summary>
            A SimVisual for rendering an inset snapshot of the live game world at a particular location.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SnapshotVisual.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.UI.SnapshotVisual"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SnapshotVisual.OnRendering(Emergent.Toolbench.SimDebugger.UI.WorldView,Emergent.Toolbench.SimDebugger.ISimWorldAspect)">
            <summary>
            Called when it is time to render the SimVisual to the WorldView canvas.
            </summary>
            <param name="view">The world view.</param>
            <param name="simWorld">The current world state to render.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SnapshotVisual.ProcessClick(System.Windows.Point,Emergent.Toolbench.SimDebugger.UI.WorldView)">
            <summary>
            Checks for a clickable object in the SimVisual at the given screen location.
            </summary>
            <param name="testPoint">The screen location to check.</param>
            <param name="view">The world view.</param>
            <returns>True if the click event is consumed by the SimVisual.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SnapshotVisual.ProcessDoubleClick(System.Windows.Point,Emergent.Toolbench.SimDebugger.UI.WorldView)">
            <summary>
            Checks for a double-click response in the SimVisual at the given screen location.
            </summary>
            <param name="testPoint">The screen location to check.</param>
            <param name="view">The world view.</param>
            <returns>True if the click event is consumed by the SimVisual.</returns>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.SimEntityModelGroup">
            <summary>
            SimEntityModelGroup is the display header and grouping of entities in the list by model.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimEntityModelGroup.#ctor(System.String)">
            <summary>
            Creation of the SimEntityModelGroup.
            </summary>
            <param name="model">Model name for this model group.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.SimEntityModelGroup.Count">
            <summary>
            Gets or sets the number of entities in this group.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.SimEntityModelGroup.Name">
            <summary>
            Gets the name of the model for this group.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.EventsView">
            <summary>
            Interaction logic for EventsView.xaml
            </summary>
            <summary>
            EventsView
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EventsView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.UI.EventsView"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EventsView.OnSelectedEntityChanged(System.Object,Emergent.Toolbench.SimDebugger.SimEntityEventArgs)">
            <summary>
            Called when the selected entity changes.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EventsView.FilterEvents">
            <summary>
            Updates the event list to match the selected entity.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EventsView.FilterUpdateWorker">
            <summary>
            Helper method that changes filtering properties on the list.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EventsView.ItemIsVisible(System.Object)">
            <summary>
            Filtering predicate for events.
            </summary>
            <param name="item">SimEvent for possible display.</param>
            <returns>True if the event should be displayed.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EventsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.EventsView.Session">
            <summary>
            Gets or sets the Sim Debugger session bound to the view.
            </summary>
            <value>The session bound to the view.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.RestartPlaybackAction">
            <summary>
            Resets Sim Debugger SessionDocument event playback and clears the SimWorld state.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.RestartPlaybackAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Restarts Sim Debugger playback at the beginning of the session history.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.ResetPlaybackSpeedAction">
            <summary>
            Sets the speed of Sim Debugger event playback to real-time.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.ResetPlaybackSpeedAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Sets the playback speed for a Sim Debugger session to real-time.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.Properties.Resources.AnotherSessionIsActive">
            <summary>
              Looks up a localized string similar to Another Simulation Debugger session document is already set to accept events..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.Properties.Resources.ClearSessionToGoLive">
            <summary>
              Looks up a localized string similar to Do you want to clear the current session in order to accept live events?.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.Properties.Resources.NotAcceptingData">
            <summary>
              Looks up a localized string similar to The session is not accepting data from a connected game..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.Properties.Resources.TitleCannotEnterLiveMode">
            <summary>
              Looks up a localized string similar to Cannot Enter Live Mode.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.Properties.Resources.TitleCannotRefreshBackdrop">
            <summary>
              Looks up a localized string similar to Cannot Refresh Backdrop.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.Properties.Resources.TitleSessionWillBeCleared">
            <summary>
              Looks up a localized string similar to Session Will Be Cleared.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.GridVisual">
            <summary>
            A SimVisual for rendering a grid to indicate world scale.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.GridVisual.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.UI.GridVisual"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.GridVisual.OnRendering(Emergent.Toolbench.SimDebugger.UI.WorldView,Emergent.Toolbench.SimDebugger.ISimWorldAspect)">
            <summary>
            Called when it is time to render the SimVisual to the WorldView canvas.
            </summary>
            <param name="view">The world view.</param>
            <param name="simWorld">The current world state to render.</param>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.ZoomInAction">
            <summary>
            Zooms in on the Sim Debugger world view.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.ZoomInAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Zooms in on the world view.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.WorldViewHost">
            <summary>
            Hosts the WPF WorldView used by the Sim Debugger.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WorldViewHost.#ctor">
            <summary>
            Constructor for WorldViewHost.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.SimDebugger.UI.WorldViewHost.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WorldViewHost.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WorldViewHost.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.WorldViewHost.HostedView">
            <summary>
            Gets the hosted WPF world view.
            </summary>
            <value>The hosted view.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.HeatMapVisual">
            <summary>
            A SimVisual for rendering a heat map of actor positions over time.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.SimDebugger.UI.HeatMapVisual.VisibleCellsLimit">
            <summary>
            A limit on the rows and columns of heat map data rendered at once.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.SimDebugger.UI.HeatMapVisual.BucketBrushes">
            <summary>
            Brushes used to render the heat map palette.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.HeatMapVisual.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.UI.HeatMapVisual"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.HeatMapVisual.OnRendering(Emergent.Toolbench.SimDebugger.UI.WorldView,Emergent.Toolbench.SimDebugger.ISimWorldAspect)">
            <summary>
            Called when it is time to render the SimVisual to the WorldView canvas.
            </summary>
            <param name="view">The world view.</param>
            <param name="simWorld">The current world state to render.</param>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.EntityViewModel">
            <summary>
            A ViewModel class for populating the Sim Debugger EntityView with properties of the selected
            entity.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityViewModel.#ctor(Emergent.Toolbench.SimDebugger.SessionDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.UI.EntityViewModel"/> class.
            </summary>
            <param name="content">The content used by the ViewModel.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityViewModel.Detach">
            <summary>
            Cleans up the ViewModel by freeing event handlers.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityViewModel.OnSelectedEntityChanged(System.Object,Emergent.Toolbench.SimDebugger.SimEntityEventArgs)">
            <summary>
            Called when the selected entity has changed to update ViewModel databound properties.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.EntityViewModel.Session">
            <summary>
            Gets or sets the session associated with the ViewModel.
            </summary>
            <value>The associated session.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.EntityViewModel.Entity">
            <summary>
            Gets the entity being edited.
            </summary>
            <value>The entity being edited.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.EntityViewModel.ModelName">
            <summary>
            Gets or sets the name of the model used by the selected entity.
            </summary>
            <value>The entity model name.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.EntityViewModel.GameID">
            <summary>
            Gets or sets the game-generated ID of the selected entity.
            </summary>
            <value>The entity ID as a display string.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.EntityViewModel.ToolID">
            <summary>
            Gets or sets the tool-time ID of the selected entity.
            </summary>
            <value>The tool GUID as a display string.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.EntityViewModel.EntityProperties">
            <summary>
            Gets the properties of the selected entity.
            </summary>
            <value>The properties of the selected entity.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.EntityViewHost">
            <summary>
            Hosts the WPF EntityView used with the Sim Debugger.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.SimDebugger.UI.EntityViewHost.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityViewHost.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityViewHost.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityViewHost.#ctor">
            <summary>
            Constructor for EntityViewHost.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityViewHost.OnContentConnected(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Called just after the content has been connected to the view.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityViewHost.OnContentDisconnected">
            <summary>
            Called just after the content is disconnected from the view.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityViewHost.OnContentClosed(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Called when content is closed, to free ViewModel resources.
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.ResetViewAction">
            <summary>
            Resets the Sim Debugger world view to default zoom and centered on the origin.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.ResetViewAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Resets the Sim Debugger world view position and scale.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.IEditablePropertyView">
            <summary>
            Interface to hook user property value edits.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.IEditablePropertyView.ValueChangedByUser(System.Object,System.EventArgs)">
            <summary>
            Called when a property value is edited in the UI.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.EntityListViewHost">
            <summary>
            View host for the EntityListView
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.SimDebugger.UI.EntityListViewHost.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityListViewHost.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityListViewHost.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityListViewHost.#ctor">
            <summary>
            Host view for the EntityListView
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityListViewHost.OnContentConnected(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Called just after the content has been connected to the view.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityListViewHost.OnContentDisconnected">
            <summary>
            Called just after the content is disconnected from the view.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.EntityIconsVisual">
            <summary>
            A SimVisual for rendering entity icons.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityIconsVisual.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.UI.EntityIconsVisual"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityIconsVisual.OnRendering(Emergent.Toolbench.SimDebugger.UI.WorldView,Emergent.Toolbench.SimDebugger.ISimWorldAspect)">
            <summary>
            Called when it is time to render the SimVisual to the WorldView canvas.
            </summary>
            <param name="view">The world view.</param>
            <param name="simWorld">The current world state to render.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityIconsVisual.ProcessClick(System.Windows.Point,Emergent.Toolbench.SimDebugger.UI.WorldView)">
            <summary>
            Checks for a clickable object in the SimVisual at the given screen location.
            </summary>
            <param name="testPoint">The screen location to check.</param>
            <param name="view">The world view.</param>
            <returns>True if the click event is consumed by the SimVisual.</returns>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.EventsViewHost">
            <summary>
            Hosts the WPF EventsView used with the Sim Debugger.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.SimDebugger.UI.EventsViewHost.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EventsViewHost.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EventsViewHost.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EventsViewHost.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.UI.EventsViewHost"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EventsViewHost.OnContentConnected(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Called just after the content has been connected to the view.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EventsViewHost.OnContentDisconnected">
            <summary>
            Called just after the content is disconnected from the view.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.RefreshBackdropAction">
            <summary>
            Requests a new backdrop image from the connected game. This is useful if the default
            backdrop image was generated before some assets were ready or if the static world has since
            changed significantly.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.RefreshBackdropAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Requests a new backdrop image for Sim Debugger.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.ExtensionPoints">
            <summary>
            Holds the extension point IDs for this assembly.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.SimDebugger.UI.ExtensionPoints.SimVisual">
            <summary>
            The extension point ID for SimVisuals, which are the graphical layers rendered to the
            WorldView.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.EditValueBox">
            <summary>
            Specialized EditTextBlock for editing entity property values. Supports edit on double-click.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EditValueBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.UI.EditValueBox"/> class.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.SimDebugger.UI.EditValueBox.PropertyProxyProperty">
            <summary>
            The PropertyProxy dependency property.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.SimDebugger.UI.EditValueBox.ParentViewProperty">
            <summary>
            The ParentView dependency property.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EditValueBox.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/>
            routed event is raised on this element. Activates editing mode on double click.
            </summary>
            <param name="e">The MouseButtonEventArgs that contains the event data. The event data
            reports that the left mouse button was pressed.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EditValueBox.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Loaded event of the EditValueBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EditValueBox.OnUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Unloaded event of the EditValueBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EditValueBox.GetDependencyObjectFromVisualTree(System.Windows.DependencyObject,System.Type)">
            <summary>
            Walks the visual tree to find the first DependencyObject of the specified type.
            </summary>
            <param name="startObject">The starting object for the search.</param>
            <param name="type">The type to find.</param>
            <returns>The first DepedencyObject of the requested type.</returns>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.EditValueBox.PropertyProxy">
            <summary>
            Gets or sets the property proxy.
            </summary>
            <value>The property proxy.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.EditValueBox.ParentView">
            <summary>
            Gets or sets the parent view.
            </summary>
            <value>The parent view.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.EditValueBox.IsSelectedInternal">
            <summary>
            Gets a value indicating whether the EditTextBlock is selected.
            </summary>
            <value><c>true</c> if the EditTextBlock is selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.EditValueBox.IsParentSelected">
            <summary>
            Gets a value indicating whether the ListViewItem that contains the EditBox is selected.
            </summary>
            <value><c>true</c> if the parent ListViewItem is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.TogglePausePlaybackAction">
            <summary>
            Toggles the paused state for Sim Debugger event playback.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.TogglePausePlaybackAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Toggles the Sim Debugger playback paused state.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.IncreasePlaybackSpeedAction">
            <summary>
            Increases the speed of Sim Debugger event playback.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.IncreasePlaybackSpeedAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Increases playback speed for a Sim Debugger session.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.ToggleLivePlaybackAction">
            <summary>
            Toggles the live state for Sim Debugger event playback. When in the live state, the Sim
            Debugger processes any events as soon as they are available.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.ToggleLivePlaybackAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Toggles the Sim Debugger playback live state.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.TogglePausePlaybackToolbarItem">
            <summary>
            Custom toolbar control for toggling the Sim Debugger Paused state.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.TogglePausePlaybackToolbarItem.CreateControl">
            <summary>
            Creates a ToolStripButton to implement the toggle UI.
            </summary>
            <returns>The configured control.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.TogglePausePlaybackToolbarItem.HandleNewContent(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Updates the button state based on the active Sim Debugger session.
            </summary>
            <param name="activeContent">The currently active content.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.TogglePausePlaybackToolbarItem.OnActiveContentChanged(System.Object,Emergent.Toolbench.ContentService.ActiveContentChangedEventArgs)">
            <summary>
            Called when the active content is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.TogglePausePlaybackToolbarItem.OnPausedChanged(System.Object,Emergent.Toolbench.SimDebugger.ToggleEventArgs)">
            <summary>
            Updates button state in response to a Paused state change.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.Plugin">
            <summary>
            Handles startup for the Sim Debugger UI.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.Plugin.Start">
            <summary>
            Runs startup logic for the plug-in when it is activated.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.Plugin.OnAppConnected(System.String,System.String,System.String)">
            <summary>
            Called when an app connection is established.
            </summary>
            <param name="strAppName">Name of the connected app.</param>
            <param name="strAppType">Type of the connected app.</param>
            <param name="strAppExtra">Addition data about the connected app.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.Plugin.LaunchSession">
            <summary>
            Attempts to begin a Sim Debugger live recording session by using an existing session
            document or creating a new one.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.SimVisualRenderer">
            <summary>
            A host for all SimVisuals, which provide the layered draw content for the Sim Debugger
            WorldView.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimVisualRenderer.#ctor(Emergent.Toolbench.SimDebugger.UI.WorldView)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.UI.SimVisualRenderer"/> class.
            </summary>
            <param name="view">The parent view.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimVisualRenderer.ProcessClick(System.Windows.Point)">
            <summary>
            Processes a mouse click by giving each SimVisual a chance to consume it in reverse draw
            order.
            </summary>
            <param name="testPoint">The screen space location of the mouse click.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimVisualRenderer.ProcessDoubleClick(System.Windows.Point)">
            <summary>
            Processes a mouse double-click by giving each SimVisual a chance to consume it in
            reverse draw order.
            </summary>
            <param name="testPoint">The screen space location of the mouse double-click.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimVisualRenderer.GetVisualChild(System.Int32)">
            <summary>
            Returns a child at the specified index from a collection of child elements.
            </summary>
            <param name="index">The zero-based index of the requested child element.</param>
            <returns>The requested child element.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimVisualRenderer.CreateSimVisuals">
            <summary>
            Creates all SimVisuals and stores them in the desired draw order.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimVisualRenderer.IsSimVisualOverridden(Emergent.Toolbench.IExtensionPoint,System.String)">
            <summary>
            Determines whether a SimVisual class is overridden by another SimVisual extension.
            </summary>
            <param name="extensionPoint">The SimVisual extension point.</param>
            <param name="visualClass">The SimVisual class to check.</param>
            <returns><c>true</c> if the SimVisual is overridden and should not be instantiated.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimVisualRenderer.OnRendering(System.Object,System.EventArgs)">
            <summary>
            Called when the draw target is about to be updated.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.SimVisualRenderer.VisualChildrenCount">
            <summary>
            Gets the number of visual child elements within this element.
            </summary>
            <value>The number of visual child elements for this element.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.WorldView">
            <summary>
            Interaction logic for WorldView.xaml.
            </summary>
            <summary>
            WorldView
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WorldView.#ctor(Emergent.Toolbench.UI.Workbench.AbstractView)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.UI.WorldView"/> class.
            </summary>
            <param name="parent">The parent view that hosts the WPF control.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WorldView.Reset">
            <summary>
            Resets the position and scale of the view to defaults.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WorldView.ZoomIn">
            <summary>
            Zooms in on the world by one increment.
            </summary>
            <returns>false if already fully zoomed in, else true.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WorldView.ZoomOut">
            <summary>
            Zooms out from the world by one increment.
            </summary>
            <returns>false if already fully zoomed out, else true.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WorldView.ConvertToScreenX(System.Double)">
            <summary>
            Converts a world space X coordinate to sceen space.
            </summary>
            <param name="worldX">The world space X coordinate.</param>
            <returns>The X coordinate in screen space.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WorldView.ConvertToScreenY(System.Double)">
            <summary>
            Converts a world space Y coordinate to screen space.
            </summary>
            <param name="worldY">The world space Y coordinate.</param>
            <returns>The Y coordinate in screen space.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WorldView.ConvertToWorldX(System.Double)">
            <summary>
            Converts a screen space X coordinate to world space.
            </summary>
            <param name="screenX">The screen space X coordinate.</param>
            <returns>The X coordinate in world space.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WorldView.ConvertToWorldY(System.Double)">
            <summary>
            Converts a screen space Y coordinate to world space.
            </summary>
            <param name="screenY">The screen space Y coordinate.</param>
            <returns>The Y coordinate in world space.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WorldView.OnMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when a mouse button is pressed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance
            containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WorldView.OnMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when a mouse button is released.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance
            containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WorldView.OnMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse moves.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance
            containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WorldView.OnMouseWheel(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Called when the mouse wheel is used.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseWheelEventArgs"/> instance
            containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WorldView.OnMouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse enters the view region.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance
            containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WorldView.OnMouseDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when a mouse button is double-clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The  cref="System.Windows.Input.MouseButtonEventArgs"/> instance
            containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.WorldView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.WorldView.Session">
            <summary>
            Gets the session document associated with the view.
            </summary>
            <value>The session associated with the view.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.WorldView.MouseWorldX">
            <summary>
            Gets or sets the current X position of the mouse in world space.
            </summary>
            <value>The X coordinate of the mouse in world space.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.WorldView.MouseWorldY">
            <summary>
            Gets or sets the current Y position of the mouse in world space.
            </summary>
            <value>The Y coordinate of the mouse in world space.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.EntityView">
            <summary>
            Interaction logic for EntityView.xaml
            </summary>
            <summary>
            EntityView
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.SimDebugger.UI.EntityView.EditValueCommand">
            <summary>
            Command for editing property values.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.UI.EntityView"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityView.ValueChangedByUser(System.Object,System.EventArgs)">
            <summary>
            Called when a property value is edited in the UI.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityView.EditValueCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Checks whether value editing is available.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityView.EditValueExecuted(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Starts property value editing.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityView.OnSimWorldSelectedEntityChanged(System.Object,Emergent.Toolbench.SimDebugger.SimEntityEventArgs)">
            <summary>
            Called when a different entity is selected.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Emergent.Toolbench.SimDebugger.SimEntityEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.EntityView.ViewModel">
            <summary>
            Gets or sets the ViewModel.
            </summary>
            <value>The ViewModel.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.EntityView.SeletectedEditValueBox">
            <summary>
            Gets the selected edit value box.
            </summary>
            <value>The selected edit value box.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.DecreasePlaybackSpeedAction">
            <summary>
            Decreases the speed of Sim Debugger event playback.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.DecreasePlaybackSpeedAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Decreases playback speed for a Sim Debugger session.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.ToggleLivePlaybackToolbarItem">
            <summary>
            Custom toolbar control for toggling the Sim Debugger Live state.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.ToggleLivePlaybackToolbarItem.CreateControl">
            <summary>
            Creates a ToolStripButton to implement toggle UI.
            </summary>
            <returns>The configured control.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.ToggleLivePlaybackToolbarItem.HandleNewContent(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Updates the button state based on the active Sim Debugger session.
            </summary>
            <param name="activeContent">The currently active content.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.ToggleLivePlaybackToolbarItem.OnActiveContentChanged(System.Object,Emergent.Toolbench.ContentService.ActiveContentChangedEventArgs)">
            <summary>
            Called when the active content is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.ToggleLivePlaybackToolbarItem.OnLiveChanged(System.Object,Emergent.Toolbench.SimDebugger.ToggleEventArgs)">
            <summary>
            Updates button state in response to a Live state change.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.SimEntityAspectViewModel">
            <summary>
            ViewModel for the EntityListView display.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimEntityAspectViewModel.#ctor(Emergent.Toolbench.SimDebugger.EntityDatabase)">
            <summary>
            Constructor for SimEntityAspectViewModel.
            </summary>
            <param name="entityDatabase">Session's current EntityDatabase to be passed at creation
            for direct reference.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimEntityAspectViewModel.Load(System.Windows.FrameworkElement)">
            <summary>
            Called on load of the ViewModel, hooks up the entity database add and remove delegates.
            </summary>
            <param name="element">Framework properties.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimEntityAspectViewModel.Unload(System.Windows.FrameworkElement)">
            <summary>
            Called on unload of the ViewModel, used to unhook the entity database add and remove
            delegates.
            </summary>
            <param name="element">Framework properties.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimEntityAspectViewModel.OnSimEntityAdded(System.Object,Emergent.Toolbench.SimDebugger.SimEntityEventArgs)">
            <summary>
            Called when the entity database has added an entity.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimEntityAspectViewModel.OnSimEntityRemoved(System.Object,Emergent.Toolbench.SimDebugger.SimEntityEventArgs)">
            <summary>
            Called when the entity database has removed an entity.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.SimEntityAspectViewModel.OnDatabaseReset(System.Object,Emergent.Toolbench.SimDebugger.SimEntityEventArgs)">
            <summary>
            Called when the entity database has been reset.
            </summary>
            <param name="sender">The database that has been reset.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="E:Emergent.Toolbench.SimDebugger.UI.SimEntityAspectViewModel.ViewEntityAdded">
            <summary>
            This event is fired when the view has finished adding a new entity.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.SimDebugger.UI.SimEntityAspectViewModel.ViewEntityRemoved">
            <summary>
            This event is fired when the view has finished removing an entity.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.SimEntityAspectViewModel.SimEntities">
            <summary>
            Gets the current entites to be displayed in the list.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UI.EntityListView">
            <summary>
            Interaction logic for EntityListView.xaml
            </summary>
            <summary>
            EntityListView
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityListView.#ctor">
            <summary>
            List of Simulated Entities to be displayed on the left dock by default.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityListView.OnEntitySimSelectionChanged(System.Object,Emergent.Toolbench.SimDebugger.SimEntityEventArgs)">
            <summary>
            The selection was changed by the simulation, either by user input or the sim itself.
            </summary>
            <param name="sender">SimWorld that the selection was changed in.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityListView.OnEntityListViewSeletionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            The selection was changed by either the user clicking a selection or the list being
            rebuilt.
            </summary>
            <param name="sender">The list that has been altered.</param>
            <param name="e">The selection change event.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UI.EntityListView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UI.EntityListView.Session">
            <summary>
            Gets or sets the current session.
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
