<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emergent.Toolbench.TestRunner</name>
    </assembly>
    <members>
        <member name="T:Emergent.Toolbench.TestRunner.ITestRunnerService">
            <summary>
            This interface defines the test runner service. The test runner service
            is responsible for extracting the tests and test fixtures from the 
            plug-ins that have registered with the service.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.ITestRunnerService.ExecuteTest(Emergent.Toolbench.TestRunner.ISingleTest)">
            <summary>
            Executes the specified test fired the necessary events as 
            appropriate.
            </summary>
            <param name="test">The test to execute.</param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.ITestRunnerService.ExecuteAllTests">
            <summary>
            Executes all tests that have been discovered by the test runner
            service. Note, all errors, warnings, etc. reported by the tests or
            as a result of execution failure are written to the appropriate log
            channel.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.ITestRunnerService.ExecuteAllTestsInFixture(Emergent.Toolbench.TestRunner.TestFixture)">
            <summary>
            Executes all tests located in a specified fixture and fires the 
            appropriate events as necessary.
            </summary>
            <param name="fixture">The fixture.</param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.ITestRunnerService.ExecutePluginTests(Emergent.Toolbench.TestRunner.ITestablePlugin)">
            <summary>
            Executes all tests in all fixtures of the plug-in as well as any
            static tests located in the specified plug-in.
            </summary>
            <param name="plugin">The plug-in containing the tests to run.
            </param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.ITestRunnerService.FindTestablePlugins">
            <summary>
            Gets the plug-ins that contain testable code.
            </summary>
            <returns>The plugins.</returns>>
        </member>
        <member name="E:Emergent.Toolbench.TestRunner.ITestRunnerService.TestStarting">
            <summary>
            Fired just before a single test is executed.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.TestRunner.ITestRunnerService.TestFinished">
            <summary>
            Fixed just after a single test has finished executing.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.TestRunner.ITestRunnerService.FixtureStarting">
            <summary>
            Fired just before a fixture is started.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.TestRunner.ITestRunnerService.FixtureFinished">
            <summary>
            Fired just after all tests in a single fixture have been executed.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.TestRunner.ITestRunnerService.TestablePluginStarting">
            <summary>
            Fired just before the tests in a testable plug-in are executed.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.TestRunner.ITestRunnerService.TestablePluginFinished">
            <summary>
            Fired after all tests exposed by a testable plug-in have been 
            executed.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.TestRunner.ITestRunnerService.TestsStarting">
            <summary>
            Fired just before the test runner service executes any tests.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.TestRunner.ITestRunnerService.TestsFinished">
            <summary>
            Fired after the test runner has executed any tests.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.ITestRunnerService.TestCount">
            <summary>
            Gets the number of tests discovered by the test runner service.
            </summary>
            <value>The number of tests.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.ITestRunnerService.ActiveTest">
            <summary>
            Gets the name of the test that is currently running.
            </summary>
            <value>The name of the test or null if no tests are currently 
                executing.
            </value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.ITestRunnerService.ActiveFixture">
            <summary>
            Gets the name of the fixture that is currently running.
            </summary>
            <value>The name of the fixture or null if no tests are currently 
                executing or the test that is executing is not contained in a 
                fixture.
            </value>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestRunnerService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TestRunner.TestRunnerService"/> 
            class. Registers for plug-in activated events coming from the 
            Platform.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestRunnerService.ExecuteTest(Emergent.Toolbench.TestRunner.ISingleTest)">
            <summary>
            Executes the specified test fired the necessary events as 
            appropriate.
            </summary>
            <param name="test">The test to execute.</param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestRunnerService.ExecuteAllTestsInFixture(Emergent.Toolbench.TestRunner.TestFixture)">
            <summary>
            Executes all tests located in a specified fixture and fires the 
            appropriate events as necessary.
            </summary>
            <param name="fixture">The fixture.</param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestRunnerService.ExecutePluginTests(Emergent.Toolbench.TestRunner.ITestablePlugin)">
            <summary>
            Executes all tests in all fixtures of the plug-in as well as any
            static tests located in the specified plug-in.
            </summary>
            <param name="plugin">The plug-in containing the tests to run.
            </param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestRunnerService.ExecuteAllTests">
            <summary>
            Executes all tests that have been discovered by the test runner
            service. Note, all errors, warnings, etc. reported by the tests or
            as a result of execution failure are written to the appropriate log
            channel.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestRunnerService.FindTestablePlugins">
            <summary>
            Gets the plug-ins that contain testable code.
            </summary>
            <value>The plugins.</value>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestRunnerService.Initialize">
            <summary>
            Searches the extension registry for all the plug-ins that are 
            testable. Note, this doesn't actually cause the plug-ins to be 
            loaded but merely added to an internal list so they can be loaded
            later when a test needs to be executed from a given plug-in.
            </summary>
            <exception cref="T:Emergent.Toolbench.PlatformException">Thrown is a catastrophic error
            occurs during initialization.
            </exception>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestRunnerService.Dispose">
            <summary>
            Disposes the object
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestRunnerService.RunFixtureTests(Emergent.Toolbench.TestRunner.TestFixture)">
            <summary>
            Runs all the tests in the specified fixture.
            </summary>
            <param name="fixture">The fixture.</param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestRunnerService.RunTest(Emergent.Toolbench.TestRunner.ISingleTest)">
            <summary>
            Runs a single test and fires the appropriate events as the tests 
            execute.
            </summary>
            <param name="test">The test.</param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestRunnerService.StartTests">
            <summary>
            Starts the testing cycle. If a testing cycle is currently executing
            this method is a no-op.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestRunnerService.EndTests">
            <summary>
            Ends the current test cycle. The end testing event is sent if this
            is the last set of tests to end.
            </summary>        
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestRunnerService.TestCount">
            <summary>
            Gets the number of tests discovered by the test runner service.
            </summary>
            <value>The number of tests.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestRunnerService.ActiveTest">
            <summary>
            Gets the name of the test that is currently running.
            </summary>
            <value>The name of the test or null if no tests are currently 
                executing.
            </value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestRunnerService.ActiveFixture">
            <summary>
            Gets the name of the fixture that is currently running.
            </summary>
            <value>The name of the fixture or null if no tests are currently 
                executing or the test that is executing is not contained in a 
                fixture.
            </value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestRunnerService.Name">
            <summary>
            Gets the name of this service.
            </summary>
            <value>Emergent.Toolbench.TestRunnerService</value>
        </member>
        <member name="T:Emergent.Toolbench.TestRunner.ExpectedExceptionAttribute">
            <summary>
            This attribute is used to tell the test service to fail if the 
            specified exception was not thrown. The following example will fail if
            the test code does not thrown an ArgumentNullException.
                [Test]
                [ExpectedException(typeof(ArgumentNullException)]
                public void Example()
                { }
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.ExpectedExceptionAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the attribute class.
            </summary>
            <param name="exceptionType">Type of the exception that the test 
                is expected to throw.
            </param>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.ExpectedExceptionAttribute.ExpectedException">
            <summary>
            Gets the class type for the expected exception.
            </summary>
            <value>The expected exception.</value>
        </member>
        <member name="T:Emergent.Toolbench.TestRunner.TestFinishedArgs">
            <summary>
            This event argument class contains the data necessary for reporting the 
            status of a test after it has been executed.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestFinishedArgs.#ctor(Emergent.Toolbench.TestRunner.ISingleTest,System.Boolean)">
            <summary>
            Creates the event arguments class.
            </summary>
            <param name="test">Test that just finished running.</param>
            <param name="passed">True if the test is question passed, false
                otherwise.
            </param>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestFinishedArgs.Test">
            <summary>
            Gets the test that just finished executing.
            </summary>
            <value>The full name of the test.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestFinishedArgs.Passed">
            <summary>
            Gets a value indicating whether the test pasted or failed.
            </summary>
            <value><c>true</c> if the test passed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestFinishedArgs.FailureException">
            <summary>
            Gets or sets the failure exception. The failure exception contains 
            the information necessary for displaying why a given test failed.
            The only way for a test to fail is for it to throw an exception.
            </summary>
            <value>The failure exception.</value>
        </member>
        <member name="E:Emergent.Toolbench.TestRunner.ITestablePlugin.FixturesAdded">
            <summary>
            This event is fired when new fixtures are added to the testable
            plug-in.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.ITestablePlugin.PluginDescriptor">
            <summary>
            Gets the plugin descriptor for the testable plug-in.
            </summary>
            <value>The plugin descriptor.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.ITestablePlugin.Name">
            <summary>
            Gets the unique name of the testable plug-in.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.ITestablePlugin.Fixtures">
            <summary>
            Gets the fixtures contained in the plug-in.
            </summary>
            <value>The fixtures.</value>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.FixturesAddedArgs.#ctor(Emergent.Toolbench.TestRunner.TestFixture[])">
            <summary>
            Creates the event arguments class.
            </summary>
            <param name="fixtures">The fixtures added as a result of the 
                event.
            </param>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.FixturesAddedArgs.Fixtures">
            <summary>
            Gets the fixtures that were added.
            </summary>
            <value>The fixtures.</value>
        </member>
        <member name="T:Emergent.Toolbench.TestRunner.TestablePluginStartingArgs">
            <summary>
            Contains event arguments pertaining to the start of a testable plug-in
            being tested.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestablePluginStartingArgs.#ctor(Emergent.Toolbench.TestRunner.ITestablePlugin)">
            <summary>
            Initializes the event arguments class.
            </summary>
            <param name="plugin">The plugin that is about to run.</param>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestablePluginStartingArgs.Plugin">
            <summary>
            Gets the plugin that is about to run.
            </summary>
            <value>The plugin.</value>
        </member>
        <member name="T:Emergent.Toolbench.TestRunner.FixtureFinishedArgs">
            <summary>
            Contains event arguments for the fixture finished event.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Emergent.Toolbench.TestRunner.FixtureFinishedArgs.#ctor(Emergent.Toolbench.TestRunner.TestFixture,System.Boolean)" -->
        <member name="P:Emergent.Toolbench.TestRunner.FixtureFinishedArgs.Fixture">
            <summary>
            Gets the fixture that has completed its tests.
            </summary>
            <value>The fixture.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.FixtureFinishedArgs.Passed">
            <summary>
            Gets a value indicating whether the fixture passed the tests. A 
            fixture passes if all of its tests pass.
            </summary>
            <value><c>true</c> if passed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Emergent.Toolbench.TestRunner.TestAttribute">
            <summary>
            This attribute marks a method as a Test callable from the test runner
            service. Note, there is an optional description property. 
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestAttribute.Description">
            <summary>
            Gets or sets the description of the test.
            </summary>
            <value>The description.</value>
        </member>
        <member name="T:Emergent.Toolbench.TestRunner.TestablePlugin">
            <summary>
            This class contains the data necessary to represent a testable plug-in
            with-in the testing service. The fixtures and tests in the plug-in are
            automatically discovered when a plug-in is loaded into the testing 
            service.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestablePlugin.#ctor(Emergent.Toolbench.IPluginDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TestRunner.TestablePlugin"/> 
            class.
            </summary>
            <param name="descriptor">The descriptor of the plug-in being 
                tested.
            </param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestablePlugin.DiscoverFixtures">
            <summary>
            Searches for all fixtures defined in the plug-in referenced by the 
            plug-in descriptor using reflection. Note, the fixture is 
            populated with tests based on the methods defined with the [Test]
            attribute.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestablePlugin.AddFixture(Emergent.Toolbench.TestRunner.TestFixture)">
            <summary>
            Adds a new fixture to the testable plug-in and fires the
            FixturesAdded event.
            </summary>
            <param name="fixtures">The fixtures.</param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestablePlugin.AddFixtures(Emergent.Toolbench.TestRunner.TestFixture[])">
            <summary>
            Adds an array of new fixtures to the testable plug-in and fires the
            FixturesAdded event.
            </summary>
            <param name="fixtures">The fixtures.</param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestablePlugin.FindTestsForFixture(Emergent.Toolbench.TestRunner.TestFixture,System.Type)">
            <summary>
            Finds the tests contained in the specified filter. This method will
            search the fixture's class type and extract any methods matching 
            the test method signature and containing the [Test] attribute. 
            Tests are automatically added to the fixture.
            </summary>
            <param name="fixture">The fixture.</param>
            <param name="type">The class type of the filter.</param>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestablePlugin.Name">
            <summary>
            Gets the unique name of the testable plug-in.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestablePlugin.PluginDescriptor">
            <summary>
            Gets the plugin descriptor for the testable plug-in.
            </summary>
            <value>The plugin descriptor.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestablePlugin.Fixtures">
            <summary>
            Gets the fixtures contained in the plug-in.
            </summary>
            <value>The fixtures.</value>
        </member>
        <member name="T:Emergent.Toolbench.TestRunner.TestsFinishedArgs">
            <summary>
            This event argument class contains the data necessary for reporting the 
            status of a test after it has been executed.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestsFinishedArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates the event arguments class.
            </summary>
            <param name="totalTests">Total tests.</param>
            <param name="failedTests">Failed tests.</param>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestsFinishedArgs.TotalTests">
            <summary>
            The total number of tests.
            </summary>
            <value>Total tests.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestsFinishedArgs.FailedTests">
            <summary>
            The number of failed tests.
            </summary>
            <value>Failed tests.</value>
        </member>
        <member name="T:Emergent.Toolbench.TestRunner.TestStartingArgs">
            <summary>
            This event arguments class is contains the data needed for the event 
            fired when a test is executed by the test runner service.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestStartingArgs.#ctor(Emergent.Toolbench.TestRunner.ISingleTest)">
            <summary>
            Initializes the test starting event arguments.
            </summary>
            <param name="test">The test that is about to run.</param>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestStartingArgs.Test">
            <summary>
            Gets the test that is about to run.
            </summary>
            <value>The test.</value>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestRunnerException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TestRunner.TestRunnerException"/>
            class.
            </summary>
            <param name="message">The message.</param>
            <remarks>The test name and fixture name are filled in automatically
               by the test runner when the exception is caught.
            </remarks>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestRunnerException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TestRunner.TestRunnerException"/> 
            class.
            </summary>
            <param name="testName">Name of the test that threw an exception.
            </param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestRunnerException.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TestRunner.TestRunnerException"/> 
            class.
            </summary>
            <param name="testName">Name of the test that threw an exception.
            </param>
            <param name="fixtureName">Name of the fixture containing the test.
            </param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestRunnerException.#ctor(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TestRunner.TestRunnerException"/> 
            class.
            </summary>
            <param name="testName">Name of the test that threw an exception.
            </param>
            <param name="fixtureName">Name of the fixture containing the test.
            </param>
            <param name="message">The message.</param>
            <param name="file">The file that failed the test.</param>
            <param name="line">The line where the test failed.</param>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestRunnerException.TestName">
            <summary>
            Gets the name of the test.
            </summary>
            <value>The name of the test.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestRunnerException.FixtureName">
            <summary>
            Gets the name of the fixture.
            </summary>
            <value>The name of the fixture.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestRunnerException.StackTrace">
            <summary>
            Gets a string representation of the frames on the call stack at the 
            time the current exception was thrown. Overridden since the base 
            exception's stack trace is read-only. The stack trace on a test 
            exception may be modified based on the test that occurred in order 
            to report the proper information to the user.
            </summary>
            <value></value>
            <returns>A string that describes the contents of the call stack, 
                with the most recent method call appearing first.
            </returns>        
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestRunnerException.File">
            <summary>
            Gets the file where the test failed the assertion.
            </summary>
            <remarks>This information only exists if the PDB exists
            and file information is saved.</remarks>
            <value>Full path to the file that filed the test assertion.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestRunnerException.Line">
            <summary>
            Gets the line where the test failed the assertion.
            </summary>
            <remarks>This information only exists if the PDB exists
            and line information is saved.</remarks>
            <value>The line number.</value>
        </member>
        <member name="T:Emergent.Toolbench.TestRunner.ITestFixture">
            <summary>
            This interface defines the interface used for implementing test 
            fixtures for use in Toolbench. These fixtures are automatically created
            when tests are run and introspected for the various tests, setup, and 
            tear-down methods supported by the framework.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.ITestFixture.PluginDescriptor">
            <summary>
            Gets the plugin descriptor for the plug-in that contains the test
            fixture. This can be used to load test resources contained in the 
            plug-in's local file system as well as query for additional info.
            </summary>
            <value>The plugin descriptor.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.ITestFixture.Name">
            <summary>
            Gets the name of the fixture.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.ITestFixture.Tests">
            <summary>
            Gets the tests contained in the fixture.
            </summary>
            <value>The tests.</value>
        </member>
        <member name="T:Emergent.Toolbench.TestRunner.FixtureStartingArgs">
            <summary>
            Contains arguments for the fixture started event.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.FixtureStartingArgs.#ctor(Emergent.Toolbench.TestRunner.TestFixture)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TestRunner.FixtureStartingArgs"/> 
            class.
            </summary>
            <param name="fixture">The fixture that is starting.</param>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.FixtureStartingArgs.Fixture">
            <summary>
            Gets the fixture that is starting.
            </summary>
            <value>The fixture.</value>
        </member>
        <member name="T:Emergent.Toolbench.TestRunner.SingleTest">
            <summary>
            This class contains the data necessary to run and track a single test.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TestRunner.ISingleTest">
            <summary>
            Defines the interface for a single test in the test framework.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.ISingleTest.Execute">
            <summary>
            Executes the test. Note, any errors, exceptions, asserts, etc. 
            should be handled outside of this method.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.ISingleTest.Name">
            <summary>
            Gets the name of the test.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.ISingleTest.Fixture">
            <summary>
            Gets the test fixture that contains the test. If the test is not
            owned by a fixture, then the result is null.
            </summary>
            <value>The fixture if valid or null otherwise.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.ISingleTest.PluginDescriptor">
            <summary>
            Gets the plugin descriptor of the plug-in containing the test code.
            </summary>
            <value>The plugin descriptor.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.ISingleTest.ExpectedException">
            <summary>
            Gets the type of exception this test is supposed to generate. 
            </summary>
            <value>The expected exception or null if there is no exception 
                expected.
            </value>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.SingleTest.#ctor(System.Reflection.MethodInfo,Emergent.Toolbench.TestRunner.TestFixture,Emergent.Toolbench.IPluginDescriptor,System.Type)">
            <summary>
            Constructs a new test object.
            </summary>        
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.SingleTest.Execute">
            <summary>
            Executes the test. Note, any errors, exceptions, asserts, etc.
            should be handled outside of this method.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.SingleTest.Name">
            <summary>
            Gets the name of the test.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.SingleTest.Fixture">
            <summary>
            Gets the test fixture that contains the test. If the test is not
            owned by a fixture, then the result is null.
            </summary>
            <value>The fixture if valid or null otherwise.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.SingleTest.PluginDescriptor">
            <summary>
            Gets the plugin descriptor of the plug-in containing the test code.
            </summary>
            <value>The plugin descriptor.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.SingleTest.ExpectedException">
            <summary>
            Gets the type of exception this test is supposed to generate.
            </summary>
            <value>
            The expected exception or null if there is no exception
            expected.
            </value>
        </member>
        <member name="T:Emergent.Toolbench.TestRunner.TestFixture">
            <summary>
            Implements the test fixture interface. Note, there are default 
            empty implementations for several fixture methods.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestFixture.SetupFixture">
            <summary>
            Enables setup code to be executed before any tests in the fixture
            are run.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestFixture.TeardownFixture">
            <summary>
            Called when all tests contained in the fixture have been executed.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestFixture.Setup">
            <summary>
            Called before each test in the fixture is executed.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestFixture.Teardown">
            <summary>
            Called after each test in the fixture is executed.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestFixture.AddTest(Emergent.Toolbench.TestRunner.ISingleTest)">
            <summary>
            Adds a new test to the fixture.
            </summary>
            <param name="newTest">The new test.</param>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestFixture.PluginDescriptor">
            <summary>
            Gets the plugin descriptor for the plug-in that contains the test
            fixture. This can be used to load test resources contained in the
            plug-in's local file system as well as query for additional info.
            </summary>
            <value>The plugin descriptor.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestFixture.Name">
            <summary>
            Gets the name of the fixture.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestFixture.Tests">
            <summary>
            Gets the tests contained in the fixture.
            </summary>
            <value>The tests.</value>
        </member>
        <member name="T:Emergent.Toolbench.TestRunner.ExtensionPoints">
            <summary>
            Holds the extension point ids for this assembly.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.TestRunner.ExtensionPoints.Testable">
            <summary>
            The testable extension point.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TestRunner.Assert">
            <summary>
            This class contains all assert methods that tests may use to track 
            success or failure.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.Assert.Fail">
            <summary>
            Forces the currently executing test to fail.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.Assert.Equals``1(``0,``0)">
            <summary>
            Checks the specified object for equality using the objects Equal
            method.
            </summary>
            <param name="expected">The expected.</param>
            <param name="actual">The actual.</param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.Assert.NotEquals``1(``0,``0)">
            <summary>
            Checks the specified object for non-equality using the objects 
            Equal method.
            </summary>
            <param name="expected">The expected.</param>
            <param name="actual">The actual.</param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.Assert.ReferenceEquals(System.Object,System.Object)">
            <summary>
            Determines whether to two objects specified point to the same 
            location in memory.
            </summary>
            <param name="expected">The first object.</param>
            <param name="actual">The second object to compare to the first.
            </param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.Assert.IsNull(System.Object)">
            <summary>
            Checks to see if the specified object is null and throws an 
            exception if it is not null.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.Assert.IsNotNull(System.Object)">
            <summary>
            Checks to see if the specified object is not null and throws an 
            exception if it is null.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.Assert.IsTrue(System.Boolean)">
            <summary>
            Determines whether the specified condition is true. If the 
            condition is false an exception is thrown.
            </summary>
            <param name="condition">Condition to test.</param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.Assert.IsFalse(System.Boolean)">
            <summary>
            Determines whether the specified condition is false. If the 
            condition is true an exception is thrown.
            </summary>
            <param name="condition">Condition to test.</param>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.Assert.ThrowTestException(System.String)">
            <summary>
            Helper method used when an assert should throw an exception. The 
            exception is filled with the currently executing test and 
            currently executing fixture.
            </summary>
            <param name="message">The exception message or failure reason.
            </param>
        </member>
        <member name="T:Emergent.Toolbench.TestRunner.TestsAddedArgs">
            <summary>
            Event class used to pass data when new test are added to a fixture.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.TestsAddedArgs.#ctor(Emergent.Toolbench.TestRunner.ISingleTest[])">
            <summary>
            Constructs the event arguments class.
            </summary>
            <param name="tests">The tests added to the fixture. Note, the 
                fixture that the tests were added to is the sender of the 
                event.
            </param>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestsAddedArgs.Tests">
            <summary>
            Gets the tests that were added as a result of the event.
            </summary>
            <value>The tests.</value>
        </member>
        <member name="T:Emergent.Toolbench.TestRunner.TestablePluginFinishedArgs">
            <summary>
            Event arguments containing the data pertaining to a plug-in finished 
            with its tests.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Emergent.Toolbench.TestRunner.TestablePluginFinishedArgs.#ctor(Emergent.Toolbench.TestRunner.ITestablePlugin,System.Boolean)" -->
        <member name="P:Emergent.Toolbench.TestRunner.TestablePluginFinishedArgs.Plugin">
            <summary>
            Gets the plugin that just finished being tested.
            </summary>
            <value>The plugin.</value>
        </member>
        <member name="P:Emergent.Toolbench.TestRunner.TestablePluginFinishedArgs.Passed">
            <summary>
            Gets a value indicating whether the plug-in passed its tests. A 
            plug-in passes if all tests and all fixtures passed their tests.
            </summary>
            <value><c>true</c> if passed; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Emergent.Toolbench.TestRunner.Plugin.Start">
            <summary>
            Starts the test runner service.
            </summary>
        </member>
    </members>
</doc>
