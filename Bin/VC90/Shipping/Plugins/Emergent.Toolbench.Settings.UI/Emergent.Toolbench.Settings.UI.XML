<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emergent.Toolbench.Settings.UI</name>
    </assembly>
    <members>
        <member name="T:Emergent.Toolbench.Settings.UI.SettingToggleToolbarItem">
            <summary>
            Custom toolbar control for toggling the state of a boolean Toolbench
            setting.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingToggleToolbarItem.Initialize(Emergent.Toolbench.IElementData)">
            <summary>
            Custom initialization that reads configuration data.
            </summary>
            <param name="configData">The configuration data.</param>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingToggleToolbarItem.CreateControl">
            <summary>
            Creates a ToolStripButton to implement setting toggle UI.
            </summary>
            <returns>The configured control.</returns>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingToggleToolbarItem.OnToolbarItemSizeChanged(System.Boolean)">
            <summary>
            Handles the toolbar icon resize event.
            </summary>
            <param name="largeIcons">True if large toolbar icons should used, else small icons.
            </param>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingToggleToolbarItem.LoadIcon(System.String)">
            <summary>
            Loads an icon to use with the toolbar button.
            </summary>
            <param name="path">Relative path to the image file for the icon.</param>
            <returns>The loaded image.</returns>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingToggleToolbarItem.GetSetting(Emergent.Toolbench.ContentService.AbstractContent,System.Boolean@)">
            <summary>
            Determines whether the setting associated with the toolbar button
            is currently valid and relevant based on the active content.  If
            so, the current value of the setting is retrieved.
            </summary>
            <param name="activeContent">The currently active content.</param>
            <param name="value">The current value of the setting.</param>
            <returns>True if the setting is ready for writing.</returns>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingToggleToolbarItem.HandleNewContent(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Configures the button state based on the availability and value of
            the boolean setting being tracked.
            </summary>
            <param name="activeContent">The currently active content.</param>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingToggleToolbarItem.OnButtonClicked(System.Object,System.EventArgs)">
            <summary>
            Handles a button click by toggling the associated setting.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingToggleToolbarItem.OnActiveContentChanged(System.Object,Emergent.Toolbench.ContentService.ActiveContentChangedEventArgs)">
            <summary>
            Called when the active content is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingToggleToolbarItem.OnSettingChanged(System.Object,Emergent.Toolbench.Settings.SettingChangedEventArgs)">
            <summary>
            Updates button state in response to a setting change.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="T:Emergent.Toolbench.Settings.UI.SettingWindow">
            <summary>
            Interaction logic for SettingWindow.xaml
            </summary>
            <summary>
            SettingWindow
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingWindow.#ctor">
            <summary>
            Basic constructor for the Settings Window. All open documents
            will be included in the settings.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingWindow.#ctor(Emergent.Toolbench.ContentService.AbstractDocument)">
            <summary>
            Specific constructor for the Settings Window. Only the specified
            document will be included in the settings.
            </summary>
            <param name="documentWithSettings"></param>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingWindow.#ctor(Emergent.Toolbench.ContentService.AbstractDocument,Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Specific constructor for the Settings Window. Only the specified
            document will be included in the settings.
            </summary>
            <param name="documentWithSettings"></param>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.Settings.UI.SettingToggleGroupToolbarItem">
            <summary>
            Custom toolbar control for toggling one state of an enumerated type
            Toolbench setting.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingToggleGroupToolbarItem.Initialize(Emergent.Toolbench.IElementData)">
            <summary>
            Custom initialization that reads configuration data.
            </summary>
            <param name="configData">The configuration data.</param>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingToggleGroupToolbarItem.CreateControl">
            <summary>
            Creates a ToolStripButton to implement setting toggle UI.
            </summary>
            <returns>The configured control.</returns>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingToggleGroupToolbarItem.OnToolbarItemSizeChanged(System.Boolean)">
            <summary>
            Handles the toolbar icon resize event.
            </summary>
            <param name="largeIcons">True if large toolbar icons should used, else small icons.
            </param>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingToggleGroupToolbarItem.LoadIcon(System.String)">
            <summary>
            Loads an icon to use with the toolbar button.
            </summary>
            <param name="path">Relative path to the image file for the icon.</param>
            <returns>The loaded image.</returns>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingToggleGroupToolbarItem.GetSetting(Emergent.Toolbench.ContentService.AbstractContent,System.String@)">
            <summary>
            Determines whether the setting associated with the toolbar button
            is currently valid and relevant based on the active content.  If
            so, the current value of the setting is retrieved.
            </summary>
            <param name="activeContent">The currently active content.</param>
            <param name="value">The current value of the setting.</param>
            <returns>True if the setting is ready for writing.</returns>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingToggleGroupToolbarItem.HandleNewContent(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Configures the button state based on the availability and value of
            the setting being tracked.
            </summary>
            <param name="activeContent">The currently active content.</param>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingToggleGroupToolbarItem.OnButtonClicked(System.Object,System.EventArgs)">
            <summary>
            Handles a button click by toggling the associated setting.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingToggleGroupToolbarItem.OnActiveContentChanged(System.Object,Emergent.Toolbench.ContentService.ActiveContentChangedEventArgs)">
            <summary>
            Called when the active content is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingToggleGroupToolbarItem.OnSettingChanged(System.Object,Emergent.Toolbench.Settings.SettingChangedEventArgs)">
            <summary>
            Updates button state in response to a setting change.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="T:Emergent.Toolbench.Settings.UI.SettingsDialogAction">
            <summary>
            The settings dialog action will launch the settings dialog window.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingsDialogAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Executes the action, opening the settings dialog.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="T:Emergent.Toolbench.Settings.UI.PageContainerControl">
            <summary>
            Interaction logic for PageContainerControl.xaml
            </summary>
            <summary>
            PageContainerControl
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.PageContainerControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.Settings.UI.SettingDropDownToolbarItem">
            <summary>
            Custom toolbar control for toggling the state of a boolean Toolbench
            setting.  It also has the ability to quick set the setting based on the
            list.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingDropDownToolbarItem.Initialize(Emergent.Toolbench.IElementData)">
            <summary>
            Custom initialization that reads configuration data.
            </summary>
            <param name="configData">The configuration data.</param>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingDropDownToolbarItem.CreateControl">
            <summary>
            Creates a ToolStripButton to implement setting toggle UI.
            </summary>
            <returns>The configured control.</returns>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingDropDownToolbarItem.OnToolbarItemSizeChanged(System.Boolean)">
            <summary>
            Handles the toolbar icon resize event.
            </summary>
            <param name="largeIcons">True if large toolbar icons should used, else small icons.
            </param>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingDropDownToolbarItem.GetSetting(Emergent.Toolbench.ContentService.AbstractContent,System.Object@)">
            <summary>
            Determines whether the setting associated with the toolbar button
            is currently valid and relevant based on the active content.  If
            so, the current value of the setting is retrieved.
            </summary>
            <param name="activeContent">The currently active content.</param>
            <param name="value">The current value of the setting.</param>
            <returns>True if the setting is ready for writing.</returns>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingDropDownToolbarItem.OnDropDownClick(System.Object,System.EventArgs)">
            <summary>
            Handles selection in the dropdown by updating the associated setting.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingDropDownToolbarItem.HandleNewContent(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Configures the button state based on the availability and value of
            the boolean setting being tracked.
            </summary>
            <param name="activeContent">The currently active content.</param>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingDropDownToolbarItem.OnActiveContentChanged(System.Object,Emergent.Toolbench.ContentService.ActiveContentChangedEventArgs)">
            <summary>
            Called when the active content is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingDropDownToolbarItem.OnSettingChanged(System.Object,Emergent.Toolbench.Settings.SettingChangedEventArgs)">
            <summary>
            Updates button state in response to a setting change.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.SettingDropDownToolbarItem.FormatDisplayText(System.Object)">
            <summary>
            Specifies how to convert a setting value to display text.
            </summary>
            <param name="value">The setting value to display.</param>
            <returns>The display text.</returns>
        </member>
        <member name="T:Emergent.Toolbench.Settings.UI.ScaleSnapSettingDropDownToolbarItem">
            <summary>
            Helper class for improving the display of scale snap setting dropdowns.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.ScaleSnapSettingDropDownToolbarItem.FormatDisplayText(System.Object)">
            <summary>
            Specifies how to convert a setting value to display text.
            </summary>
            <param name="value">The setting value to display.</param>
            <returns>The display text.</returns>
        </member>
        <member name="T:Emergent.Toolbench.Settings.UI.RotationSnapSettingDropDownToolbarItem">
            <summary>
            Helper class for improving the display of rotation snap setting dropdowns.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.RotationSnapSettingDropDownToolbarItem.FormatDisplayText(System.Object)">
            <summary>
            Specifies how to convert a setting value to display text.
            </summary>
            <param name="value">The setting value to display.</param>
            <returns>The display text.</returns>
        </member>
        <member name="T:Emergent.Toolbench.Settings.UI.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Settings.UI.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.Settings.UI.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.Settings.UI.DefaultSettingContainerControl">
            <summary>
            Interaction logic for DefaultSettingContainer.xaml
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.Settings.UI.DefaultSettingContainerControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
