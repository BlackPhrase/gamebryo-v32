<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emergent.Toolbench.ContentExporter</name>
    </assembly>
    <members>
        <member name="T:Emergent.Toolbench.ContentExporter.CommandLineExporter">
            <summary>
            Exports flat models via command line.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ContentExporter.CommandLineExporter.Run(Emergent.Toolbench.Arguments)">
            <summary>
            Exports flat models from a specified EMT project using the command line syntax:
            -solution "solutionPath" -export "contentName"
            </summary>
            <param name="args">The command arguments.</param>
            <returns>0 on successful export, else -1.</returns>
        </member>
        <member name="M:Emergent.Toolbench.ContentExporter.CommandLineExporter.ExportContent(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Takes an AbstractContent and finds the appropriate exporter.
            </summary>
            <param name="projDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.ContentExporter.CommandLineExporter.ExportBlock(Emergent.Toolbench.WorldBuilder.BlockDocument)">
            <summary>
            Takes a BlockDocument and exports it.
            </summary>
            <param name="block"></param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.ContentExporter.CommandLineExporter.ExportEMT(Emergent.Toolbench.EntityModeling.ModelingProjectDocument)">
            <summary>
            Takes a ModelingProjectDocument and exports it.
            </summary>
            <param name="emtProj"></param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.ContentExporter.CommandLineExporter.OpenGameSolution(System.String)">
            <summary>
            Takes a path to a GameSolution, ensures that it exists, and opens it.
            </summary>
            <param name="solutionPath"></param>
            <returns>Returns false if not successfull</returns>
        </member>
        <member name="M:Emergent.Toolbench.ContentExporter.CommandLineExporter.RetrieveContentToExport(System.String,System.Collections.Generic.Dictionary{System.String,System.Uri})">
            <summary>
            Retrieves a dictionary of AbstractDocument objects whose keys are the various project
            names.
            </summary>
            <param name="projectName"></param>
            <param name="contentDocMap"></param>
        </member>
        <member name="T:Emergent.Toolbench.ContentExporter.Plugin">
            <summary>
            Implements the plug-in interface for the content exporter plugin.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.ContentExporter.Plugin.Start">
            <summary>
            Starts the settings server and adds it to the platform.
            </summary>
        </member>
    </members>
</doc>
