<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emergent.Toolbench.TextEditor</name>
    </assembly>
    <members>
        <member name="T:Emergent.Toolbench.TextEditor.TextView">
            <summary>
            The TextView class provides for the display and editing of plain text documents.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextView.#cctor">
            <summary>
            Performs global initialization.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextView.OnFontNameChanged(System.Object,Emergent.Toolbench.Settings.SettingChangedEventArgs)">
            <summary>
            Responds to a font name change in user settings.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextView.OnFontSizeChanged(System.Object,Emergent.Toolbench.Settings.SettingChangedEventArgs)">
            <summary>
            Responds to a font size change in user settings.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextView.#ctor">
            <summary>
            Creates a new TextView object.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextView.InitializeComponent">
            <summary>
            Creates the syntax editor and document during view construction.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextView.OnTextDocumentUndoBufferChanged(System.Object,System.EventArgs)">
            <summary>
            Called when the undo buffer for the code document is manipulated.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextView.GoToLine(System.Int32)">
            <summary>
            Move the cursor to a specified line.
            </summary>
            <param name="line">Desired line for the cursor.</param>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextView.ShowFindDialog">
            <summary>
            Displays the Find dialog.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextView.FindNext">
            <summary>
            Searches for the next occurrence of the current find string.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextView.ShowReplaceDialog">
            <summary>
            Displays the Find and Replace dialog.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextView.ShowGoToDialog">
            <summary>
            Displays the Go To Line dialog.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextView.OnContentConnected(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Called when the view is connected to a text document. The system 
            ensures that only text documents are connected to a TextView. 
            When connected, the view's internal text editor UI is set to the 
            current text in the TextDocument.
            </summary>
            <param name="content">The content with which to connect.</param>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextView.OnContentDisconnecting">
            <summary>
            Called just before the content is disconnected from the view.  Unregisters event
            handlers.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextView.OnContentChanged(Emergent.Toolbench.ContentService.AbstractContent,Emergent.Toolbench.ContentService.ContentChangedEventArgs)">
            <summary>
            Called when the content is changed. Note, if the view id is this 
            view (meaning that this view generated the event) then no action 
            is taken.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Emergent.Toolbench.ContentService.ContentChangedEventArgs"/> 
                instance containing the event data.
            </param>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextView.OnTextChanged(System.Object,System.EventArgs)">
            <summary>
            Called when the text is changed in the underlying code editor 
            control.
            </summary>        
        </member>
        <member name="T:Emergent.Toolbench.TextEditor.TextDocument">
            <summary>
            Implements the document content interface providing access to plain text files.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TextEditor.TextDocument"/> class. The content changed
            event is also connected to an event handler. This is the preferred method of handling
            the content changed events since there are two methods that could modify content.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextDocument.Clear">
            <summary>
            Sets the text to the empty string.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextDocument.OnTextContentChanged(Emergent.Toolbench.ContentService.AbstractContent,Emergent.Toolbench.ContentService.ContentChangedEventArgs)">
            <summary>
            Called when the content has been changed. The event data always contains a string
            representing the new content.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TextEditor.TextDocument.Text">
            <summary>
            Gets the text currently in the document.
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:Emergent.Toolbench.TextEditor.TextSyntaxDocument">
            <summary>
            TextSyntaxDocuments wrap internal SyntaxDocuments for Toolbench editing operations.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextSyntaxDocument.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Constructs a TextSyntaxDocument.
            </summary>
            <param name="container">Container associated with the document.</param>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextSyntaxDocument.UndoWithoutFiringAction">
            <summary>
            Processes an undo operation without triggering a new action.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextSyntaxDocument.RedoWithoutFiringAction">
            <summary>
            Processes a redo operation without triggering a new action.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TextEditor.TextSyntaxDocument.IsUsingUndoBuffer">
            <summary>
            Determines whether change operations are currently using the undo buffer.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TextEditor.FindAction">
            <summary>
            Action providing access to the Find Text dialog.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.FindAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Performs the action, showing the Find Text dialog for the current text editor.
            </summary>
            <param name="context">Execution context.</param>
            <param name="style">Mode in which this action is run.</param>
            <returns>Success or failure of the operation.</returns>
        </member>
        <member name="T:Emergent.Toolbench.TextEditor.PlainTextFactory">
            <summary>
            A document factory for the plain text content type.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.PlainTextFactory.New(Emergent.Toolbench.ContentService.ContentCreationSettings)">
            <summary>
            Creates a new instance of a document. This method is called when the content is created.
            </summary>
            <param name="args">Additional configuration data used to create the document.</param>
            <returns>A new document instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.PlainTextFactory.Open(Emergent.Toolbench.ContentService.ContentCreationSettings)">
            <summary>
            Opens content from the specified location and builds a new document from that content.
            </summary>
            <param name="args">Additional configuration data used to create the document.</param>
            <returns>A new document instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.PlainTextFactory.Save(Emergent.Toolbench.ContentService.AbstractDocument)">
            <summary>
            Saves the specified document.
            </summary>
            <param name="document">The document to save.</param>
        </member>
        <member name="T:Emergent.Toolbench.TextEditor.TextEditorAction">
            <summary>
            An action for tracking changes to a code or script document.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextEditorAction.#ctor(Emergent.Toolbench.TextEditor.TextSyntaxDocument,Puzzle.SourceCode.UndoBlockCollection)">
            <summary>
            Constructs a TextEditorAction.
            </summary>
            <param name="syntaxDocument">The document being edited.</param>
            <param name="undoBlockCollection">The undo object.</param>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextEditorAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Normally performs the action.  In this case, the action is acknowledging a change that
            has already occurred.
            </summary>
            <param name="context">The execution context of the action.</param>
            <param name="style">The execution style of the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextEditorAction.EndUndo">
            <summary>
            Reverts the change to the code document.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextEditorAction.BeginRedo">
            <summary>
            Performs the code document change again.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextEditorAction.BeginUndo">
            <summary>
            Ends the undo step
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.TextEditorAction.EndRedo">
            <summary>
            Ends the redo step
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TextEditor.TextEditorAction.ModifiesContent">
            <summary>
            Notes that the action does modify content.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TextEditor.TextEditorAction.IsUndoable">
            <summary>
            Gets a value indicating if the action is undo-able.
            </summary>
            <remarks>
            Normally this value should be true but if the action can conditionally become 
            non-undo-able, this property should reflect that.
            </remarks>
        </member>
        <member name="P:Emergent.Toolbench.TextEditor.TextEditorAction.Description">
            <summary>
            Constructs text to describe the code document change.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TextEditor.ReplaceAction">
            <summary>
            Action providing access to the Replace Text dialog.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.ReplaceAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Performs the action, showing the Replace Text dialog for the current text editor.
            </summary>
            <param name="context">Execution context.</param>
            <param name="style">Mode in which this action is run.</param>
            <returns>Success or failure of the operation.</returns>
        </member>
        <member name="T:Emergent.Toolbench.TextEditor.GoToAction">
            <summary>
            Action providing access to the Go To Line dialog.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.GoToAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Performs the action, showing the Go To Line dialog for the current text editor.
            </summary>
            <param name="context">Execution context.</param>
            <param name="style">Mode in which this action is run.</param>
            <returns>Success or failure of the operation.</returns>
        </member>
        <member name="T:Emergent.Toolbench.TextEditor.FindNextAction">
            <summary>
            Action providing for "find next" search operations.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TextEditor.FindNextAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Performs the action, moving to the next occurrence of the search text.
            </summary>
            <param name="context">Execution context.</param>
            <param name="style">Mode in which this action is run.</param>
            <returns>Success or failure of the operation.</returns>
        </member>
    </members>
</doc>
