<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emergent.Toolbench.WorldBuilder.Environment</name>
    </assembly>
    <members>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyIntValue">
            <summary>
            Defines a property value type that uses an int as a value.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue">
            <summary>
            Defines the base property value.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue.ToString">
            <summary>
            Override of the default ToString function, that returns a textual representation
            of this property value.
            </summary>
            <returns>The value as a string.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue.Equals(System.Object)">
            <summary>
            Overrides object.Equals.
            </summary>
            <param name="obj">Object to test against.</param>
            <returns>True if the object and the value are equal, false otherwise.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue.ValueTypeEquals(System.Object)">
            <summary>
            Checks if the value is equal to the given object.
            </summary>
            <param name="obj">Object to check against.</param>
            <returns>True if the value and the object are equal, false otherwise.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue.GetHashCode">
            <summary>
            Serves as a hash function for this type.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue.ValueAsObject">
            <summary>
            Returns the value, cast as an object.
            </summary>
            <returns>The value as an object.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue.ValueToString">
            <summary>
            Returns the value as a string.
            </summary>
            <returns>The value as a string.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue.StringToValue(System.String)">
            <summary>
            Sets the value according to the given string.
            </summary>
            <param name="strValue">The string the value should be set to.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue.NotifyPropertyChanged(System.String)">
            <summary>
            Called when a property setter is invoked.
            </summary>
            <param name="propertyName">Name of the property that changed.</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue.Constraints">
            <summary>
            Gets or sets the constraints that our parent property has applied to it.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue.ValueAsString">
            <summary>
            Gets or sets the value in string format.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue.PropertyChanged">
            <summary>
            Event fired when a property is changed.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyIntValue.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyIntValue.#ctor(System.Int32)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="value">Initial value.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyIntValue.ValueToString">
            <summary>
            Converts the value to a string.
            </summary>
            <returns>The value as a string.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyIntValue.StringToValue(System.String)">
            <summary>
            Sets the value using a string.
            </summary>
            <param name="strValue">The string to set the value to.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyIntValue.ValueTypeEquals(System.Object)">
            <summary>
            Checks whether the given object is equal to the value.
            </summary>
            <param name="obj">Object to check.</param>
            <returns>Result of comparison.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyIntValue.ValueAsObject">
            <summary>
            Returns the value as an object.
            </summary>
            <returns>Value as object.</returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyIntValue.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyIntValueConstraints">
            <summary>
            Defines the constraint for an int property value.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValueConstraints">
            <summary>
            Defines the base property value constraint.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValueConstraints.Constrain(System.Object)">
            <summary>
            Constrains a given value. This function can assume that the given value is of the
            correct object type.
            </summary>
            <param name="value">Value to constrain.</param>
            <returns>The constrained value.</returns> 
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValueConstraints.ToString">
            <summary>
            This function should be overridden by all derived classes and should format the
            resulting string to display all constraints. The string will be displayed in the
            editor's tooltip.
            </summary>
            <returns>The constraint as a string.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValueConstraints.Clone">
            <summary>
            This function must be overriden by all derived class. It copies all required data for 
            the constraint.
            </summary>
            <returns>The new constraint.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValueConstraints.Validate">
            <summary>
            Ensures the constraint is valid.
            </summary>
            <returns>False if the constraint is invalid.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValueConstraints.NotifyPropertyChanged(System.String)">
            <summary>
            Called when a property setter is invoked.
            </summary>
            <param name="propertyName">Name of the property that changed.</param>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValueConstraints.PropertyChanged">
            <summary>
            Event fired when a property is changed.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyIntValueConstraints.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyIntValueConstraints.#ctor(System.Int32,System.Int32)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="min">Minimum a value should be constrained to.</param>
            <param name="max">Maximum a value should be constrained to.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyIntValueConstraints.Constrain(System.Object)">
            <summary>
            Ensures the given value respects the contraint. This does not modify the given value.
            </summary>
            <param name="value">The value to constrain.</param>
            <returns>The result the value should be constrained to.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyIntValueConstraints.ToString">
            <summary>
            Uses "Varies from: {minValue} to: {maxValue}" to format the returned string.
            </summary>
            <returns>Returns the constraint as a display ready string.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyIntValueConstraints.Clone">
            <summary>
            Clones an EnvironmentPropertyIntValueConstraints.
            </summary>
            <returns>The cloned object.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyIntValueConstraints.Validate">
            <summary>
            Ensures the constraint is valid.
            </summary>
            <returns>Returns false if the constraint is invalid.</returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyIntValueConstraints.MinValue">
            <summary>
            Gets or sets the minimum amount a value should be constrained to.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyIntValueConstraints.MaxValue">
            <summary>
            Gets or sets the maximum amount a value should be constrained to.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyInt">
            <summary>
            Defines environment properties that use ints.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty">
            <summary>
            Base abstract class for all EnvironmentProperty classes. This defines the base functions
            that will need to be overridden by derived property classes.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.m_constraints">
            <summary>
            Defines the constraints to be applied to the property. This object should only ever be
            created on startup; however its contents can be changed afterwards.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.#ctor(System.String)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="name">The name of the property we are creating.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.CheckValueType(Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue)">
            <summary>
            Function that should be overridden by all derived classes to ensure the given value is
            of appropriate type.
            </summary>
            <param name="value">The value to check against.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.OnConstraintChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Event trigered whenever the property's constraint is changed.
            </summary>
            <param name="sender">Object sending the event.</param>
            <param name="e">Property changed parameter.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.SetConstraints(System.Object,System.Object)">
            <summary>
            Function that should be overridden by all derived classes to ensure the constraint is
            set using the appropriate object type.
            </summary>
            <param name="minValue">Minimum value to bound the property value.</param>
            <param name="maxValue">Maximum value to bound the property value.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.SetConstraints(System.String,System.String)">
            <summary>
            Function that should be overridden by all derived classes to ensure the constraint is
            set using the appropriate object type converter.
            </summary>
            <param name="minValue">Minimum value to bound the property value.</param>
            <param name="maxValue">Maximum value to bound the property value.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.GetConstraints(System.Object@,System.Object@)">
            <summary>
            Gets the constraints to apply to this property.
            </summary>
            <param name="minValue">Minimum constraint value.</param>
            <param name="maxValue">Maximum constraint value.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.GetInterpolatedValue(System.TimeSpan)">
            <summary>
            Finds the first keyframes before and after the given time and uses those to interpolate 
            the value at the given time.
            </summary>
            <param name="time">The keyframe time we want to find the interpolated value for.</param>
            <returns>The resulting property value.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.InterpolateValue(System.Double,Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue@,Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe,Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe)">
            <summary>
            Interpolates the keyframe value. This should be overridden by derived classes.
            </summary>
            <param name="factor">Interpolation factor.</param>
            <param name="destination">The output value.</param>
            <param name="left">Value of the keyframe before this one.</param>
            <param name="right">Value of the keyframe after this one.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.TriggerKeyframesChangedMessage">
            <summary>
            Called when Keyframes have changed, sends message to TimeOfDayChangeProcessor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.CreatePropertyValue">
            <summary>
            Function that creates a property value associated with the property type. This should
            not be called by the base class and must be implemented by any derived class. Using the
            base class function will throw an exception.
            </summary>
            <returns>The newly created environment property value.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.ResetKeyframes">
            <summary>
            Resets the property's keyframe list.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.OnKeyframeLoaded(System.String,System.String,System.String,System.Int32,System.Single[],System.String[])">
            <summary>
            Function called whenever the TimeOfDayChangedProcessor::KeyframeLoaded event is 
            triggered. This will update the keyframe list if the given property name corresponds to 
            our name.
            </summary>
            <param name="propName">The name of the property that should be updated.</param>
            <param name="minValue">The minimum value for this property.</param>
            <param name="maxValue">The maximum value for this property.</param>
            <param name="numKeyframes">The number of keyframes held by the data arrays.</param>
            <param name="times">Array holding the times of all the loaded keyframes.</param>
            <param name="values">Array holding the string values of all the loaded keyframes.
            </param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.OnKeyFrameCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Event when the collection of keyframes has changed, when a value is added or removed.
            </summary>
            <param name="sender">Sender of Changed event.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.OnKeyframePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a keyframe property has changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.FindSurroundingKeyframes(System.TimeSpan,Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe@,Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe@)">
            <summary>
            Finds the first keyframes directly before and after the given time.
            </summary>
            <param name="time">Time of reference.</param>
            <param name="left">The first keyframe found before the time.</param>
            <param name="right">The first keyframe found after the time.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.GetKeyframeAt(System.TimeSpan)">
            <summary>
            Finds a keyframe at the exact time specified.
            </summary>
            <param name="time">The time to lookup.</param>
            <returns>The requested keyframe.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.CreateOrSetKeyFrame(System.TimeSpan,System.Object)">
            <summary>
            Creates a keyframe or sets a keyframe if it exists for the given time.
            </summary>
            <param name="time">The time for which the keyframe should be created / set.</param>
            <param name="value">The value used to create/set the keyframe.</param>
            <returns>The keyframe.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.RemoveKeyFrame(System.TimeSpan)">
            <summary>
            Removes the given keyframe.
            </summary>
            <param name="keyTime">The time at which a keyframe should be removed.</param>
            <returns>Null.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.RaisePropertyChanged">
            <summary>
            Triggers the property changed event.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.Constraints">
            <summary>
            Gets or sets the constraints.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.DefaultValue">
            <summary>
            Gets or sets the property's default value.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.PropertyName">
            <summary>
            Gets or sets the property's name.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.PropertyDescription">
            <summary>
            Gets or sets the property's description.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.CategoryName">
            <summary>
            Gets or sets the name of the property's parent category.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.KeyFrames">
            <summary>
            Gets or sets the collection of keyframes.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.PropertyKeyframeValueChanged">
            <summary>
            Event handler triggered when a keyframe value is changed.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentProperty.PropertyKeyframeTimeChanged">
            <summary>
            Event handler triggered when a keyframe's time is changed.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyInt.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyInt.#ctor(System.String)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="name">The property's name.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyInt.SetConstraints(System.Object,System.Object)">
            <summary>
            Sets the constraint the property's value will be bound to.
            </summary>
            <param name="minValue">Minimum amount a value can be set to.</param>
            <param name="maxValue">Maximum amount a value can be set to.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyInt.SetConstraints(System.String,System.String)">
            <summary>
            Sets the constraint the property's value will be bound to.
            </summary>
            <param name="minValue">Minimum amount a value can be set to.</param>
            <param name="maxValue">Maximum amount a value can be set to.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyInt.GetConstraints(System.Object@,System.Object@)">
            <summary>
            Gets the constraints to apply to this property.
            </summary>
            <param name="minValue">Minimum constraint value.</param>
            <param name="maxValue">Maximum constraint value.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyInt.CheckValueType(Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue)">
            <summary>
            Ensures the given value is an EnvironmentPropertyIntValue.
            </summary>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyInt.InterpolateValue(System.Double,Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue@,Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe,Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe)">
            <summary>
            Interpolates the keyframe value.
            </summary>
            <param name="factor">Interpolation factor.</param>
            <param name="destination">The output value.</param>
            <param name="left">Value of the keyframe before this one.</param>
            <param name="right">Value of the keyframe after this one.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyInt.CreatePropertyValue">
            <summary>
            Function that creates a property value associated with the property type.
            This is overridden from the base class.
            </summary>
            <returns>The newly created EnvironmentPropertyIntValue.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyInt.InterpInt(System.Double,System.Int32,System.Int32)">
            <summary>
            Function that interpolates between two ints.
            </summary>
            <param name="factor">Interpolation factor.</param>
            <param name="left">Initial value to interpolate from.</param>
            <param name="right">Final value to interpolate to.</param>
            <returns>The result of the interpolation.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDoubleValue">
            <summary>
            Defines a property value type that uses a double as a value.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDoubleValue.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDoubleValue.#ctor(System.Double)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="value">Value to initialize the property double value with.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDoubleValue.ValueToString">
            <summary>
            Converts the value to a string.
            </summary>
            <returns>The value as a string.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDoubleValue.StringToValue(System.String)">
            <summary>
            Set the value using a string.
            </summary>
            <param name="strValue">The string to set the value to.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDoubleValue.ValueTypeEquals(System.Object)">
            <summary>
            Checks whether the given object is equal to the value.
            </summary>
            <param name="obj">Object to check.</param>
            <returns>Result of comparison.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDoubleValue.ValueAsObject">
            <summary>
            Returns the value as an object.
            </summary>
            <returns>Value as object.</returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDoubleValue.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDoubleValueConstraints">
            <summary>
            Defines the constraint for a double property value.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDoubleValueConstraints.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDoubleValueConstraints.#ctor(System.Double,System.Double)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="min">Minimum a value should be constrained to.</param>
            <param name="max">Maximum a value should be constrained to.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDoubleValueConstraints.Constrain(System.Object)">
            <summary>
            Ensures the given value respects the constraint. This does not modify the given value.
            </summary>
            <param name="value">The value to constrain.</param>
            <returns>The result the value should be constrained to.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDoubleValueConstraints.ToString">
            <summary>
            Uses "Varies from: {minValue} to: {maxValue}" to format the returned string.
            </summary>
            <returns>The constraint as a display ready string.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDoubleValueConstraints.Clone">
            <summary>
            Clones an EnvironmentPropertyDoubleValueConstraints.
            </summary>
            <returns>The cloned object.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDoubleValueConstraints.Validate">
            <summary>
            Ensures the constraint is valid.
            </summary>
            <returns>False if the constraint is invalid.</returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDoubleValueConstraints.MinValue">
            <summary>
            Gets or sets the minimum amount a value should be constrained to.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDoubleValueConstraints.MaxValue">
            <summary>
            Gets or sets the maximum amount a value should be constrained to.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDouble">
            <summary>
            Defines environment properties that use doubles.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDouble.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDouble.#ctor(System.String)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="name">The property's name.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDouble.#ctor(System.String,System.Double,System.Double,Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDouble.DoubleScaleType)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="name">Property name.</param>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
            <param name="scaleType">Scale type to use.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDouble.SetConstraints(System.Object,System.Object)">
            <summary>
            Sets the constraint the property's value will be bound to.
            </summary>
            <param name="minValue">Minimum amount a value can be set to.</param>
            <param name="maxValue">Maximum amount a value can be set to.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDouble.SetConstraints(System.String,System.String)">
            <summary>
            Sets the constraint the property's value will be bound to.
            </summary>
            <param name="minValue">Minimum amount a value can be set to.</param>
            <param name="maxValue">Maximum amount a value can be set to.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDouble.GetConstraints(System.Object@,System.Object@)">
            <summary>
            Gets the constraints applied to this property.
            </summary>
            <param name="minValue">Minimum constraint value.</param>
            <param name="maxValue">Maximum constraint value.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDouble.CheckValueType(Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue)">
            <summary>
            Ensures the given value is an EnvironmentPropertyDoubleValue.
            </summary>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDouble.InterpolateValue(System.Double,Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue@,Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe,Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe)">
            <summary>
            Interpolates the keyframe value.
            </summary>
            <param name="factor">Interpolation factor.</param>
            <param name="destination">The output value.</param>
            <param name="left">Value of the keyframe before this one.</param>
            <param name="right">Value of the keyframe after this one.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDouble.CreatePropertyValue">
            <summary>
            Function that creates a property value associated with the property type.
            This is overridden from the base class.
            </summary>
            <returns>The newly created EnvironmentPropertyDoubleValue.</returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDouble.ScaleType">
            <summary>
            Gets or sets the scale type to use.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDouble.DoubleScaleType">
            <summary>
            Defines the different double scale types available.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDouble.DoubleScaleType.Linear">
            <summary>
            Linear scale type.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyDouble.DoubleScaleType.Logarithmic">
            <summary>
            Logarithmic scale type.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.SingleObjectAttribute">
            <summary>
            Abstract base class for the environment properties.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.SingleObjectAttribute.#ctor(System.Object)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="value">Initial value.</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.SingleObjectAttribute.Value">
            <summary>
            Gets the attribute's value.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.MinValue">
            <summary>
            Specifies the minimum value that a property may hold.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.MinValue.#ctor(System.Object)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="minValue">Initial value.</param>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.MaxValue">
            <summary>
            Specifies the maximum value that a property may hold.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.MaxValue.#ctor(System.Object)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="maxValue">Initial value.</param>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.Default">
            <summary>
            Specifies the default value of a property.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.Default.#ctor(System.Object)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="defaultValue">Initial value.</param>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.Category">
            <summary>
            Specifies the name of the category that a property should belong to.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.Category.#ctor(System.String)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="value">Initial value.</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.Category.Name">
            <summary>
            Gets the value of the attribute.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentCategory">
            <summary>
            Defines the categories for the different environment properties.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentCategory.#ctor">
            <summary>
            Default contructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentCategory.#ctor(System.String)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="name">Category name.</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentCategory.Name">
            <summary>
            Gets or sets the name of the category.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.Environment_Properties.Converters.DoubleConstraintsConverter">
            <summary>
            Defines a converter allowing easy convertion from EnvironmentPropertyDoubleValueConstraints
            to double and vice versa.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.Environment_Properties.Converters.DoubleConstraintsConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts an EnvironmentPropertyDoubleValueConstraint into a double.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="targetType">The type to convert into.</param>
            <param name="parameter">Unused parameter object.</param>
            <param name="culture">Unused culture info.</param>
            <returns>A double if the convertion could take place, null otherwise.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.Environment_Properties.Converters.DoubleConstraintsConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a double into a EnvironmentPropertyDoubleValueConstraints.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="targetType">The type to convert into.</param>
            <param name="parameter">Unused parameter object.</param>
            <param name="culture">Unused culture info.</param>
            <returns>An EnvironmentPropertyDoubleValueConstraints if the conversion could take
            place, null otherwise.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ObservableKeyFrameCollection">
            <summary>
            A collection of observable keyframes.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ObservableKeyFrameCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColorValueConstraints">
            <summary>
            Defines the constraints for color property values. This facilitates keeping color properties
            valid.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColorValueConstraints.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColorValueConstraints.#ctor(System.Windows.Media.Color,System.Windows.Media.Color)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="min">Minimum color value.</param>
            <param name="max">Maximum color value.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColorValueConstraints.Constrain(System.Object)">
            <summary>
            Applies the defined constraint to the given value.
            </summary>
            <param name="value">Value to apply the constraint to.</param>
            <returns>The constrained value.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColorValueConstraints.ToString">
            <summary>
            Uses "Varies from: {minValue} to: {maxValue}" to format the returned string.
            </summary>
            <returns>Returns the constraint as a display ready string.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColorValueConstraints.Clone">
            <summary>
            Clones an EnvironmentPropertyColorValueConstraints.
            </summary>
            <returns>The cloned object.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColorValueConstraints.Validate">
            <summary>
            Ensures the constraint is valid.
            </summary>
            <returns>Returns false if the constraint is invalid.</returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColorValueConstraints.MinValue">
            <summary>
            Gets or sets the minimum amount a value should be constrained to.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColorValueConstraints.MaxValue">
            <summary>
            Gets or sets the maximum amount a value should be constrained to.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColorValue">
            <summary>
            Defines the value used by an environment's color properties.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColorValue.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColorValue.#ctor(System.Windows.Media.Color)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="value">Value of the color property.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColorValue.ValueToString">
            <summary>
            Converts a color value to a string object.
            </summary>
            <returns>The string object for the color value.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColorValue.StringToValue(System.String)">
            <summary>
            Sets the color value from a string object.
            </summary>
            <param name="strValue">String object defining the color value to use.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColorValue.ValueTypeEquals(System.Object)">
            <summary>
            Checks the given object's value is equal to the value of this property.
            </summary>
            <param name="obj">Object whose value needs to be checked.</param>
            <returns>True if both values are the same, false otherwise.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColorValue.ValueAsObject">
            <summary>
            Converts the color value as an object.
            </summary>
            <returns>The color value as an object.</returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColorValue.Value">
            <summary>
            Gets or sets the color value.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColor">
            <summary>
            Defines the environment color property.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColor.#ctor(System.String)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="name">The name of the color property.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColor.SetConstraints(System.Object,System.Object)">
            <summary>
            Sets the constraints to apply to this property.
            </summary>
            <param name="minValue">Minimum color value.</param>
            <param name="maxValue">Maximum color value.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColor.SetConstraints(System.String,System.String)">
            <summary>
            Sets the constraints to apply to this property.
            </summary>
            <param name="minValue">Minimum constraint value.</param>
            <param name="maxValue">Maximum constraint value.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColor.GetConstraints(System.Object@,System.Object@)">
            <summary>
            Gets the constraints applied to this property.
            </summary>
            <param name="minValue">Minimum color value.</param>
            <param name="maxValue">Maximum color value.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColor.CheckValueType(Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue)">
            <summary>
            Ensures the given value is an EnvironmentPropertyColorValue.
            </summary>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColor.InterpolateValue(System.Double,Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue@,Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe,Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe)">
            <summary>
            Interpolates the value held by the property according to the surrounding values.
            </summary>
            <param name="factor">Interpolation factor.</param>
            <param name="destination">Output property value.</param>
            <param name="left">Neighbouring property's value.</param>
            <param name="right">Neighbouring property's value.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColor.InterpColorChannel(System.Double,System.Byte,System.Byte)">
            <summary>
            Interpolates values of a specific color channel.
            </summary>
            <param name="factor">Interpolation factor.</param>
            <param name="left">Neighbouring property's channel value.</param>
            <param name="right">Neighbouring property's channel value.</param>
            <returns>The interpolated value as a byte.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyColor.CreatePropertyValue">
            <summary>
            Function that creates a property value associated with the property type.
            This is overridden from the base class.
            </summary>
            <returns>The newly created EnvironmentPropertyColorValue.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyTweener">
            <summary>
            Future development.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframeChangedArgs">
            <summary>
            Class defining the event arguments for the property changed event.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframeChangedArgs.#ctor(Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="keyframe">Keyframe associated with the event.</param>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframeChangedArgs.Keyframe">
            <summary>
            Keyframe associated with the event.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe">
            <summary>
            Class defining the environment property keyframe.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe.m_time">
            <summary>
            The keyframe's time.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe.m_value">
            <summary>
            The keyframe's value.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe.#ctor(Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue,System.TimeSpan)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="value">Property value.</param>
            <param name="time">Associated time.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe.OnValuePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when an entity property has changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The property change event arguments.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe.RaisePropertyChanged">
            <summary>
            Triggers the property changed event.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe.NotifyPropertyChanged(System.String)">
            <summary>
            Called when a property setter is invoked.
            </summary>
            <param name="propertyName">Name of the property that changed.</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe.Time">
            <summary>
            Gets or sets the time at which the keyframe should be reached.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe.Value">
            <summary>
            Gets the value associated with the keyframe.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframe.PropertyChanged">
            <summary>
            Event fired when a property is changed.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyPercentageValue">
            <summary>
            Class defining a property value that is a percentage.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyPercentageValue.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyPercentageValue.#ctor(System.Double)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="value">Initial property value.</param>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyPercentage">
            <summary>
            Class defining a property that is a percentage.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyPercentage.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyPercentage.#ctor(System.String)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="name">Property name.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyPercentage.CheckValueType(Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue)">
            <summary>
            Ensures the given value is valid for a percentage type property.
            </summary>
            <param name="value">Property value to check.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.ValueTypes.EnvironmentPropertyPercentage.CreatePropertyValue">
            <summary>
            Function that creates a property value associated with the property type.
            This is overridden from the base class.
            </summary>
            <returns>The newly created EnvironmentPropertyPercentageValue.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.TimeOfDayProcessor">
            <summary>
            This class is used to maintain and manage all the properties used for the Time of Day
            editor. It does so by dynamically updating the property list.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProcessor">
            <summary>
            This class is used to maintain and manage all the properties used for the environment.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProcessor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProcessor.ProcessEnvironmentProperties">
            <summary>
            Sorts a given environment into categories that we can display.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProcessor.ResetPropertyValues">
            <summary>
            Resets an environment's property values to defaults.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProcessor.LoadPropertyValues(System.String)">
            <summary>
            Loads properties from disk, appending them to the properties collection.
            </summary>
            <param name="filename">The filename to load.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProcessor.SavePropertyValues(System.String)">
            <summary>
            Saves all loaded properties to disk.
            </summary>
            <param name="filename">The filename to save.</param>
            <returns>True on success.</returns>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProcessor.Environment">
            <summary>
            Gets or sets the environment to be processed.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProcessor.Categories">
            <summary>
            Gets or sets the collection of all available categories.
            ObservableCollection cannot have a protected set because of serialization.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.TimeOfDayProcessor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.TimeOfDayProcessor.OnToDPropertiesChanged(System.Int32,System.String[],System.String[],System.String[],System.String[],System.String[])">
            <summary>
            PropertiesChanged event implementation. This function creates the environment properties
            from the list of property names and types. It also resolves the property constraints
            and default values using the model name held in the property name.
            </summary>
            <param name="numProperties">The number of properties to parse.</param>
            <param name="propCategories">List of category GUID associated with each property.
            </param>
            <param name="propNames">List of property names.</param>
            <param name="propTypes">List of property types.</param>
            <param name="propMinVal">List of property minvalue. Will be an empty string if no value 
            was set.</param>
            <param name="propMaxVal">List of property maxvalue. Will be an empty string if no value 
            was set.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.TimeOfDayProcessor.LoadPropertyValues(System.String)">
            <summary>
            Override from the base class. This function is not currently in use.
            </summary>
            <param name="filename">Unused.</param>
            <returns>False if filename is null.</returns>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.TimeOfDayProcessor.SavePropertyValues(System.String)">
            <summary>
            Override from the base class. This function is not currently in use.
            </summary>
            <param name="filename">Unused.</param>
            <returns>False if filename is null.</returns>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.Environment">
            <summary>
            Defines all the environment properties that can be set to customize the time of day.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Environment.SunSize">
            <summary>
            Gets or sets the size of the sun.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Environment.Azimuth">
            <summary>
            Gets or sets the sun's horizontal angle.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Environment.Altitude">
            <summary>
            Gets or sets the sun's vertical angle.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Environment.Color">
            <summary>
            Gets or sets the color of the sky.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Environment.FogColor">
            <summary>
            Gets or sets the color of the fog (only used when it is manually set).
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Environment.FogDistance">
            <summary>
            Gets or sets the distance at which the fog is visible.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Environment.MieConstant">
            <summary>
            Gets or sets the Mie scattering constant.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Environment.RayleighConstant">
            <summary>
            Gets or sets the Raleigh scattering constant.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Environment.SunIntensity">
            <summary>
            Gets or sets the sun's intensity.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Environment.PhaseConstant">
            <summary>
            Gets or sets the atmosphere's phase constant.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Environment.HDRExposure">
            <summary>
            Gets or sets the HDR exposure.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Environment.RedWavelength">
            <summary>
            Gets or sets the value of the wavelength of the red channel of the sky color.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Environment.GreenWavelength">
            <summary>
            Gets or sets the value of the wavelength of the green channel of the sky color.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Environment.BlueWavelength">
            <summary>
            Gets or sets the value of the wavelength of the blue channel of the sky color.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Environment.Radius">
            <summary>
            Gets or sets the sky dome's radius.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Environment.Detail">
            <summary>
            Gets or sets the sky dome's level of detail.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Environment.AxisBias">
            <summary>
            Gets or sets the sky dome's axis bias.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Environment.HorizBias">
            <summary>
            Gets or sets the sky dome's horizontal bias.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.DuplicateKeyframeException">
            <summary>
            Defines the exception to throw when a keyframe is duplicated.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.DuplicateKeyframeException.#ctor(System.TimeSpan)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="time">Time for which an exception was triggered.</param>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.TimeManager">
            <summary>
            Keeps a track of the current game time, the length of the animation loop and the animation
            speed.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.TimeManager.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.TimeManager.SetCurrentTime(System.TimeSpan,System.Boolean)">
            <summary>
            Function that allows the setting of the current time giving the choice to the caller on 
            whether a message should be sent or not.
            </summary>
            <param name="value">Value to set the time at.</param>
            <param name="silent">False if a time changed message should be sent.</param>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.TimeManager.NotifyPropertyChanged(System.String)">
            <summary>
            Notifies the property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.TimeManager.CurrentTime">
            <summary>
            Gets or sets the current time in the game world. This value must always lie between 0
            and TotalTime.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.TimeManager.TotalTime">
            <summary>
            Gets or sets how long the animation definition spans, in game time. A TotalTime of 1
            week will set the animation loop length to 1 game week.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.TimeManager.GameSpanRealWorldSpan">
            <summary>
            Gets or sets how long, in real world time, it takes for the entire game span to loop
            through once. If this value is set to equal TotalTime, the game will progress at the
            same speed as the real world.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.WorldBuilder.Environment.TimeManager.PropertyChanged">
            <summary>
            Property changed event handler fired when a property changes.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframeFixed">
            <summary>
            Class defining the fixed keyframe. These keyframes cannot have their time changed.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframeFixed.#ctor(Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyValue,System.TimeSpan)">
            <summary>
            Initialization constructor.
            </summary>
            <param name="value">Initial value.</param>
            <param name="time">Associated time.</param>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.EnvironmentProperties.EnvironmentPropertyKeyframeFixed.Time">
            <summary>
            Gets the time the keyframe is associated with.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.WorldBuilder.Environment.Plugin">
            <summary>
            Environment plug-in manages all the keyframe properties and file formats the Environment.UI
            plug-in requires.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.WorldBuilder.Environment.Plugin.Start">
            <summary>
            Starts the environment plug-in.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Plugin.StaticDescriptor">
            <summary>
            Gets an instance of the plug-in's descriptor object. This is only valid after the 
            plug-in has started.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.WorldBuilder.Environment.Plugin.StaticResources">
            <summary>
            Gets an instance of the plug-in's resources object. This is only valid after the plug-in
            has started.
            </summary>
        </member>
    </members>
</doc>
