<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emergent.Toolbench.TypeService</name>
    </assembly>
    <members>
        <member name="T:Emergent.Toolbench.TypeService.Editors.TextBoxEditor">
            <summary>
            Represents an editor with a typed text box.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.DataTypeEditor">
            <summary>
            Represents the base class for all data type editor. The class provide support for data value 
            editing an restriction.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.DataTypeEditor.OnRestrictionChanged(Emergent.Toolbench.TypeService.RestrictionEventArgs)">
            <summary>
            Invoked whenever the restriction has changed.
            </summary>
            <param name="e">The <see cref="T:Emergent.Toolbench.TypeService.RestrictionEventArgs"/> 
            instance containing the event data.</param>
            <remarks>Override in a derived class to do custom handling when the restriction
            has changed on the value.</remarks>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.DataTypeEditor.HandleRestrictionConfigurationChanged">
            <summary>
            Called when the content of the current restriction has changed. Override in derived 
            class to do custom handling like refreshing the editor or changing its appearance when 
            data-binding doesn't do the trick.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.DataTypeEditor.OnRestrictionConfigurationChanged(System.Object,System.EventArgs)">
            <summary>
            Called when the restriction content changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.DataTypeEditor.OnRestrictionPropertyChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the restriction dependency property changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Editors.DataTypeEditor.Restriction">
            <summary>
            Gets or sets the restriction. This is a dependency property.
            </summary>
            <value>The restriction.</value>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.TextBoxEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Editors.TextBoxEditor"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.ReadOnlyTextBoxEditor.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Initialized"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event 
            data.</param>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.Point2Editor">
            <summary>
            Represents an editor for 2 dimensional point.
            </summary>
            <summary>
            Point2Editor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.Point2Editor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Editors.Point2Editor"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.Point2Editor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.Matrix3Editor">
            <summary>
            Represents an editor for 3 dimensional matrix.
            </summary>
            <summary>
            Matrix3Editor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.Matrix3Editor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Editors.Matrix3Editor"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.Matrix3Editor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.ColorEditor">
            <summary>
            Represents an editor for color data type.
            </summary>
            <summary>
            ColorEditor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.ColorEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Editors.ColorEditor"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.ColorEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.RestrictionEventArgs">
            <summary>
            Provides data for RestrictionChanged event.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.RestrictionEventArgs.#ctor(Emergent.Toolbench.TypeService.Restriction,Emergent.Toolbench.TypeService.Restriction)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.RestrictionEventArgs"/> class.
            </summary>
            <param name="newRestriction">The new restriction.</param>
            <param name="oldRestriction">The old restriction.</param>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.RestrictionEventArgs.NewRestriction">
            <summary>
            Gets or sets the new restriction.
            </summary>
            <value>The new restriction.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.RestrictionEventArgs.OldRestriction">
            <summary>
            Gets or sets the old restriction.
            </summary>
            <value>The old restriction.</value>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.BooleanEditor">
            <summary>
            Represents an editor for boolean data type.
            </summary>
            <summary>
            BooleanEditor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.BooleanEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Editors.BooleanEditor"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.BooleanEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Types.DataValue">
            <summary>
            Base class for all data value
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.DataValue.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>
            A new object that is a deep copy of this instance.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.DataValue.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current 
            <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current 
            <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.DataValue.RaiseValueInvalidated">
            <summary>
            Raises the ValueInvalidated event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.DataValue.RaisePropertyChanging(System.String)">
            <summary>
            Raises the PropertyChanging event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.DataValue.RaisePropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.DataValue.SetValueRef``1(``0@,``0,System.String)">
            <summary>
            Sets the value.  Call this function when you have a instance to a DataValue class
            </summary>
            <typeparam name="T"></typeparam>
            <param name="member">The member.</param>
            <param name="value">The value.</param>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.DataValue.SetValue``1(``0@,``0,System.String)">
            <summary>
            Sets the value.  Call this function when you have a native type or a structure.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="member">The member.</param>
            <param name="value">The value.</param>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.DataValue.OnSubPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a sub property changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.DataValue.ToXml">
            <summary>
            Implement to return the instance serialized as an XStreamingElement.
            </summary>
            <returns>The serialized instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.DataValue.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Implement to initialize the instance from the date in the XElement.
            </summary>
            <param name="element">The XElement containing the data to load from.</param>
        </member>
        <member name="E:Emergent.Toolbench.TypeService.Types.DataValue.ValueChanged">
            <summary>
            Occurs when the data value changed.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.DataValue.DataType">
            <summary>
            Gets the type of the data.
            </summary>
            <value>The type of the data.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.DataValue.StringValue">
            <summary>
            Gets or sets the string value.
            </summary>
            <value>The string value.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.DataValue.XmlElementName">
            <summary>
            Gets the name of the XML element.
            </summary>
            <value>The name of the XML element.</value>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Types.IValueTypeProvider">
            <summary>
            Defines a property to access the underlying type of a DataValue.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.IValueTypeProvider.SystemType">
            <summary>
            Gets the type of the underlying.
            </summary>
            <value>The type of the underlying.</value>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.GenericSimpleDataValue`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Types.GenericSimpleDataValue`1"/> 
            class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.GenericSimpleDataValue`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Types.GenericSimpleDataValue`1"/> 
            class.
            </summary>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.GenericSimpleDataValue`1.ToXml">
            <summary>
            Implement to return the instance serialized as an XStreamingElement.
            </summary>
            <returns>The serialized instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.GenericSimpleDataValue`1.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Implement to initialize the instance from the date in the XElement.
            </summary>
            <param name="element">The XElement containing the data to load from.</param>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.GenericSimpleDataValue`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.GenericSimpleDataValue`1.StringValue">
            <summary>
            Gets or sets the string value.
            </summary>
            <value>The string value.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.String.StringValue">
            <summary>
            Return the string value
            </summary>
            <returns>The actual string in the DataValue</returns>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.MapDataValue.XmlElementName">
            <summary>
            Gets the name of the XML element.
            </summary>
            <value>The name of the XML element.</value>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.MapDataValueItem.ToXml">
            <summary>
            Implement to return the instance serialized as an XStreamingElement.
            </summary>
            <returns>The serialized instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.MapDataValueItem.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Implement to initialize the instance from the date in the XElement.
            </summary>
            <param name="element">The XElement containing the data to load from.</param>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.MapDataValueItem.XmlElementName">
            <summary>
            Gets the name of the XML element.
            </summary>
            <value>The name of the XML element.</value>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.DataTypeAttribute">
            <summary>
            Attribute used to markup properties with an associated DataType.  This
            allows structs to leverage existing DataType converters and editors for
            their properties.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.DataTypeAttribute.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Name of the DataType to be associated.</param>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.DataTypeAttribute.Name">
            <summary>
            The name of the associated DataType.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.RotatorEditor">
            <summary>
            Represents an editor for rotator type.
            </summary>
            <summary>
            RotatorEditor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.RotatorEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Editors.RotatorEditor"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.RotatorEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.MapEditorItem">
            <summary>
            Represents and item of the map editor.
            </summary>
            <summary>
            MapEditorItem
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.MapEditorItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Editors.MapEditorItem"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.MapEditorItem.UpdateEditor">
            <summary>
            Updates the editor, recreates it.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.MapEditorItem.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [loaded].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing 
            the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.MapEditorItem.TextBox_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Loaded event of the TextBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing 
            the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.MapEditorItem.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Editors.MapEditorItem.Restriction">
            <summary>
            Gets or sets the restriction. This is a dependency property.
            </summary>
            <value>The restriction.</value>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.KeyNameValidationRule">
            <summary>
            The validation rule to be used in WPF for validating the property names
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.KeyNameValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            When overridden in a derived class, performs validation checks on a value.
            </summary>
            <param name="value">The value from the binding target to check.</param>
            <param name="cultureInfo">The culture to use in this rule.</param>
            <returns>
            A <see cref="T:System.Windows.Controls.ValidationResult"/> object.
            </returns>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Types.ColorA">
            <summary>
            Custom color type with metadata for TypeService support.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Types.Color">
            <summary>
            Custom color type with metadata for TypeService support.
            Does not inherit from GenericSimpleDataValue because we don't want to persist
            the Value property as is.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.Color.#ctor">
            <summary>
            Initializes a Color with all component set to 0.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.Color.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>
            A new object that is a deep copy of this instance.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.Color.ToXml">
            <summary>
            Implement to return the instance serialized as an XStreamingElement.
            </summary>
            <returns>The serialized instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.Color.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Implement to initialize the instance from the date in the XElement.
            </summary>
            <param name="element">The XElement containing the data to load from.</param>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.Color.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.Color.R">
            <summary>
            Gets or sets the red color component.
            </summary>
            <value>The R.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.Color.G">
            <summary>
            Gets or sets the green color component.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.Color.B">
            <summary>
            Gets or sets the blue color component.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.Color.StringValue">
            <summary>
            Gets or sets the string value.
            </summary>
            <value>The string value.</value>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.ColorA.#ctor">
            <summary>
            Initializes a Color with alpha set to 255 and components set to 0.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.ColorA.DeepClone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>
            A new object that is a deep copy of this instance.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.ColorA.ToXml">
            <summary>
            Implement to return the instance serialized as an XStreamingElement.
            </summary>
            <returns>The serialized instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.ColorA.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Implement to initialize the instance from the date in the XElement.
            </summary>
            <param name="element">The XElement containing the data to load from.</param>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.ColorA.A">
            <summary>
            Gets or sets the alpha color component.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.ColorA.DataType">
            <summary>
            Gets the type of the data.
            </summary>
            <value>The type of the data.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.ColorA.StringValue">
            <summary>
            Gets or sets the string value.
            </summary>
            <value>The string value.</value>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.RestrictionErrorCollection">
            <summary>
            Holds the list of error that occurs during the restriction validation process.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.ColorAEditor">
            <summary>
            Represents an editor for color data type that supports alpha channel.
            </summary>
            <summary>
            ColorAEditor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.ColorAEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Editors.ColorAEditor"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.ColorAEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.ListEditorItem">
            <summary>
            Represents an item of a list editor.
            </summary>
            <summary>
            ListEditorItem
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.ListEditorItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Editors.ListEditorItem"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.ListEditorItem.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Editors.ListEditorItem.Restriction">
            <summary>
            Gets or sets the restriction. This is a dependency property.
            </summary>
            <value>The restriction.</value>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.EnumerationEditor">
            <summary>
            Represents an editor for enumerable values.
            </summary>
            <summary>
            EnumerationEditor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.EnumerationEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Editors.EnumerationEditor"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.EnumerationEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Types.Point3">
            <summary>
            Custom 3 dimensional point type with metadata for TypeService support.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Types.Point2">
            <summary>
            Custom 2 dimensional point type with metadata for TypeService support.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.Point2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Types.Point2"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.Point2.ToXml">
            <summary>
            Implement to return the instance serialized as an XStreamingElement.
            </summary>
            <returns>The serialized instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.Point2.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Implement to initialize the instance from the date in the XElement.
            </summary>
            <param name="element">The XElement containing the data to load from.</param>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.Point2.X">
            <summary>
            Gets or sets the X coordinate.
            </summary>
            <value>The X coordinate.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.Point2.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
            <value>The Y coordinate.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.Point2.StringValue">
            <summary>
            Gets or sets the string value.
            </summary>
            <value>The string value.</value>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.Point3.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Types.Point3"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.Point3.#ctor(Emergent.Toolbench.TypeService.Types.Point3)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Types.Point3"/> class.
            </summary>
            <param name="p">The p.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.Point3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Types.Point3"/> class.
            </summary>
            <param name="x">x component</param>
            <param name="y">y component</param>
            <param name="z">z component</param>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.Point3.Z">
            <summary>
            Gets or sets the Z coordinate.
            </summary>
            <value>The Z coordinate.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.Point3.StringValue">
            <summary>
            Gets or sets the string value.
            </summary>
            <value>The string value.</value>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Types.Point3Converter">
            <summary>
            Custom TypeConverter for converting a point to a string and back.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.Point3Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether a type conversion is possible.
            </summary>
            <param name="context">Contextual information.</param>
            <param name="sourceType">Type to be converted.</param>
            <returns>True if conversion is supported.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.Point3Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Perform a type conversion to a point object.
            </summary>
            <param name="context">Contextual information.</param>
            <param name="culture">Cultural information.</param>
            <param name="value">The object to be converted.</param>
            <returns>The point resulting from the conversion.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.Point3Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Perform a type conversion from a point object.
            </summary>
            <param name="context">Contextual information.</param>
            <param name="culture">Cultural information.</param>
            <param name="value">The object to be converted.</param>
            <param name="destinationType">The type to result from the
                conversion.
            </param>
            <returns>The object resulting from the conversion.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.ListDataValue.ToXml">
            <summary>
            Implement to return the instance serialized as an XStreamingElement.
            </summary>
            <returns>The serialized instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.ListDataValue.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Implement to initialize the instance from the date in the XElement.
            </summary>
            <param name="element">The XElement containing the data to load from.</param>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.ListDataValue.XmlElementName">
            <summary>
            Gets the name of the XML element.
            </summary>
            <value>The name of the XML element.</value>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.CollectionType">
            <summary>
            Identify the type of collection of DataValue used.
            </summary>
            <remarks>The enumeration values are used as string for Xml serialization. If the names
            are changed, a migration step is required.</remarks>
        </member>
        <member name="F:Emergent.Toolbench.TypeService.CollectionType.None">
            <summary>
            No collection.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.TypeService.CollectionType.List">
            <summary>
            List collection.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.TypeService.CollectionType.Map">
            <summary>
            Map collection.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.ITypeService">
            <summary>
            Interface that provides access to the TypeService, which is responsible
            for managing data types and the tools to manipulate them.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.ITypeService.CreateEditor(Emergent.Toolbench.TypeService.DataType,System.String)">
            <summary>
            Creates the editor associated with the specified data type.
            </summary>
            <param name="dataType">Type of the data.</param>
            <returns>The editor to use on the data type.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.ITypeService.FindEditor(Emergent.Toolbench.TypeService.DataType,System.String)">
            <summary>
            Finds an editor descriptor matching the specified data type.
            </summary>
            <param name="dataType">Type of the data.</param>
            <param name="editorGroup">The editor group.</param>
            <returns>The editor descriptor.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.ITypeService.FindEditor(System.String,System.String)">
            <summary>
            Finds an editor descriptor matching the editor group and editor id.
            </summary>
            <param name="editorGroup">The editor group.</param>
            <param name="editorId">The editor id.</param>
            <returns>The editor descriptor.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.ITypeService.CreateDefaultValue(Emergent.Toolbench.TypeService.DataType)">
            <summary>
            Creates the default value.
            </summary>
            <param name="dataType">Type of the data.</param>
            <returns>The default value.</returns>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.ITypeService.DataTypes">
            <summary>
            Gets the data types.
            </summary>
            <value>The data types.</value>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.Point3Editor">
            <summary>
            Represents an editor for 3 dimensional point.
            </summary>
            <summary>
            Point3Editor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.Point3Editor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Editors.Point3Editor"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.Point3Editor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.ColorPickerDialog">
            <summary>
            Interaction logic for ColorPickerWindow.xaml
            </summary>
            <summary>
            ColorPickerDialog
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.ColorPickerDialog.#ctor(System.Windows.Media.Color,System.Boolean)">
            <summary>
            Constructor for dialog class 
            </summary>
            <param name="initialColor">Selected color to use in initialization</param>
            <param name="useAlpha">boolean indicating if aplha channel is enabled</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Emergent.Toolbench.TypeService.Editors.ColorPickerDialog.colorPreview(System.Boolean,System.Windows.Data.Binding,System.Windows.Media.Color)" -->
        <member name="M:Emergent.Toolbench.TypeService.Editors.ColorPickerDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Editors.ColorPickerDialog.Color">
            <summary>
            Color Variable of type Emergent.Toolbench.TypeService.Types.Color 
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Editors.ColorPickerDialog.SelectedColor">
            <summary>
            Returns ColorPicker.Value
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.ColorAValidationError">
            <summary>
              Looks up a localized string similar to Invalid format.  Must be #AARRGGBB where A,R,G,B are hex values..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.ColorConverter_SourceError">
            <summary>
              Looks up a localized string similar to The source must be a DataType..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.ColorConverter_TargetError">
            <summary>
              Looks up a localized string similar to The target must be a DataType..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.ColorValidationError">
            <summary>
              Looks up a localized string similar to Invalid format.  Must be #RRGGBB where R,G,B are hex values..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.DataTypeDuplicationError">
            <summary>
              Looks up a localized string similar to The DataType {0} is duplicated..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.DataTypeRegistrationError">
            <summary>
              Looks up a localized string similar to Error registering DataType with TypeService.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.DegreeConverter_TargetError">
            <summary>
              Looks up a localized string similar to The target must be a single..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.EditorAlreadyExistsInGroup">
            <summary>
              Looks up a localized string similar to Unable to add the editor {0}, an editor with that unique id already exists in the group {1}.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.EnumerationRestrictionError">
            <summary>
              Looks up a localized string similar to Value must match one of the enumerated values..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.FilenameEditor_Title">
            <summary>
              Looks up a localized string similar to Browse For File.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.InvalidNumberOfToken">
            <summary>
              Looks up a localized string similar to This data type requires {0} comma-separated values..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.KFMFilenameEditor_Filter">
            <summary>
              Looks up a localized string similar to KFM files (*.kfm)|*.kfm|All files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.KFMFilenameEditor_Title">
            <summary>
              Looks up a localized string similar to Browse For KFM File.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.MapBaseKeyName">
            <summary>
              Looks up a localized string similar to Key.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.NIFFilenameEditor_Filter">
            <summary>
              Looks up a localized string similar to NIF files (*.nif)|*.nif|All files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.NIFFilenameEditor_Title">
            <summary>
              Looks up a localized string similar to Browse For NIF File.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.PluginName">
            <summary>
              Looks up a localized string similar to Type Service.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.RangeRestrictionError">
            <summary>
              Looks up a localized string similar to The value must be at least {0} and no more than {1}..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.RangeRestrictionNotSupportedError">
             <summary>
               Looks up a localized string similar to The value type {0} is not supported by the range restriction.
            The value type must provide a public Value property that is convertible into a numerical value..
             </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.SetPropertyValue">
            <summary>
              Looks up a localized string similar to Set {0} Value.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.UnableToFindEditor">
            <summary>
              Looks up a localized string similar to Unable to find editor for data type {0}, in the editor group {1} with the editor id {2}.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.UndoAddListElement">
            <summary>
              Looks up a localized string similar to Add {0} list item.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.UndoRemoveListElement">
            <summary>
              Looks up a localized string similar to Remove {0} list item.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.ValidationInvalidFormat">
            <summary>
              Looks up a localized string similar to Invalid format.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.ValidationUnknownError">
            <summary>
              Looks up a localized string similar to Unknown Error.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Properties.Resources.ValidationValueOverflow">
            <summary>
              Looks up a localized string similar to Value overflow.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.TypeServiceImpl">
            <summary>
            Implementation of the TypeService, which is responsible for managing
            data types and the tools to manipulate them.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.TypeServiceImpl.#ctor">
            <summary>
            Constructs the TypeService implementation.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.TypeServiceImpl.Initialize">
            <summary>
            Initializes the TypeService by registering all data types found via
            the extension point system.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.TypeServiceImpl.Dispose">
            <summary>
            Disposes the object
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.TypeServiceImpl.GatherExtensions">
            <summary>
            Adds all data types found via extension point.  Note that
            collection-based data types are not explicitly registered with the
            TypeService but rather are generated on the fly.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.TypeServiceImpl.Name">
            <summary>
            Gets the name of this service. Services must have unique names.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.DataType">
            <summary>
            Class for storing information about a data type, including custom tools
            for editing and converting it.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.DataType.#ctor(Emergent.Toolbench.TypeService.ITypeService,Emergent.Toolbench.IElementData)">
            <summary>
            Constructor, responsible for loading data type information from
            XML.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.DataType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.DataType"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.DataType.ToString">
            <summary>
            Gets the string representation of this data type.
            </summary>
            <returns>The string representation of this data type.</returns>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.DataType.Name">
            <summary>
            The name used to identify the data type in Toolbench.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.DataType.ExportName">
            <summary>
            The name used to identify the data type when exported for game use.
            Defaults to the Toolbench name if no export name is available.
            </summary>
            <value>The name of the export.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.DataType.TypeName">
            <summary>
            Gets or sets the name of the type.
            </summary>
            <value>The name of the type.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.DataType.ManagedType">
            <summary>
            The actual type of object that is wrapped by DataType.  Note that
            in the case of collections, this refers to the type of member
            objects.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.DataType.EditorId">
            <summary>
            Gets or sets the name of the editor.
            </summary>
            <value>The name of the editor.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.DataType.UseTextEditor">
            <summary>
            Gets or sets a value indicating whether we use text editor.
            </summary>
            <value><c>true</c> if [use text editor]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.DataType.PluginDescriptor">
            <summary>
            Gets the plugin descriptor.
            </summary>
            <value>The plugin descriptor.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.DataType.SupportedRestrictions">
            <summary>
            Gets a list of support restrictions by this data type.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.ListEditor">
            <summary>
            Represents a list editor.
            </summary>
            <summary>
            ListEditor
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.CollectionDataTypeEditor">
            <summary>
            Represents the base class for all collection data type editor.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Editors.CollectionDataTypeEditor.ItemsDataType">
            <summary>
            Gets or sets the type of the item data.
            </summary>
            <value>The type of the item data.</value>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.ListEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Editors.ListEditor"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.ListEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Types.Rotator">
            <summary>
            Rotator type with metadata for TypeService support.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.Rotator.ToXml">
            <summary>
            Implement to return the instance serialized as an XStreamingElement.
            </summary>
            <returns>The serialized instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.Rotator.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Implement to initialize the instance from the date in the XElement.
            </summary>
            <param name="element">The XElement containing the data to load from.</param>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Types.Matrix3">
            <summary>
            Custom 3x3 matrix type with metadata for TypeService support.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.Matrix3.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Types.Matrix3"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.Matrix3.ToXml">
            <summary>
            Implement to return the instance serialized as an XStreamingElement.
            </summary>
            <returns>The serialized instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.Matrix3.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Implement to initialize the instance from the date in the XElement.
            </summary>
            <param name="element">The XElement containing the data to load from.</param>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.Matrix3.Row1">
            <summary>
            Gets or sets the row1.
            </summary>
            <value>The row1.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.Matrix3.Row2">
            <summary>
            Gets or sets the row2.
            </summary>
            <value>The row2.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.Matrix3.Row3">
            <summary>
            Gets or sets the row3.
            </summary>
            <value>The row3.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.Matrix3.StringValue">
            <summary>
            Gets or sets the string value.
            </summary>
            <value>The string value.</value>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.EnumDataTypeEditor">
            <summary>
            Interaction logic for EnumDataTypeEditor.xaml
            </summary>
            <summary>
            EnumDataTypeEditor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.EnumDataTypeEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.EditorDescriptor.Id">
            <summary>
            Gets the id of the editor.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.EditorDescriptor.Group">
            <summary>
            Gets the group of the editor.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.EditorDescriptor.Class">
            <summary>
            Gets the class to instantiate for the editor.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.EditorDescriptor.PluginDescriptor">
            <summary>
            Gets the plugin descriptor.
            </summary>
            <value>The plugin descriptor.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.EditorDescriptor.Type">
            <summary>
            Gets the editor's system type information.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.CollectionDataType">
            <summary>
            Base class for DataTypes that are collections.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.CollectionDataType.#ctor(Emergent.Toolbench.TypeService.DataType)">
            <summary>
            Constructor that saves off reference to member type.
            </summary>
            <param name="type">The type of members in the collection.</param>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.CollectionDataType.ItemsType">
            <summary>
            Type of members in the collection.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.ListDataType.#ctor(Emergent.Toolbench.TypeService.DataType)">
            <summary>
            Constructor.
            </summary>
            <param name="type">The type of members in the collection.</param>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Restriction">
            <summary>
            Defines the base class of all restrictions.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Restriction.IsValid(Emergent.Toolbench.TypeService.Types.DataValue)">
            <summary>
            Determines whether the specified value is valid.
            </summary>
            <param name="value">The value.</param>
            <returns>A collection of error message or empty collection if valid.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Restriction.ToXml">
            <summary>
            Implement to return the instance serialized as an XStreamingElement.
            </summary>
            <returns>The serialized instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Restriction.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Implement to initialize the instance from the date in the XElement.
            </summary>
            <param name="element">The XElement containing the data to load from.</param>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Restriction.XmlElementName">
            <summary>
            Gets the name of the XML element.
            </summary>
            <value>The name of the XML element.</value>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.RangeRestriction">
            <summary>
            Defines a restriction that provides minimum and maximum for a value.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.RangeRestriction.IsValid(Emergent.Toolbench.TypeService.Types.DataValue)">
            <summary>
            Determines whether the specified value is valid.
            </summary>
            <param name="value">The value.</param>
            <returns>
            A collection of error message or empty collection if valid.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.RangeRestriction.ToXml">
            <summary>
            Implement to return the instance serialized as an XStreamingElement.
            </summary>
            <returns>The serialized instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.RangeRestriction.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Implement to initialize the instance from the date in the XElement.
            </summary>
            <param name="element">The XElement containing the data to load from.</param>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.RangeRestriction.Minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.RangeRestriction.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.RangeRestriction.XmlElementName">
            <summary>
            Gets the name of the XML element.
            </summary>
            <value>The name of the XML element.</value>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.EnumerationRestriction">
            <summary>
            Defines a restriction that provides a list of acceptable values.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.EnumerationRestriction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.EnumerationRestriction"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.EnumerationRestriction.IsValid(Emergent.Toolbench.TypeService.Types.DataValue)">
            <summary>
            Determines whether the specified value is valid.
            </summary>
            <param name="value">The value.</param>
            <returns>
            A collection of error message or empty collection if valid.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.EnumerationRestriction.ToXml">
            <summary>
            Implement to return the instance serialized as an XStreamingElement.
            </summary>
            <returns>The serialized instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.EnumerationRestriction.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Implement to initialize the instance from the date in the XElement.
            </summary>
            <param name="element">The XElement containing the data to load from.</param>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.EnumerationRestriction.Values">
            <summary>
            Gets or sets the list of acceptable values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.EnumerationRestriction.XmlElementName">
            <summary>
            Gets the name of the XML element.
            </summary>
            <value>The name of the XML element.</value>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.RestrictionEqualityComparer">
            <summary>
            This class gets the default RestrictionEqualityComparer from the restriction
            for comparison.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.SimpleTypeEditor">
            <summary>
            Represents the base editor for all simple data type.
            </summary>
            <summary>
            SimpleTypeEditor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.SimpleTypeEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Editors.SimpleTypeEditor"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.SimpleTypeEditor.OnRestrictionChanged(Emergent.Toolbench.TypeService.RestrictionEventArgs)">
            <summary>
            Invoked whenever the restriction has changed.
            </summary>
            <param name="e">The <see cref="T:Emergent.Toolbench.TypeService.RestrictionEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.SimpleTypeEditor.SelectContentEditor(Emergent.Toolbench.TypeService.Restriction)">
            <summary>
            Selects the content editor according to the current restriction.
            </summary>
            <param name="restriction">The restriction.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.SimpleTypeEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Plugin">
            <summary>
            Implements the plugin interface for the TypeService plugin, which
            allows the service to initialize.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Plugin.Start">
            <summary>
            Initializes the TypeService.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.RestrictionDescriptor">
            <summary>
            A restriction descriptor holds all the information provided by a restriction
            extension point.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.RestrictionDescriptor.ToString">
            <summary>
            Creates a string representation of the restriction descriptor which is just
            the descriptors name.
            </summary>
            <returns>A string representation of the restriction.</returns>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.RestrictionDescriptor.Id">
            <summary>
            Gets the id of the restriction.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.RestrictionDescriptor.Name">
            <summary>
            Gets the name of the restriction.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.RestrictionDescriptor.Class">
            <summary>
            Gets the class to instantiate for the restriction.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.RestrictionDescriptor.PluginDescriptor">
            <summary>
            Gets the plugin descriptor.
            </summary>
            <value>The plugin descriptor.</value>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.MapEditor">
            <summary>
            Interaction logic for MapEditor.xaml
            </summary>
            <summary>
            MapEditor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.MapEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Editors.MapEditor"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.MapEditor.OnRestrictionChanged(Emergent.Toolbench.TypeService.RestrictionEventArgs)">
            <summary>
            Invoked whenever the restriction has changed.
            </summary>
            <param name="e">The <see cref="T:Emergent.Toolbench.TypeService.RestrictionEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.MapEditor.OnAddBtnClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [add BTN click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing 
            the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.MapEditor.OnRemoveBtnClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [remove BTN click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing 
            the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.MapEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.EnumDataValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Types.EnumDataValue"/> class.
            This constructor exists only to support the XML serialization.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.EnumDataValue.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Types.EnumDataValue"/> class.
            Used by the serialization framework.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.EnumDataValue.InitDataType(Emergent.Toolbench.TypeService.EnumDataType)">
            <summary>
            Initializes the data type. Cannot be done in the overridden property
            because the base doesn't declare a setter.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.EntityRef.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Types.EntityRef"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.EntityRef.#ctor(System.String,System.Guid,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Types.EntityRef"/> class.
            </summary>
            <param name="name">The name of the entity.</param>
            <param name="id">The entity id.</param>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.EntityRef.ToString">
            <summary>
            Gets the string representation of this entity reference.
            </summary>
            <returns>The string representation of this entity reference.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.EntityRef.ToXml">
            <summary>
            Implement to return the instance serialized as an XStreamingElement.
            </summary>
            <returns>The serialized instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.EntityRef.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Implement to initialize the instance from the date in the XElement.
            </summary>
            <param name="element">The XElement containing the data to load from.</param>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.EntityRef.Name">
            <summary>
            Gets or sets the name of the entity reference.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.EntityRef.Id">
            <summary>
            Gets or sets the entity id to store for this entity reference.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.EntityRef.TargetContainerHierarchy">
            <summary>
            Gets or sets the hierarchy of containers that contain the target object, starting with
            the direct parent of the object, ending with the root container.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.TypeService.Types.EntityRef.StringValue">
            <summary>
            Gets or sets the string value.
            </summary>
            <value>The string value.</value>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Types.EntityRef.ContainerHierarchy">
            <summary>
            List of container names representing a hierarchy of containers. Starts with the leaf,
            ends with the root.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.EntityRef.ContainerHierarchy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Types.EntityRef.ContainerHierarchy"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Types.EntityRef.ContainerHierarchy.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Types.EntityRef.ContainerHierarchy"/> class from
            an existing enumeration of container names.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="collection"/> is null.</exception>
        </member>
        <member name="T:Emergent.Toolbench.TypeService.Editors.RangeEditor">
            <summary>
            Represents an editor for numeric value with a minimum and a maximum value.
            </summary>
            <summary>
            RangeEditor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.RangeEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.TypeService.Editors.RangeEditor"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.RangeEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.TypeService.Editors.EntityRefEditor.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Initialized"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event 
            data.</param>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
