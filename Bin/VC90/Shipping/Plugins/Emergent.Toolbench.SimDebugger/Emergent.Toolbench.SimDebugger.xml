<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emergent.Toolbench.SimDebugger</name>
    </assembly>
    <members>
        <member name="T:Emergent.Toolbench.SimDebugger.LogMessageSimEvent">
            <summary>
            A SimEvent that notes a debugging message.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.SimEvent">
            <summary>
            An event recorded from a connected game that can be visualized in the Sim Debugger. Derived
            classes will follow one of two patterns:
            1. If the event is originated by a generic DebugNoteEvent message, only the default
            constructor is used and Initialize is called to supply data to the SimEvent. ParseParams
            should be overridden to unpack anything beyond timestamp and gameID.
            2. For events originating from all other message types, a custom constructor is used to
            supply all data. ToXml and FromXml should be overridden to serialize the data.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.SimEvent"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimEvent.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.SimEvent"/> class.
            </summary>
            <param name="timestamp">The timestamp of the event.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimEvent.#ctor(System.Double,System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.SimEvent"/> class.
            </summary>
            <param name="timestamp">The timestamp of the event.</param>
            <param name="gameID">The game-generated ID for an entity associated with the event.
            </param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimEvent.Initialize(System.Double,System.UInt64,System.String)">
            <summary>
            Initializes a SimEvent factoried to handle a generic DebugNoteEvent notification message
            received from the game. Not called for SimEvents originating from other message types.
            </summary>
            <param name="timestamp">The timestamp of the event.</param>
            <param name="gameID">The game-generated ID for an entity associated with the event.
            </param>
            <param name="eventParams">Additional information about the event.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimEvent.Process(Emergent.Toolbench.SimDebugger.ISimWorldAspect)">
            <summary>
            Applies the event to a SimWorld instance.
            </summary>
            <param name="simWorld">The SimWorld instance.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimEvent.ToXml">
            <summary>
            Generates XML for serializing the event.
            </summary>
            <returns>XML describing the event.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimEvent.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Loads the properties of the event from XML.
            </summary>
            <param name="element">XML describing the event.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimEvent.ParseParams(System.String)">
            <summary>
            Gives the SimEvent an opportunity to handle additional information about the event
            received from the game.
            </summary>
            <param name="eventParams">Additional informtion stored as a string.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEvent.Timestamp">
            <summary>
            Gets or sets the timestamp of the event.
            </summary>
            <value>The timestamp of the event.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEvent.TimestampString">
            <summary>
            Gets the timestamp of the event as a string formatted for display.
            </summary>
            <value>The timestamp of the event as a display string.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEvent.EntityGameID">
            <summary>
            Gets or sets the game-generated ID for an entity associated with the event.
            </summary>
            <value>The game-generated ID for an entity associated with the event.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEvent.Description">
            <summary>
            Gets a description of the event.
            </summary>
            <value>A description of the event.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEvent.DisplayColor">
            <summary>
            Gets the display color for the event.
            </summary>
            <value>The display color for the event.</value>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.LogMessageSimEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.LogMessageSimEvent"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.LogMessageSimEvent.Process(Emergent.Toolbench.SimDebugger.ISimWorldAspect)">
            <summary>
            Applies the event to a SimWorld instance.
            </summary>
            <param name="simWorld">The SimWorld instance.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.LogMessageSimEvent.ParseParams(System.String)">
            <summary>
            Gives the SimEvent an opportunity to handle additional information about the event
            received from the game.
            </summary>
            <param name="eventParams">Additional informtion stored as a string.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.LogMessageSimEvent.Description">
            <summary>
            Gets a description of the event.
            </summary>
            <value>A description of the event.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.LogMessageSimEvent.DisplayColor">
            <summary>
            Gets the display color for the event.
            </summary>
            <value>The display color for the event.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.SessionDocument">
            <summary>
            Data associated with a Sim Debugger session, including all recorded game events.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.SimDebugger.SessionDocument.ActiveSession">
            <summary>
            The document allowed to accept events from a connected game.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SessionDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.SessionDocument"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SessionDocument.GetEvent(System.Int32)">
            <summary>
            Gets the specified event.
            </summary>
            <param name="index">The event index.</param>
            <returns>The recorded SimEvent.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SessionDocument.AppendEvent(Emergent.Toolbench.SimDebugger.SimEvent)">
            <summary>
            Handles a new SimEvent coming from a connected game.
            </summary>
            <param name="newEvent">The new event.</param>
            <returns>True if the event was recorded, false if trying to start accepting delta-based
            state events mid-stream.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SessionDocument.Clear">
            <summary>
            Clears the content to a default state.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SessionDocument.ResetSession">
            <summary>
            Resets the history and world state.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SessionDocument.StartSession(Emergent.Toolbench.SimDebugger.SessionStartedSimEvent)">
            <summary>
            Starts or restarts the session in response to game notification.
            </summary>
            <param name="simEvent">The SessionStarted event.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SessionDocument.Save">
            <summary>
            Saves the document to XML.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SessionDocument.Load">
            <summary>
            Loads the document from XML.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SessionDocument.RaiseFreshSessionAvailable">
            <summary>
            Raises the FreshSessionAvailable event.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SessionDocument.OnClosing">
            <summary>
            Called when the content is closing.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.SimDebugger.SessionDocument.FreshSessionAvailable">
            <summary>
            Occurs when a new SessionDocument is available to handle a game connection.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SessionDocument.SimWorld">
            <summary>
            Gets the SimWorld aspect associated with the session.
            </summary>
            <value>The SimWorld aspect.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SessionDocument.ActorFacingOffset">
            <summary>
            Gets or sets the actor facing offset for the session.
            </summary>
            <value>The actor facing offset.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SessionDocument.WorldExtents">
            <summary>
            Gets or sets the maximum absolute world coordinate for the content.
            </summary>
            <value>The maximum absolute world coordinate.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SessionDocument.AcceptingEvents">
            <summary>
            Gets a value indicating whether the document is recording new events. At most one
            session is permitted to accept new events from a connected game.
            </summary>
            <value><c>true</c> if recording new events; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SessionDocument.EventHistory">
            <summary>
            Gets the event history.
            </summary>
            <value>The event history.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SessionDocument.EventCount">
            <summary>
            Gets the number of recorded events.
            </summary>
            <value>The number of recorded events.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SessionDocument.StartTime">
            <summary>
            Gets the time of the first event in the recorded simulation.
            </summary>
            <value>Time of the first event in the recorded simulation.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SessionDocument.EndTime">
            <summary>
            Gets the time of the last event in the recorded simulation.
            </summary>
            <value>Time of the last event in the recorded simulation.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.UpdateActorSimEvent">
            <summary>
            A SimEvent that updates the position and facing of an Actor-based entity.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UpdateActorSimEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.UpdateActorSimEvent"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UpdateActorSimEvent.Process(Emergent.Toolbench.SimDebugger.ISimWorldAspect)">
            <summary>
            Applies the event to a SimWorld instance.
            </summary>
            <param name="simWorld">The SimWorld instance.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.UpdateActorSimEvent.ParseParams(System.String)">
            <summary>
            Gives the SimEvent an opportunity to handle additional information about the event
            received from the game.
            </summary>
            <param name="eventParams">Additional informtion stored as a string.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UpdateActorSimEvent.Description">
            <summary>
            Gets a description of the event.
            </summary>
            <value>A description of the event.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.UpdateActorSimEvent.DisplayColor">
            <summary>
            Gets the display color for the event.
            </summary>
            <value>The display color for the event.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.EntityCreatedSimEvent">
            <summary>
            A SimEvent representing the creation of an entity.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.EntityCreatedSimEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.EntityCreatedSimEvent"/> class.
            </summary>
            <remarks>Called to factory the SimEvent when loading from a saved session.</remarks>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.EntityCreatedSimEvent.#ctor(System.Double,System.UInt64,System.Guid,System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.EntityCreatedSimEvent"/> class.
            </summary>
            <param name="timestamp">The timestamp of the event.</param>
            <param name="gameID">The game-generated ID for the new entity.</param>
            <param name="toolID">The tool-time ID for the new entity.</param>
            <param name="modelName">The name of the model used by the entity.</param>
            <param name="posX">The initial X position of the entity.</param>
            <param name="posY">The initial Y position of the entity.</param>
            <param name="posZ">The initial Z position of the entity.</param>
            <param name="facing">The initial facing angle of the entity.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.EntityCreatedSimEvent.AddProperty(System.String,System.String)">
            <summary>
            Adds a property override to the entity definition as a name/value pair.
            </summary>
            <param name="name">The name of the property to add.</param>
            <param name="value">The value of the property to add represented as a string.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.EntityCreatedSimEvent.Process(Emergent.Toolbench.SimDebugger.ISimWorldAspect)">
            <summary>
            Applies the event to a SimWorld instance.
            </summary>
            <param name="simWorld">The SimWorld instance.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.EntityCreatedSimEvent.ToXml">
            <summary>
            Generates XML for serializing the event.
            </summary>
            <returns>XML describing the event.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.EntityCreatedSimEvent.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Loads the properties of the event from XML.
            </summary>
            <param name="element">XML describing the event.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.EntityCreatedSimEvent.Description">
            <summary>
            Gets a description of the event.
            </summary>
            <value>A description of the event.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.EntityCreatedSimEvent.DisplayColor">
            <summary>
            Gets the display color for the event.
            </summary>
            <value>The display color for the event.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.PositionDatabase">
            <summary>
            A database that accumulates entity positions over time.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.ISimWorldDatabase">
            <summary>
            An interface for acting on the databases that define the current world state in the Sim
            Debugger.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.ISimWorldDatabase.Reset">
            <summary>
            Resets the contents of the database.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PositionDatabase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.PositionDatabase"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PositionDatabase.Reset">
            <summary>
            Resets the contents of the database.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PositionDatabase.BeginRecording(System.Double)">
            <summary>
            Called to prepare for recording positions at a new timestamp.
            </summary>
            <param name="timestamp">The timestamp for recording.</param>
            <returns>True if time has advanced since the last batch of recordings.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PositionDatabase.RecordPosition(System.Double,System.Double)">
            <summary>
            Updates the data grid with a new entity position record.
            </summary>
            <param name="x">The world X coordinate of an entity.</param>
            <param name="y">The world Y coordinate of an entity.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.PositionDatabase.BaseGrid">
            <summary>
            Gets the grid of accumulated position data.
            </summary>
            <value>The grid of accumulated position data.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.PositionDatabase.BaseGridDim">
            <summary>
            Gets or sets the dimensions of the position grid.
            </summary>
            <value>The dimensions of the position grid.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.PositionDatabase.BaseScale">
            <summary>
            Gets or sets the size of a grid cell in world coordinates.
            </summary>
            <value>The size of a grid cell in world coordinates.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.ModelDatabase">
            <summary>
            A database that tracks the set of known flat models in the Sim Debugger.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.ModelDatabase.Reset">
            <summary>
            Resets the contents of the database.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.ModelDatabase.AddModel(Emergent.Toolbench.SimDebugger.SimModel)">
            <summary>
            Adds a model to the database.
            </summary>
            <param name="model">The model to add.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.ModelDatabase.FindModel(System.String)">
            <summary>
            Finds the model with the specified name.
            </summary>
            <param name="name">The name of the model to find.</param>
            <returns>The requested model, else null.</returns>
        </member>
        <member name="E:Emergent.Toolbench.SimDebugger.ModelDatabase.SimModelAdded">
            <summary>
            Event fired when a SimModel is added to the database.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.ModelDatabase.Models">
            <summary>
            Gets the models in the database.
            </summary>
            <value>The models in the database.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.PropertyDroppedSimEvent">
            <summary>
            A SimEvent noting that updates will no longer be received for a particular property. Some
            updates are dropped to prevent message spam for commonly modified properties. This event is
            intended to keep users informed of properties that enter the "stale" state.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PropertyDroppedSimEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.PropertyDroppedSimEvent"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PropertyDroppedSimEvent.Process(Emergent.Toolbench.SimDebugger.ISimWorldAspect)">
            <summary>
            Applies the event to a SimWorld instance.
            </summary>
            <param name="simWorld">The SimWorld instance.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PropertyDroppedSimEvent.ParseParams(System.String)">
            <summary>
            Gives the SimEvent an opportunity to handle additional information about the event
            received from the game.
            </summary>
            <param name="eventParams">Additional informtion stored as a string.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.PropertyDroppedSimEvent.Description">
            <summary>
            Gets a description of the event.
            </summary>
            <value>A description of the event.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.PropertyDroppedSimEvent.DisplayColor">
            <summary>
            Gets the display color for the event.
            </summary>
            <value>The display color for the event.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.SessionDocumentFactory">
            <summary>
            Factory for the Sim Debugger SessionDocument class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SessionDocumentFactory.New(Emergent.Toolbench.ContentService.ContentCreationSettings)">
            <summary>
            Creates a new instance of a document. This method is called when the content is created.
            </summary>
            <param name="args">Additional configuration data used to create the document.</param>
            <returns>A new document instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SessionDocumentFactory.Open(Emergent.Toolbench.ContentService.ContentCreationSettings)">
            <summary>
            Opens content from the specified location and builds a new document from that content.
            </summary>
            <param name="args">Additional configuration data used to create the document.</param>
            <returns>A new document instance.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SessionDocumentFactory.Save(Emergent.Toolbench.ContentService.AbstractDocument)">
            <summary>
            Saves the specified document.
            </summary>
            <param name="document">The document to save.</param>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.SimEntityEventArgs">
            <summary>
            An EventArgs class for holding data associated with an event involving a SimEntity.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimEntityEventArgs.#ctor(Emergent.Toolbench.SimDebugger.SimEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.SimEntityEventArgs"/> class.
            </summary>
            <param name="entity">The entity associated with the event.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEntityEventArgs.ViewIndex">
            <summary>
            Gets or sets the index the entity is at when added or removed from the entity list.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEntityEventArgs.GroupAltered">
            <summary>
            Gets or sets a value indicating whether the SimEntityModelGroup associated with this
            entity has been added or removed.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEntityEventArgs.Entity">
            <summary>
            Gets or sets the entity associated with the event.
            </summary>
            <value>The associated entity.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.SimEntity">
            <summary>
            Represents an entity in the Sim Debugger. SimEntity state is updated based on events
            reported from the game.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimEntity.#ctor(System.UInt64,System.Guid,Emergent.Toolbench.SimDebugger.SimModel,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.SimEntity"/> class.
            </summary>
            <param name="gameID">The game-generated ID of the entity.</param>
            <param name="toolID">The tool-time ID of the entity.</param>
            <param name="model">The model used by the entity.</param>
            <param name="x">The X coordinate of the entity's world position.</param>
            <param name="y">The Y coordinate of the entity's world position.</param>
            <param name="z">The Z coordinate of the entity's world position.</param>
            <param name="facing">The facing angle for the entity.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimEntity.GetProperty(System.String)">
            <summary>
            Gets the value of an entity property.
            </summary>
            <param name="name">The name of the property to locate.</param>
            <returns>The value of the requested property as a string.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimEntity.SetProperty(System.String,System.String)">
            <summary>
            Sets the value of an entity property.
            </summary>
            <param name="name">The property name.</param>
            <param name="value">The string value to assign to the property.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimEntity.ClearCollectionProperty(System.String)">
            <summary>
            Removes all items in a collection property.
            </summary>
            <param name="name">The name of the collection property.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEntity.GameID">
            <summary>
            Gets or sets the game-generated ID of the entity.
            </summary>
            <value>The game-generated ID of the entity.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEntity.DisplayedName">
            <summary>
            Gets the displayed name of the entity
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEntity.ToolID">
            <summary>
            Gets or sets the tool-time ID of the entity.
            </summary>
            <value>The tool-time ID of the entity.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEntity.Model">
            <summary>
            Gets or sets the model used by the entity.
            </summary>
            <value>The model used by the entity.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEntity.X">
            <summary>
            Gets or sets the X coordinate of the entity's world position.
            </summary>
            <value>The X coordinate of the entity's world position.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEntity.Y">
            <summary>
            Gets or sets the Y coordinate of the entity's world position.
            </summary>
            <value>The Y coordinate of the entity's world position.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEntity.Z">
            <summary>
            Gets or sets the Z coordinate of the entity's world position.
            </summary>
            <value>The Z coordinate of the entity's world position.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEntity.Facing">
            <summary>
            Gets or sets the facing angle of the entity.
            </summary>
            <value>The facing angle of the entity.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEntity.Properties">
            <summary>
            Gets all properties on the entity.
            </summary>
            <value>The properties on the entity as name/value pairs.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.ExtensionPoints">
            <summary>
            Holds the extension point IDs for this assembly.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.SimDebugger.ExtensionPoints.SimEvent">
            <summary>
            The extension point ID for SimEvent extension contributions.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.SimDebugger.ExtensionPoints.SimWorldDatabase">
            <summary>
            The extension point ID for SimWorldDatabase extension contributions.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.PropertyDatabase">
            <summary>
            A database that tracks the list of properties that are no longer being updated by the game,
            to prevent message spam.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PropertyDatabase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.PropertyDatabase"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PropertyDatabase.Reset">
            <summary>
            Resets the contents of the database.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PropertyDatabase.AddStaleProperty(System.String)">
            <summary>
            Adds a stale property to the database.
            </summary>
            <param name="propertyName">Name of the property to add.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PropertyDatabase.IsPropertyStale(System.String)">
            <summary>
            Determines whether the specified property is stale.
            </summary>
            <param name="propertyName">Name of the property to check.</param>
            <returns><c>true</c> if the property is no longer being updated by the game; otherwise,
            <c>false</c>.</returns>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.PropertyDatabase.StaleProperties">
            <summary>
            Gets the stale properties in the database.
            </summary>
            <value>The stale properties in the database.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.SimWorldAspect">
            <summary>
            An aspect that holds the current state of the Sim Debugger world, consisting of
            extension-driven databases. This state is advanced as session events are processed.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.ISimWorldAspect">
            <summary>
            Interface for accessing the Sim Debugger aspect responsible for tracking the current state
            of the game world.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.ISimWorldAspect.GetDatabase(System.String)">
            <summary>
            Gets the requested SimWorld database.
            </summary>
            <param name="databaseID">The database ID.</param>
            <returns>A SimWorld database.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.ISimWorldAspect.Restart">
            <summary>
            Restarts Sim Debugger playback at the beginning of the session history.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.ISimWorldAspect.RunTo(System.Double)">
            <summary>
            Processes events up to the requested time.
            </summary>
            <param name="time">The target game time in seconds to seek.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.ISimWorldAspect.Live">
            <summary>
            Gets or sets a value indicating whether playback is in live mode, during which events
            are processed as soon as they are recieved.
            </summary>
            <value><c>true</c> if in live state; otherwise, <c>false</c>.</value>
        </member>
        <member name="E:Emergent.Toolbench.SimDebugger.ISimWorldAspect.LiveChanged">
            <summary>
            Occurs when the Live state has changed.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.ISimWorldAspect.Paused">
            <summary>
            Gets or sets a value indicating whether playback is paused.
            </summary>
            <value><c>true</c> if playback is paused; otherwise, <c>false</c>.</value>
        </member>
        <member name="E:Emergent.Toolbench.SimDebugger.ISimWorldAspect.PausedChanged">
            <summary>
            Occurs when the Paused state has changed.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.ISimWorldAspect.ElapsedTime">
            <summary>
            Gets elapsed game time in seconds for the session.
            </summary>
            <value>The elapsed time in seconds.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.ISimWorldAspect.PlaybackSpeed">
            <summary>
            Gets or sets the playback speed as a multiplier of real-time.
            </summary>
            <value>The playback speed.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.ISimWorldAspect.GridScale">
            <summary>
            Gets or sets the grid scale as world units per grid line.
            </summary>
            <value>The grid scale.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.ISimWorldAspect.SelectedEntity">
            <summary>
            Gets or sets the selected entity.
            </summary>
            <value>The selected entity.</value>
        </member>
        <member name="E:Emergent.Toolbench.SimDebugger.ISimWorldAspect.SelectedEntityChanged">
            <summary>
            Occurs when the selected entity has changed.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.ISimWorldAspect.EntityProperties">
            <summary>
            The state of all properties of the selected entity.
            </summary>
            <value>The selected entity properties.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.ISimWorldAspect.BackdropAvailable">
            <summary>
            Gets or sets a value indicating whether a backdrop image has become available.
            </summary>
            <value><c>true</c> if a backdrop image has become available; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.ISimWorldAspect.SnapshotAvailable">
            <summary>
            Gets or sets the stream of pixel data used to display a live image of the game world.
            </summary>
            <value>Pixel data used to display a live image of the game world.</value>
        </member>
        <member name="E:Emergent.Toolbench.SimDebugger.ISimWorldAspect.PreProcessEvent">
            <summary>
            Occurs just before a SimEvent is processed.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.SimDebugger.ISimWorldAspect.PostProcessEvent">
            <summary>
            Occurs just after a SimEvent is processed.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimWorldAspect.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.SimWorldAspect"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimWorldAspect.OnContentConnected">
            <summary>
            Called when content is connected to the aspect, to perform additional initialization.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimWorldAspect.OnContentDisconnected">
            <summary>
            Called just before the content is disconnected from the aspect.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimWorldAspect.GetDatabase(System.String)">
            <summary>
            Gets the requested SimWorld database.
            </summary>
            <param name="databaseID">The database ID.</param>
            <returns>A SimWorld database.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimWorldAspect.Reset">
            <summary>
            Clears the world state.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimWorldAspect.Restart">
            <summary>
            Restarts Sim Debugger playback at the beginning of the session history.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimWorldAspect.RunTo(System.Double)">
            <summary>
            Processes events up to the requested time.
            </summary>
            <param name="time">The target game time in seconds to seek.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimWorldAspect.ProcessEvent(Emergent.Toolbench.SimDebugger.SimEvent)">
            <summary>
            Processes a single SimEvent.
            </summary>
            <param name="simEvent">The SimEvent to process.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimWorldAspect.OnTick(System.Object,System.EventArgs)">
            <summary>
            Called each time the update timer elapses.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimWorldAspect.OnPreProcessEvent(System.Object,Emergent.Toolbench.SimDebugger.ProcessEventArgs)">
            <summary>
            Called just before a SimEvent is processed to update the PositionDatabase with current
            actor positions.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="E:Emergent.Toolbench.SimDebugger.SimWorldAspect.LiveChanged">
            <summary>
            Occurs when the Live state has changed.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.SimDebugger.SimWorldAspect.PausedChanged">
            <summary>
            Occurs when the Paused state has changed.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.SimDebugger.SimWorldAspect.SelectedEntityChanged">
            <summary>
            Occurs when the selected entity has changed.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.SimDebugger.SimWorldAspect.PreProcessEvent">
            <summary>
            Occurs just before a SimEvent is processed.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.SimDebugger.SimWorldAspect.PostProcessEvent">
            <summary>
            Occurs just after a SimEvent is processed.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimWorldAspect.Live">
            <summary>
            Gets or sets a value indicating whether playback is in live mode, during which events
            are processed as soon as they are recieved.
            </summary>
            <value><c>true</c> if in live state; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimWorldAspect.Paused">
            <summary>
            Gets or sets a value indicating whether playback is paused.
            </summary>
            <value><c>true</c> if playback is paused; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimWorldAspect.ElapsedTime">
            <summary>
            Gets or sets elapsed game time in seconds for the session.
            </summary>
            <value>The elapsed time in seconds.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimWorldAspect.PlaybackSpeed">
            <summary>
            Gets or sets the playback speed as a multiplier of real-time.
            </summary>
            <value>The playback speed.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimWorldAspect.GridScale">
            <summary>
            Gets or sets the grid scale as world units per grid line.
            </summary>
            <value>The grid scale.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimWorldAspect.SelectedEntity">
            <summary>
            Gets or sets the selected entity.
            </summary>
            <value>The selected entity.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimWorldAspect.EntityProperties">
            <summary>
            The state of all properties of the selected entity.
            </summary>
            <value>The selected entity properties.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimWorldAspect.BackdropAvailable">
            <summary>
            Gets or sets a value indicating whether a backdrop image has become available.
            </summary>
            <value><c>true</c> if a backdrop image has become available; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimWorldAspect.SnapshotAvailable">
            <summary>
            Gets or sets the stream of pixel data used to display a live image of the game world.
            </summary>
            <value>Pixel data used to display a live image of the game world.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.SimEventRegistry">
            <summary>
            A registry for managing the collection of SimEvent extensions and handling SimEvent factory
            requests.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimEventRegistry.#cctor">
            <summary>
            Initializes the <see cref="T:Emergent.Toolbench.SimDebugger.SimEventRegistry"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimEventRegistry.LoadSimEventDescriptors">
            <summary>
            Prepares the collection of SimEventDescriptors based on registered extensions.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimEventRegistry.Create(System.String)">
            <summary>
            Creates an instance of the specified SimEvent class.
            </summary>
            <param name="simEventClass">The SimEvent class name to be factoried.</param>
            <returns>A SimEvent instance.</returns>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.SimEventRegistry.SimEventDescriptor">
            <summary>
            A helper class that holds information about a type of SimEvent.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimEventRegistry.SimEventDescriptor.#ctor(Emergent.Toolbench.IElementData,Emergent.Toolbench.IExtension)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.SimEventRegistry.SimEventDescriptor"/> class.
            </summary>
            <param name="data">The XML data associated with a SimEvent extension.</param>
            <param name="extension">A SimEvent extension.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimEventRegistry.SimEventDescriptor.Create">
            <summary>
            Creates a SimEvent-derived class instance.
            </summary>
            <returns>The new SimEvent instance.</returns>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEventRegistry.SimEventDescriptor.Class">
            <summary>
            Gets or sets the class name for the SimEvent type.
            </summary>
            <value>The SimEvent class name.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimEventRegistry.SimEventDescriptor.Extension">
            <summary>
            Gets or sets the SimEvent extension.
            </summary>
            <value>The SimEvent extension.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.EntityDatabase">
            <summary>
            A database that tracks the current state of entities in the Sim Debugger.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.EntityDatabase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.EntityDatabase"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.EntityDatabase.Reset">
            <summary>
            Resets the contents of the database.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.EntityDatabase.AddEntity(System.UInt64,Emergent.Toolbench.SimDebugger.SimEntity)">
            <summary>
            Adds an entity to the database.
            </summary>
            <param name="id">The game-generated ID of the entity to add.</param>
            <param name="entity">The entity to add.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.EntityDatabase.RemoveEntity(System.UInt64)">
            <summary>
            Removes an entity from the database.
            </summary>
            <param name="id">The game-generated ID of the entity to remove.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.EntityDatabase.FindEntity(System.UInt64)">
            <summary>
            Finds the entity with the requested game-generated ID.
            </summary>
            <param name="id">The game-generated ID of the entity to find.</param>
            <returns>The requested entity, else null.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.EntityDatabase.UpdateReadOnlyEntities">
            <summary>
            Maintains a separate list of entities that can be used for UI updates.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.SimDebugger.EntityDatabase.SimEntityAdded">
            <summary>
            Event fired when a SimEntity is added to the world.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.SimDebugger.EntityDatabase.SimEntityRemoved">
            <summary>
            Event first when a SimEntity is removed from the world.
            </summary>
        </member>
        <member name="E:Emergent.Toolbench.SimDebugger.EntityDatabase.OnReset">
            <summary>
            Event fired when entitydatabase is reset
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.EntityDatabase.Entities">
            <summary>
            Gets the entities in the database.
            </summary>
            <value>The entities in the database.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.EntityDatabase.Actors">
            <summary>
            Gets the actor entities in the database.
            </summary>
            <value>The actor entities in the database.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.SessionStartedSimEvent">
            <summary>
            A SimEvent indicating the start of a debugging session.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SessionStartedSimEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.SessionStartedSimEvent"/> class.
            </summary>
            <remarks>Called to factory the SimEvent when loading from a saved session.</remarks>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SessionStartedSimEvent.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.SessionStartedSimEvent"/> class.
            </summary>
            <param name="timestamp">The timestamp of the event.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SessionStartedSimEvent.Process(Emergent.Toolbench.SimDebugger.ISimWorldAspect)">
            <summary>
            Applies the event to a SimWorld instance.
            </summary>
            <param name="simWorld">The SimWorld instance.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SessionStartedSimEvent.Description">
            <summary>
            Gets a description of the event.
            </summary>
            <value>A description of the event.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SessionStartedSimEvent.DisplayColor">
            <summary>
            Gets the display color for the event.
            </summary>
            <value>The display color for the event.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.PropertyChangedSimEvent">
            <summary>
            A SimEvent that notes an entity property change. In the case of collection properties, all
            key/value pair items for the updated property are recorded.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PropertyChangedSimEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.PropertyChangedSimEvent"/> class.
            </summary>
            <remarks>Called to factory the SimEvent when loading from a saved session.</remarks>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PropertyChangedSimEvent.#ctor(System.Double,System.UInt64,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.PropertyChangedSimEvent"/> class.
            </summary>
            <param name="timestamp">The timestamp of the event.</param>
            <param name="gameID">The game-generated ID for the entity.</param>
            <param name="propertyName">Name of the property that has changed.</param>
            <remarks>Called to factory the SimEvent when handling a collection property change.
            </remarks>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PropertyChangedSimEvent.#ctor(System.Double,System.UInt64,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.PropertyChangedSimEvent"/> class.
            </summary>
            <param name="timestamp">The timestamp of the event.</param>
            <param name="gameID">The game-generated ID for the entity.</param>
            <param name="propertyName">Name of the property that has changed.</param>
            <param name="propertyValue">The new property value.</param>
            <remarks>Called to factory the SimEvent when handling a scalar property change.
            </remarks>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PropertyChangedSimEvent.AddItem(System.String,System.String)">
            <summary>
            Adds a key/value pair collection property item to the change record.
            </summary>
            <param name="key">The key of the item to add.</param>
            <param name="value">The value of the item to add represented as a string.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PropertyChangedSimEvent.Process(Emergent.Toolbench.SimDebugger.ISimWorldAspect)">
            <summary>
            Applies the event to a SimWorld instance.
            </summary>
            <param name="simWorld">The SimWorld instance.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PropertyChangedSimEvent.ToXml">
            <summary>
            Generates XML for serializing the event.
            </summary>
            <returns>XML describing the event.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PropertyChangedSimEvent.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Loads the properties of the event from XML.
            </summary>
            <param name="element">XML describing the event.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.PropertyChangedSimEvent.Description">
            <summary>
            Gets a description of the event.
            </summary>
            <value>A description of the event.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.PropertyChangedSimEvent.DisplayColor">
            <summary>
            Gets the display color for the event.
            </summary>
            <value>The display color for the event.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.SimModel">
            <summary>
            Stores information about a flat model in the Sim Debugger. The flat model definitions come
            from the connected game and are assumed not to change.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimModel.#ctor(System.String,System.Boolean,System.Boolean,Emergent.Toolbench.Collections.ReadOnlyDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.SimModel"/> class.
            </summary>
            <param name="name">The name the flat model.</param>
            <param name="isMesh">Specifies whether the flat model mixes in Mesh.</param>
            <param name="isActor">Specifies whether the flat model mixes in Actor.</param>
            <param name="properties">The properties on the flat model as name/value pairs.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimModel.Name">
            <summary>
            Gets or sets the name of the flat model.
            </summary>
            <value>The name of the flat model.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimModel.IsMesh">
            <summary>
            Gets or sets a value indicating whether this model mixes Mesh.
            </summary>
            <value><c>true</c> if this model mixes Mesh; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimModel.IsActor">
            <summary>
            Gets or sets a value indicating whether this model mixes Aactor.
            </summary>
            <value><c>true</c> if this model mixes Actor; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimModel.Properties">
            <summary>
            Gets or sets the properties on the flat model.
            </summary>
            <value>The properties on the flat model as name/value pairs.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.ToggleEventArgs">
            <summary>
            Simple EventArgs class for recording the state of a toggle.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.ToggleEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.ToggleEventArgs"/> class.
            </summary>
            <param name="state">The state of the toggle.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.ToggleEventArgs.State">
            <summary>
            Gets or sets a value indicating the toggle state.
            </summary>
            <value>The toggle state.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.ProcessEventArgs">
            <summary>
            Simple EventArgs class associated with processing SimEvents.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.ProcessEventArgs.#ctor(Emergent.Toolbench.SimDebugger.SimEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.ProcessEventArgs"/> class.
            </summary>
            <param name="simEvent">The SimEvent being processed.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.ProcessEventArgs.Event">
            <summary>
            Gets or sets the SimEvent being processed.
            </summary>
            <value>The SimEvent being processed.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.SimModelEventArgs">
            <summary>
            An EventArgs class for holding data associated with an event involving a SimModel.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.SimModelEventArgs.#ctor(Emergent.Toolbench.SimDebugger.SimModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.SimModelEventArgs"/> class.
            </summary>
            <param name="model">The model associated with the event.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.SimModelEventArgs.Model">
            <summary>
            Gets or sets the model associated with the event.
            </summary>
            <value>The associated model.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.EntityDestroyedSimEvent">
            <summary>
            A SimEvent representing the destruction of an entity.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.EntityDestroyedSimEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.EntityDestroyedSimEvent"/> class.
            </summary>
            <remarks>Called to factory the SimEvent when loading from a saved session.</remarks>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.EntityDestroyedSimEvent.#ctor(System.Double,System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.EntityDestroyedSimEvent"/> class.
            </summary>
            <param name="timestamp">The timestamp of the event.</param>
            <param name="gameID">The game-generated ID of the entity to be destroyed.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.EntityDestroyedSimEvent.Process(Emergent.Toolbench.SimDebugger.ISimWorldAspect)">
            <summary>
            Applies the event to a SimWorld instance.
            </summary>
            <param name="simWorld">The SimWorld instance.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.EntityDestroyedSimEvent.Description">
            <summary>
            Gets a description of the event.
            </summary>
            <value>A description of the event.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.EntityDestroyedSimEvent.DisplayColor">
            <summary>
            Gets the display color for the event.
            </summary>
            <value>The display color for the event.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.PropertyProxy">
            <summary>
            A property wrapper that supports change notifications.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.PropertyProxy.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.PropertyProxy"/> class.
            </summary>
            <param name="name">The property name.</param>
            <param name="value">The property value.</param>
            <param name="live">Whether the property is being updated.</param>
            <param name="editable">Whether the property value is editable.</param>
        </member>
        <member name="E:Emergent.Toolbench.SimDebugger.PropertyProxy.PropertyChanged">
            <summary>
            Occurs when the property changes.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.PropertyProxy.Name">
            <summary>
            Gets or sets the property name.
            </summary>
            <value>The property name.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.PropertyProxy.Value">
            <summary>
            Gets or sets the property value.
            </summary>
            <value>The property value.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.PropertyProxy.Live">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Emergent.Toolbench.SimDebugger.PropertyProxy"/> is live.
            </summary>
            <value><c>true</c> if live; otherwise, <c>false</c>.</value>
            <remarks>Properties default to "live" state, but can go "stale" if updates are dropped
            due to message throttling.</remarks>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.PropertyProxy.IsEditable">
            <summary>
            Gets or sets a value indicating whether the property value can be edited.
            </summary>
            <value><c>true</c> if the property value can be edited; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Emergent.Toolbench.SimDebugger.FlatModelDefinedSimEvent">
            <summary>
            A SimEvent defining a model used to create entities in the game.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.FlatModelDefinedSimEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.FlatModelDefinedSimEvent"/> class.
            </summary>
            <remarks>Called to factory the SimEvent when loading from a saved session.</remarks>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.FlatModelDefinedSimEvent.#ctor(System.Double,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.SimDebugger.FlatModelDefinedSimEvent"/> class.
            </summary>
            <param name="timestamp">The timestamp of the event.</param>
            <param name="modelName">The name of the flat model being defined.</param>
            <param name="isMesh">Specifies whether the flat model mixes in Mesh.</param>
            <param name="isActor">Specifies whether the flat model mixes in Actor.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.FlatModelDefinedSimEvent.AddProperty(System.String,System.String)">
            <summary>
            Adds a property to the model definition as a name/value pair.
            </summary>
            <param name="name">The name of the property to add.</param>
            <param name="value">The value of the property to add represented as a string.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.FlatModelDefinedSimEvent.Process(Emergent.Toolbench.SimDebugger.ISimWorldAspect)">
            <summary>
            Applies the event to a SimWorld instance.
            </summary>
            <param name="simWorld">The SimWorld instance.</param>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.FlatModelDefinedSimEvent.ToXml">
            <summary>
            Generates XML for serializing the event.
            </summary>
            <returns>XML describing the event.</returns>
        </member>
        <member name="M:Emergent.Toolbench.SimDebugger.FlatModelDefinedSimEvent.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Loads the properties of the event from XML.
            </summary>
            <param name="element">XML describing the event.</param>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.FlatModelDefinedSimEvent.Description">
            <summary>
            Gets a description of the event.
            </summary>
            <value>A description of the event.</value>
        </member>
        <member name="P:Emergent.Toolbench.SimDebugger.FlatModelDefinedSimEvent.DisplayColor">
            <summary>
            Gets the display color for the event.
            </summary>
            <value>The display color for the event.</value>
        </member>
    </members>
</doc>
