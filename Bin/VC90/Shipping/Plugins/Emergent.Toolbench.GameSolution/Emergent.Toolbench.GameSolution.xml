<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emergent.Toolbench.GameSolution</name>
    </assembly>
    <members>
        <member name="T:Emergent.Toolbench.GameSolution.ExtensionPoints">
            <summary>
            Holds the extension point ids for this assembly.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.GameSolution.ExtensionPoints.ContentItem">
            <summary>
            The ContentItem extension point allows users to create new embedded 
            content that can be added to the solution that do not represent 
            files, but instead things like, servers, consoles or any other 
            object someone would want to group in their game solution as an 
            asset.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.GameSolution.ExtensionPoints.ContentActionMapping">
            <summary>
            The ContentActionMapping allows content types to be mapped to 
            actions.  That way the solution can display options specific to a 
            piece of content in something like a context menu or some other UI.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.GameSolution.ExtensionPoints.ImportLocation">
            <summary>
            The ImportLocation extension point allows 3rd parties to provide Toolbench with 
            locations where the game solution can look for new import libraries for the game 
            solution.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Helpers.FindStartingDirectoryFromItem(Emergent.Toolbench.GameSolution.GameSolutionItem)">
            <summary>
            Find the first parent item's directory, to use as a base for file 
            operations.
            </summary>
            <param name="in_item">Start item, usually the selected item</param>
            <returns>A path to the directory where the item is</returns>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.RecursiveReferenceItem">
            <summary>
            This solution item will reflect the state of another item.  However, it is not possible
            to edit any of the properties of the item.  This item will also show the children items
            of the referenced item, recursively.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.ReferenceItem">
            <summary>
            This solution item will reflect the state of another item. However, it is not possible to
            edit any of the properties of the item.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.GameSolutionItemExtension">
            <summary>
            Base class for GameSolution item extensions.  Use this if your extension is written
            in C# as all methods and properties have a default implementation.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.IGameSolutionItemExtension">
            <summary>
            Base interface for GameSolution item extensions.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionItemExtension.CanBeChild(Emergent.Toolbench.GameSolution.GameSolutionItem,System.Boolean,System.String@)">
            <summary>
            Tests if the item can be a child of this item.  Some item types
            cannot be children of others.
            </summary>
            <param name="possibleChild">The potential child</param>
            <param name="in_bDirectChild">
            True if the child is added to this item.  
            False if it is a grand-child in the sub-hierarchy.
            </param>
            <param name="out_error">A string describing why the parent refused the operation</param>
            <returns>True if the parent accepts</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionItemExtension.GetPersistenceElement">
            <summary>
            Persistance functions.  ItemHost is valid when these functions are called.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionItemExtension.GetDataObject">
            <summary>
            Lets the item extension add drag/drop data on drag events.
            </summary>
            <returns>The object to drag</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionItemExtension.AcceptDrop(System.Windows.IDataObject)">
            <summary>
            Returns the effect of dropping the given object on the GameSolutionItem
            </summary>
            <param name="dataObject">The data object.</param>
            <returns>The drop effect </returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionItemExtension.DoDrop(System.Windows.IDataObject,System.Windows.DragDropEffects)">
            <summary>
            Does the drop.
            </summary>
            <param name="dataObject">The data object.</param>
            <param name="effect">The effect.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionItemExtension.ValidateName(System.String)">
            <summary>
            Validates the name.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.IGameSolutionItemExtension.ItemHost">
            <summary>
            Gets or sets the item host implementing basic functionality.        
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.IGameSolutionItemExtension.VisibleName">
            <summary>
            Gets the name that will be shown in the UI for this item.
            For example, the name of a solution is the name of the file.
            However, the name in the UI item is "Solution 'TheFileName'".
            Override this to modify the string to display or return null for 
            the default behavior, returning the name as-is.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.IGameSolutionItemExtension.ImageCollapsed">
            <summary>
            Gets the image representing this solution item.  Override
            if the icon changes for other reasons than collapsing or expanding.
            Return null for the default behavior.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItemExtension.CanBeChild(Emergent.Toolbench.GameSolution.GameSolutionItem,System.Boolean,System.String@)">
            <summary>
            Tests if the item can be a child of this item.  Some item types
            cannot be children of others.
            </summary>
            <param name="possibleChild">The potential child</param>
            <param name="in_bDirectChild">
            True if the child is added to this item.  
            False if it is a grand-child in the sub-hierarchy.
            </param>
            <param name="out_error">A string describing why the parent refused the operation</param>
            <returns>True if the parent accepts</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItemExtension.GetPersistenceElement">
            <summary>
            Persistance functions.  ItemHost is valid when these functions are called.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItemExtension.GetDataObject">
            <summary>
            Lets the item extension add drag/drop data on drag events.
            </summary>
            <returns>The object to drag</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItemExtension.AcceptDrop(System.Windows.IDataObject)">
            <summary>
            Returns the effect of dropping the given object on the GameSolutionItem
            </summary>
            <param name="dataObject">The data object.</param>
            <returns>The drop effect </returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItemExtension.DoDrop(System.Windows.IDataObject,System.Windows.DragDropEffects)">
            <summary>
            Does the drop.
            </summary>
            <param name="dataObject">The data object.</param>
            <param name="effect">The effect.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItemExtension.ValidateName(System.String)">
            <summary>
            Validates the name.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionItemExtension.ItemHost">
            <summary>
            Gets or sets the item host implementing basic functionality.        
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionItemExtension.VisibleName">
            <summary>
            Gets the name that will be shown in the UI for this item.
            For example, the name of a solution is the name of the file.
            However, the name in the UI item is "Solution 'TheFileName'".
            Override this to modify the string to display or return null for 
            the default behavior, returning the name as-is.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionItemExtension.ImageCollapsed">
            <summary>
            Gets the image representing this solution item.  Override
            if the icon changes for other reasons than collapsing or expanding.
            Return null for the default behavior.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.ReferenceItem.SourcePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when the source properties change.  The properties will be copied to this item.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.ReferenceItem.GetDataObject">
            <summary>
            Lets the item extension add drag/drop data on drag events.
            </summary>
            <returns>The object to drag</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.ReferenceItem.GetReferenceImage(System.Windows.Controls.Image)">
            <summary>
            Gets a "reference" image, based on the baseImage with an overlay over it.
            </summary>
            <param name="baseImage">The base image.</param>
            <returns>The composited reference image.</returns>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ReferenceItem.ItemHost">
            <summary>
            Gets or sets the item host implementing basic functionality.  
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ReferenceItem.Source">
            <summary>
            Gets or sets the source item.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ReferenceItem.VisibleName">
            <summary>
            Gets the name that will be shown in the UI for this item.
            For example, the name of a solution is the name of the file.
            However, the name in the UI item is "Solution 'TheFileName'".
            Override this to modify the string to display or return null for 
            the default behavior, returning the name as-is.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ReferenceItem.ImageCollapsed">
            <summary>
            Gets the image representing this solution item.  Override
            if the icon changes for other reasons than collapsing or expanding.
            Return null for the default behavior.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.RecursiveReferenceItem.SourceChildrenChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the sources' children collection has changed.  The change will be replicated
            on this item.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The 
            <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance 
            containing the event data.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.RecursiveReferenceItem.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.RecursiveReferenceItem.AddSubItems">
            <summary>
            Adds the sub items.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.RecursiveReferenceItem.RemoveItems(Emergent.Toolbench.GameSolution.GameSolutionItem)">
            <summary>
            Removes the items.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.RecursiveReferenceItem.ItemHost">
            <summary>
            Gets or sets the item host implementing basic functionality.  
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.RecursiveReferenceItem.Source">
            <summary>
            Gets or sets the source item.
            </summary>
            <value>The source.</value>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3DialogResult">
            <summary>
            Enumeration for the results possible with the MigrationStep2to3Dialog.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3DialogResult.OK">
            <summary>
            Ok option.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3DialogResult.Cancel">
            <summary>
            Cancel option.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog">
            <summary>
            Interaction logic for MigrationStep2to3Dialog.xaml
            </summary>
            <summary>
            MigrationStep2to3Dialog
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="assetWebRoot">The asset web root path.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.OnPropertyChanged(System.String)">
            <summary>
            Property change notification.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.RetrieveStringFromSettings(System.String)">
            <summary>
            Retrieves a string value for the given setting.
            </summary>
            <param name="settingName"></param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.StartAssetWebMigration">
            <summary>
            Starts the migration process by spawning a process to run ConvertLLIDRefs.exe.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.WriteToBuffer(System.String)">
            <summary>
            Takes a string and appends it to the Output property which is bounded.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.OnDialogLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the dialog is loaded and starts the migration process.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.OnDialogUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the dialog is unloaded.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.OnClosed(System.Object,System.EventArgs)">
            <summary>
            Called when the dialog closes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.OnOKClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when user clicks the OK button. Initiates the closing of the dialog.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.llidConvertProcess_Exited(System.Object,System.EventArgs)">
            <summary>
            Called on thread when the ConvertLLIDRefs.exe has completed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.Process_ErrorDataReceived(System.Object,System.Diagnostics.DataReceivedEventArgs)">
            <summary>
            Called on thread when error data is received from the ConvertLLIDRefs.exe process.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.Process_OutputDataReceived(System.Object,System.Diagnostics.DataReceivedEventArgs)">
            <summary>
            Called on thread when output data is received from the ConvertLLIDRefs.exe process.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.assetCtrlProcess_Exited(System.Object,System.EventArgs)">
            <summary>
            Called on thread when the ConvertLLIDRefs.exe has completed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.AssetWebRoot">
            <summary>
            Gets or sets the asset web root path.
            </summary>
            <value>The asset web root path.</value>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.Result">
            <summary>
            Gets or sets the result of the migration.
            </summary>
            <value>The migration result.</value>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.UserMessage">
            <summary>
            Displays user information concerning the migration process.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.Output">
            <summary>
            Property that contains the redirected output as a string.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.ProgressVisible">
            <summary>
            Property that decides if the Progress-bar is visible or not.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.AssetCtrlProcessExited">
            <summary>
            Property that indicates if the Process has exited.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3Dialog.ConverterProcessExited">
            <summary>
            Property that indicates if the Process has exited.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.CantHaveUsAsChild">
            <summary>
              Looks up a localized string similar to Cannot set this item as its own parent..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.ContentTypeNotAccepted">
            <summary>
              Looks up a localized string similar to Content of type {0} are not allowed in &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.DuplicateFileName">
            <summary>
              Looks up a localized string similar to A file with the name &quot;{0}&quot; already exists in &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.DuplicateItemDefinition">
            <summary>
              Looks up a localized string similar to Solution item type {0} already defined..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.DuplicateItemName">
            <summary>
              Looks up a localized string similar to An item with the name &quot;{0}&quot; already exists in &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.ExtensionLoadError">
            <summary>
              Looks up a localized string similar to Error loading extension for item {0}: {1}.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.FileAccessError">
            <summary>
              Looks up a localized string similar to File &quot;{0}&quot; is not found or its access denied..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.FileFormatError">
            <summary>
              Looks up a localized string similar to File &quot;{0}&quot; is badly formated..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.GameSolutionLoadError">
            <summary>
              Looks up a localized string similar to Error loading file &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.IllegalCharacters">
            <summary>
              Looks up a localized string similar to File name &quot;{0}&quot; contains illegal characters..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.InvalidContentRootSpecified">
            <summary>
              Looks up a localized string similar to The GameSolution had an invalid content root: &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.InvalidGameSolutionVersion">
            <summary>
              Looks up a localized string similar to Invalid version of Solution chunk. Expecting {0} but read {1}..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.InvalidHierarchy">
            <summary>
              Looks up a localized string similar to Wrong Xml element for loading solution hierarchy. Expecting XML element&quot;Hierarchy&quot;..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.ItemPluginNotInstalled">
            <summary>
              Looks up a localized string similar to Unknown solution item {0}. Plugin not installed..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.NoAssetWebRootFound">
            <summary>
              Looks up a localized string similar to The GameSolution did not have a specified content root!.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.NoChildAccepted">
            <summary>
              Looks up a localized string similar to This item doesn&apos;t support any sub-items..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.NotInContentRoot">
            <summary>
              Looks up a localized string similar to Solution item {0} must be stored inside the game solution content root..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.ParentNotFound">
            <summary>
              Looks up a localized string similar to Solution item {0} could not find its parent, ID={1}..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.SettingAssetWebRootLocal">
            <summary>
              Looks up a localized string similar to Attempting to set root to the local path: &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.SolutionSaveError">
            <summary>
              Looks up a localized string similar to Error saving game solution &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.SolutionVisibleName">
            <summary>
              Looks up a localized string similar to Solution &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.UnknownError">
            <summary>
              Looks up a localized string similar to Unknown error..
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Properties.Resources.VersionMismatchError">
            <summary>
              Looks up a localized string similar to Version mismatch {0} expecting version {1}..
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.GameSolutionItem">
            <summary>
            This class is the core for each item in the GameSolution.  It can be
            extended through GameSolutionItemExtension.  
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItem.ValidateName(System.String)">
            <summary>
            Validates the name.  This method will check for duplicates, invalid characters and if 
            the file can be renamed this way.
            </summary>
            <param name="name">The name.</param>
            <returns>See <cref>NameValidationErrors</cref></returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItem.SetParent(Emergent.Toolbench.GameSolution.GameSolutionItem,System.String@)">
            <summary>
            Sets the parent of this item.  This will do the reparenting operations
            if the item was already a child of some other item.  The new parent
            can refuse the child based on the CanBeChild method return value.
            </summary>
            <param name="in_parent">The desired parent</param>
            <returns>True if the operation succeeded, false if the parent refused.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItem.FindPossibleChildren">
            <summary>
            Finds the possible children of this item.  This is based on the "child" and "parent" 
            tags in the plugin.xml declaration of the ContentItem extension points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItem.RestrictPossibleChildren(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Restricts the possible children list by the restrictions of the current item.
            </summary>
            <param name="possibleChildren">The list up to this point.</param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItem.CanBeChild(Emergent.Toolbench.GameSolution.GameSolutionItem,System.Boolean,System.Boolean,Emergent.Toolbench.GameSolution.GameSolutionItemValidateNameOperation,System.String@)">
            <summary>
            Determines whether the given child can be child of this instance.
            </summary>
            <param name="child">The child.</param>
            <param name="bDirectChild">Set to true for the first call.
            Grand-parents items will be called with false.</param>
            <param name="bTypeCheck">if set to <c>true</c> the item type is checked according to 
            the accepted types in the "child" tag of the extension definition.</param>
            <param name="error">The error, if the return value is false.</param>
            <returns>
                <c>true</c> if the item accepts the child; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItem.Delete">
            <summary>
            Removes this item from the hierarchy.  The item should not be reused after this call.        
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItem.Unload">
            <summary>
            Unloads the content associated and all sub-items.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItem.OnContentClosing(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            When the content linked to this item is closed, this removes our references so it can be 
            destroyed properly.  Also, it will close all documents under this item.
            </summary>
            <param name="sender">The content being destroyed.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItem.AddRef">
            <summary>
            Increases the reference count.  This is maintained to know when this item should 
            release the document reference.  We can't entirely rely on the document reference 
            because many scenarios can interfere.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItem.ReleaseRef">
            <summary>
            Decreases the reference count.  If it reaches zero, the solution item is about
            to be destroyed and we must release our document reference.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItem.GetDataObject">
            <summary>
            Lets the item extension add drag/drop data on drag events.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItem.AcceptDrop(System.Windows.IDataObject)">
            <summary>
            Returns the effect of dropping the given object on the GameSolutionItem
            </summary>
            <param name="dataObject">The data object.</param>
            <returns>The drop effect </returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItem.DoDrop(System.Windows.IDataObject,System.Windows.DragDropEffects)">
            <summary>
            Does the drop.
            </summary>
            <param name="dataObject">The data object.</param>
            <param name="effect">The effect.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItem.CreateExtension(System.Boolean)">
            <summary>
            Creates the extension for this item.
            </summary>
            <param name="forceLoad">If set to <c>true</c> the assembly where the extension is 
            implemented is loaded.  If set to <c>false</c>, the extension won't trigger the load
            of the assembly if not already loaded by other means.</param>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionItem.Id">
            <summary>
            Unique identifier of this item.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionItem.Name">
            <summary>
            Name of the item.  If the item represents a file, this will
            return the file name by default.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionItem.VisibleName">
            <summary>
            UI display name for this item.  If the item is not extended, the
            default implementation returns the Name property.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionItem.Parent">
            <summary>
            The parent item.  May be null if this is the root item (the solution)
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionItem.Children">
            <summary>
            List of the child items.  This is the next level in the tree.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionItem.RevisionStatus">
            <summary>
            Gets the revision status of the game solution item.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionItem.ImageCollapsed">
            <summary>
            Image to show when the item is collapsed.  This can be extended.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionItem.ImageExpanded">
            <summary>
            Image to show when the item is expanded.  This can be extended.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionItem.Tags">
            <summary>
            List of tags attached to the item.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionItem.File">
            <summary>
            Gets the location of the file represented by this item.  Null if 
            this item doesn't represent a file.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionItem.Extension">
            <summary>
            Gets the extension instance for this item, if there is one.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionItem.HasError">
            <summary>
            Will be true if the associated file is missing.  This property
            is updated at load time only.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionItem.Descriptor">
            <summary>
            Gets or sets the plugin item descriptor.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionItem.Order">
            <summary>
            Gets or sets the order of this item in the list.
            By default this is set in the descriptor.
            </summary>
            <value>The order.</value>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItemEnumerator.GetEnumerator">
            <summary>
            This enumerator allows the enumeration of all levels of children items
            starting with the current item.  Very usefull for Linq queries.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.GameSolutionDocumentItem">
            <summary>
            Class to represent the solution item.  
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionDocumentItem.VisibleName">
            <summary>
            Enclose the file name with "Solution ' '"
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.ItemLoadedHandler">
            <summary>
            Provided as a callback to do extra work when a solution item is loaded.
            </summary>
            <param name="item">The item that has been loaded.</param>
            <param name="xElem">The XElement from which to continue loading.</param>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.ItemSavingHandler">
            <summary>
            Provided as a callback to save additional data related to each item.
            </summary>
            <param name="item">The item being saved</param>
            <returns>
            An element to insert in the persited XML document, or null if no additional persistance
            is necessary.
            </returns>
        </member>
        <member name="F:Emergent.Toolbench.GameSolution.GameSolutionSerializer.kVersion">
            <summary>
            Version of the persistance.  Increment when the structure of the XML changes.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.GameSolution.GameSolutionSerializer"/> class.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionSerializer.SaveHierarchy(Emergent.Toolbench.ContentService.AbstractDocument,Emergent.Toolbench.GameSolution.ItemSavingHandler)">
            <summary>
            Saves the GameSolutionItem hierarchy, starting with the given document.
            </summary>
            <param name="doc">The root document.</param>
            <param name="itemCallback">The item callback.</param>
            <returns>The XML element in insert in the XML document</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionSerializer.PreserveItemHierarchy(Emergent.Toolbench.GameSolution.GameSolutionItem,System.Collections.Generic.List{Emergent.Toolbench.GameSolution.GameSolutionItem},System.Collections.Generic.HashSet{Emergent.Toolbench.GameSolution.GameSolutionItem})">
            <summary>
            Given an item, this will add that item to a list but will first
            ensure the item's parent is in the list first.  This will recursively
            add any parents that are needed (that is, if an item's parent's parent
            isn't in the list, it will ensure that item is put in).
            </summary>
            <param name="item">Item to add</param>
            <param name="hierList">List to add the item (and its parent) to</param>
            <param name="inserted">A set that stores which items are already in the list
            for performance benefits</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionSerializer.PersistExtension(Emergent.Toolbench.GameSolution.GameSolutionItem)">
            <summary>
            Persists the GameSolutionItem extension, if the item was extended
            </summary>
            <param name="item">The item.</param>
            <returns>
            The element to insert, or null if there is no extension or nothing to save
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionSerializer.PersistExtra(Emergent.Toolbench.GameSolution.GameSolutionItem,Emergent.Toolbench.GameSolution.ItemSavingHandler)">
            <summary>
            Calls the ItemSavingHandler provided so the master document can add extra data with the
            GameSolutionItem.
            </summary>
            <param name="item">The item.</param>
            <param name="itemCallback">The item callback.</param>
            <returns>The element to insert in the file or null if there is nothing to save</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionSerializer.LoadHierarchy(System.Xml.Linq.XElement,Emergent.Toolbench.ContentService.AbstractDocument,Emergent.Toolbench.ContentService.ContentContext,Emergent.Toolbench.GameSolution.ItemLoadedHandler)">
            <summary>
            Loads the GameSolutionItem hierarchy.  In case of error, the load tries to continue for 
            subsequent items.  Check the Success property to verify if there were any errors.
            </summary>
            <param name="xHierarchy">The hierarchy root.</param>
            <param name="content">The master document</param>
            <param name="itemCallback">The item callback.</param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionSerializer.Load(System.Xml.Linq.XElement)">
            <summary>
            Loads the specified hierarchy.  
            </summary>
            <param name="xHierarchy">The xml element to load from.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionSerializer.ReadOneItem(System.Xml.Linq.XElement,Emergent.Toolbench.Collections.ReadOnlyDictionary{System.String,Emergent.Toolbench.GameSolution.ContentItemDescriptor},Emergent.Toolbench.GameSolution.GameSolutionItem@)">
            <summary>
            Reads one item.
            </summary>
            <param name="xItem">The XML element.</param>
            <param name="descriptors">The descriptors collection to help create items.  This should
            be the complete IGameSolutionService.ContentItemDescriptors collection.
            </param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionSerializer.OnDocumentLoaded(Emergent.Toolbench.ContentService.AbstractDocument)">
            <summary>
            Sets the GameSolutionAspect's data of the content we just loaded.  This is necessary
            because during the load process, the content doesn't have its aspects yet.
            </summary>
            <param name="sender">Document instance loaded</param>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionSerializer.Root">
            <summary>
            Gets the root item to persist.
            </summary>
            <value>The root.</value>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionSerializer.Store">
            <summary>
            Gets the store of GameSolutionItem, sorted by ID.
            </summary>
            <value>The store.</value>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionSerializer.Success">
            <summary>
            Indicating whether this <see cref="T:Emergent.Toolbench.GameSolution.GameSolutionSerializer"/> loaded correctly.
            </summary>
            <value><c>true</c> if success; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionSerializer.ItemLoadedCallback">
            <summary>
            Gets or sets the callback used when each item is loaded.
            </summary>
            <value>The callback.</value>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.PersistableItemEnumerator">
            <summary>
            This enumerator allows the enumeration of all levels of children items
            starting with the current item.  It stops at items that are projects which
            will handle their own persistence.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.GameSolutionDocumentFactory">
            <summary>
            The <see cref="T:Emergent.Toolbench.GameSolution.GameSolutionDocumentFactory"/> is used to factory the 
            <see cref="T:Emergent.Toolbench.GameSolution.GameSolutionDocument"/>.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionDocumentFactory.New(Emergent.Toolbench.ContentService.ContentCreationSettings)">
            <summary>
            Creates a new instance of the document.
            </summary>
            <param name="args">The document creation arguments.</param>
            <returns>The document.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionDocumentFactory.Open(Emergent.Toolbench.ContentService.ContentCreationSettings)">
            <summary>
            Opens an existing solution document from disk.
            </summary>
            <param name="args">Additional configuration data used to create
            the document.</param>
            <returns>
            The document.  Null if there was an unrecoverable error.
            </returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionDocumentFactory.Save(Emergent.Toolbench.ContentService.AbstractDocument)">
            <summary>
            Saves the solution document.
            </summary>
            <param name="document">The document to save</param>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.ImportLibrary">
            <summary>
            Helper class for handling GSLIB libraries.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.GameSolution.ImportLibrary.m_includes">
            <summary>
            A collection of search patterns for the files to import.
            key = directory
            value = pattern
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.ImportLibrary.#ctor">
            <summary>
            Simple constructor
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.ImportLibrary.CreateVersionedName(System.String,System.String)">
            <summary>
            Helper function for creating a versioned name
            </summary>
            <param name="name">Friendly name or unique id</param>
            <param name="libraryVersion">Library version</param>
            <returns>Versioned name of the format: name + ", version:" + libraryVersion</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.ImportLibrary.Initialize(System.String)">
            <summary>
            Initialize the integration by reading the XML GSLIB file
            </summary>
            <param name="importLibraryPath">File to read</param>
            <returns>Determine whether or not the file opened successfully</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.ImportLibrary.DoAnyLibraryIncludesAlreadyExist">
            <summary>
            Helper to determine if any of the includes already exist for the active game solution.
            </summary>
            <returns>True if already exists, false if not.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.ImportLibrary.DoAnyLibraryReferencesAlreadyExist(Emergent.Toolbench.GameSolution.GameSolutionDocument)">
            <summary>
            Helper to determine if any of the references already exist for the active game solution.
            </summary>
            <param name="solution"></param>
            <returns>True if already exists, false if not.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.ImportLibrary.Import(Emergent.Toolbench.GameSolution.GameSolutionDocument,System.Boolean@)">
            <summary>
            Import a given ImportLibrary into the game solution.
            </summary>
            <param name="solution">The game solution to import into.</param>
            <param name="needAssetWebRescan">Determine whether or not an asset web rescan is recommended.</param>
            <returns>Whether or not the import was successful.</returns>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ImportLibrary.Id">
            <summary>
            Unique identifier for the GSLIB library
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ImportLibrary.Name">
            <summary>
            Friendly name for the GSLIB library
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ImportLibrary.VersionedName">
            <summary>
            Versioned friendly name for the GSLIB library
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ImportLibrary.VersionedId">
            <summary>
            Versioned unique identifier for the GSLIB library
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ImportLibrary.Provider">
            <summary>
            Source company for the library
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ImportLibrary.LibraryVersion">
            <summary>
            Version of the library
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ImportLibrary.DefaultLibrary">
            <summary>
            Determine if this library is meant to be checked as a default
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ImportLibrary.Includes">
            <summary>
            Directories to be included by the library.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ImportLibrary.References">
            <summary>
            What references need to be included when importing this library.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ImportLibrary.AssetWebConfigs">
            <summary>
            What asset web config files need to be included when importing this library.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ImportLibrary.PathToImportLibrary">
            <summary>
            String to point to the library
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ImportLibrary.Dependencies">
            <summary>
            Retrieves a list of ImportLibrary IDs that this library depends on.
            </summary>
            <remarks>
            Dependencies are NOT enforced during the import process.
            </remarks>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.ImportLibrary.LibraryInclude">
            <summary>
            Helper class for storing include information
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.ImportLibrary.LibraryInclude.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Basic constructor
            </summary>
            <param name="directory">Directory to include</param>
            <param name="pattern">File pattern to include</param>
            <param name="recursive">Recursively include files</param>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ImportLibrary.LibraryInclude.Directory">
            <summary>
            Directory to include
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ImportLibrary.LibraryInclude.Filter">
            <summary>
            File filter to use when including
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ImportLibrary.LibraryInclude.Recursive">
            <summary>
            Should recursively include files
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.ImportLibrary.LibraryReference">
            <summary>
            Helper class for managing library references
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.ImportLibrary.LibraryReference.#ctor(System.String)">
            <summary>
            Basic constructor
            </summary>
            <param name="relativePath">Relative path from GSLIB to file
            to reference</param>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ImportLibrary.LibraryReference.RelativePath">
            <summary>
            Relative path from GSLIB to file to reference
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.ContentItemDescriptor">
            <summary>
            The content item descriptor wraps the information contained in the 
            plug-in manifests for extension points that extend the content item 
            extension point.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.ContentItemDescriptor.#ctor">
            <summary>
            Constructs a <see cref="T:Emergent.Toolbench.GameSolution.ContentItemDescriptor"/>.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.ContentItemDescriptor.Configure(Emergent.Toolbench.IExtension)">
            <summary>
            Configures the descriptor with the correct data based on the extension point.
            </summary>
            <param name="extension">The extension to configure this descriptor with.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.ContentItemDescriptor.Configure(Emergent.Toolbench.ContentService.IContentFactoryDescriptor)">
            <summary>
            Configures this item descriptor with information from the content service.  This
            is done for all known content types that don't have a specialized node defined with
            an explicit ContentItem extension point.
            </summary>
            <param name="in_desc">Content description.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.ContentItemDescriptor.SetImageFromDescriptor(Emergent.Toolbench.ContentService.IContentFactoryDescriptor)">
            <summary>
            Sets the ImageCollapsed property from the information defined in the Content Service.
            </summary>
            <param name="in_desc"></param>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ContentItemDescriptor.Id">
            <summary>
            Gets the id for the content item descriptor.  This id is unique.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ContentItemDescriptor.Name">
            <summary>
            Gets the name the descriptor uses.  This should be used when 
            displaying the content item in a list.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ContentItemDescriptor.ContentType">
            <summary>
            Gets the content type that this content item is mapped to.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ContentItemDescriptor.Description">
            <summary>
            Gets the description for the content item.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ContentItemDescriptor.Class">
            <summary>
            Extension class, if specified.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ContentItemDescriptor.ImageCollapsed">
            <summary>
            Image to represent this item in the collapsed state
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ContentItemDescriptor.ImageExpanded">
            <summary>
            Image to represent this item in the expanded state
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ContentItemDescriptor.ChildTypes">
            <summary>
            Returns the supported types.  Intentionally left writable so
            extensions can add their types to existing content items.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ContentItemDescriptor.ParentTypes">
            <summary>
            Return the allowed parent types for this item.
            </summary>
            <value>The parent types.</value>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ContentItemDescriptor.UsesFile">
            <summary>
            Returns if the item is tied with a file on disk.  This implies
            that the name of the item is the file name.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ContentItemDescriptor.Persistence">
            <summary>
            This property indicates if the item manages its own persistence for its sub-hierarchy.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ContentItemDescriptor.AlwaysOpen">
            <summary>
            Tells if this item should be automatically opened when its parent is loaded.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ContentItemDescriptor.NameOnly">
            <summary>
            For file items, this property tells if we display the name of the file with or 
            without the file extension.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ContentItemDescriptor.Classifier">
            <summary>
            Gets or sets a value indicating whether this item is a classifier (like a folder)
            </summary>
            <value><c>true</c> if classifier; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ContentItemDescriptor.Order">
            <summary>
            Gets or sets the order of appearance of this item in the Solution Explorer.
            </summary>
            <value>The order.</value>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.ContentItemDescriptor.ElementData">
            <summary>
            Gets the original extension point data.  Might be null if this descriptor was created
            by default from a IContentFactoryDescriptor.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.ContentItemDescriptor.ContentTypePermission">
            <summary>
            This class is used to return the allowed parent and child types.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.ContentItemDescriptor.PersistModel">
            <summary>
            This enum is used for the property Persistence.  It indicates how to handle the 
            persistence of this type of item when persisting the solution hierarchy through 
            GameSolutionSerializer.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.GameSolution.ContentItemDescriptor.PersistModel.Normal">
            <summary>
            Persistence is handled normally.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.GameSolution.ContentItemDescriptor.PersistModel.External">
            <summary>
            Persistence of this item and all sub-items is handled in a separate file.
            Example: projects
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.GameSolution.ContentItemDescriptor.PersistModel.None">
            <summary>
            No persistence of this item.  This is used for runtime generated items.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.Migration.MigrationStep4to10">
            <summary>
            This class migrates the game solution from version 4 to version 10, which triggers the
            Integration Wizard for updating shared model libraries. Jumping to version 10 allows for
            potential patch releases between Gamebryo LightSpeed 3.1.1 and 3.2.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.ActionDescriptor">
            <summary>
            This class wraps all the information about an action supported on a GameSolutionItem.  This
            is described in the ContentActionMapping extension.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.UnknownFileItem">
            <summary>
            The UnknownFileItem class is a solution item which can contain children.
            It maps directly to a folder on disk, relative to the solution's path.
            All children of this node get moved in the disk folder.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.GameSolutionItemValidationRule">
            <summary>
            Validation Rule for solution items that are files
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItemValidationRule.#ctor(Emergent.Toolbench.GameSolution.GameSolutionItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Emergent.Toolbench.GameSolution.GameSolutionItemValidationRule"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionItemValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            When overridden in a derived class, performs validation checks on a value.
            </summary>
            <param name="value">The value from the binding target to check.</param>
            <param name="cultureInfo">The culture to use in this rule.</param>
            <returns>
            A <see cref="T:System.Windows.Controls.ValidationResult"/> object.
            </returns>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.GameSolutionService">
            <summary>
            The solution service keeps track of the active solution currently
            opened by Toolbench.  It also stores information about the implemented
            extension points.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.IGameSolutionService">
            <summary>
            The solution service interface exposed to outside sources.  This 
            interface exposes the basic functionality of the solution service.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionService.OpenBrace">
            <summary>
            Opens the brace to wrap complex solution actions.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionService.CloseBrace">
            <summary>
            Closes the brace that wraps complex solution actions.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionService.FindItemActions(System.String)">
            <summary>
            Finds all of the actions that are associated with the provided 
            content type id.
            </summary>
            <param name="itemId">The content type.</param>
            <returns>A collection of actions.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionService.CreateItem(System.String)">
            <summary>
            Create an item of the given type.
            </summary>
            <param name="itemId">Content type of the new item</param>
            <returns>The new item</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionService.CreateItemFromFile(System.String)">
            <summary>
            Create an item attached to the given file
            </summary>
            <param name="filePath">Path of the file</param>
            <returns>The new item</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionService.CreateItemBeside(System.String,Emergent.Toolbench.ContentService.AbstractContent,System.String,System.Boolean)">
            <summary>
            Creates a new item besides the given content, in the solution tree.
            </summary>
            <param name="contentId">The content type.</param>
            <param name="sibling">The sibling.</param>
            <param name="name">The default name of the new item.</param>
            <returns>A new item, or null if an error occurred.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionService.CreateItemBeside(System.String,Emergent.Toolbench.GameSolution.GameSolutionItem,System.String,System.Boolean)">
            <summary>
            Creates a new item besides the given item, in the solution tree.
            </summary>
            <param name="contentId">The content type.</param>
            <param name="sibling">The sibling.</param>
            <param name="name">The default name of the new item.</param>
            <returns>A new item, or null if an error occurred.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionService.FindImportLibraries">
            <summary>
            Finds all the libraries that can be imported into a game solution.
            </summary>
            <returns>The list of importable libraries.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionService.ClearReferenceFixupList">
            <summary>
            Clears the internal list of automatic reference fixups.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionService.ClearReferenceFixupSource(System.String)">
            <summary>
            Removes any automatic reference fixup for a specific file.
            </summary>
            <param name="sourcePath">File to be removed.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionService.ClearReferenceFixupDestination(System.String)">
            <summary>
            Removes all automatic reference fixups pointing to a specific file.
            </summary>
            <param name="destinationPath">File to be removed.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionService.GetReferenceFixup(System.String)">
            <summary>
            Searches for an automatic reference fixup for a specific "missing" file.
            </summary>
            <param name="sourcePath">Unavailable file to search for.</param>
            <returns>A new destination file, or null if one was not found.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionService.SetReferenceFixup(System.String,System.String)">
            <summary>
            Stores a reference fixup for later use by <seealso cref="M:Emergent.Toolbench.GameSolution.IGameSolutionService.GetReferenceFixup(System.String)"/>.
            </summary>
            <param name="sourcePath">Missing file to redirect.</param>
            <param name="destinationPath">Redirect destination for sourcePath.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionService.UpdateWithFixups">
            <summary>
            Using any Fixups that have been registered, update the existing active 
            game content.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.IGameSolutionService.ActiveDocument">
            <summary>
            Gets or sets the active document for the solution service.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.IGameSolutionService.BusyBrace">
            <summary>
            Gets or sets a value indicating whether there is a complex action in progress. 
            For example, an action that opens content and creates multiple GameSolutionItems at the 
            same time.  The GameSolution hierarchy is therefore temporary when this is set.
            </summary>
            <value><c>true</c> if busy; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.IGameSolutionService.ContentItemDescriptors">
            <summary>
            Gets the content item descriptors that were found by scanning 
            plug-in manifests.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.IGameSolutionService.AskOpenSolutionHook">
            <summary>
            Sets the hook to ask the user if he wants to open the solution in the same directory.
            </summary>
            <value>The hook.</value>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.IGameSolutionService.ContentRoot">
            <summary>
            Gets the current content root for asset webs and game solution content. Returns the
            location as an absolute path.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Emergent.Toolbench.GameSolution.GameSolutionService"/>.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.Initialize">
            <summary>
            Initializes the service.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.Dispose">
            <summary>
            Disposes the service.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.LoadContentItemExtensions">
            <summary>
            Loads the content item extensions.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.LoadContentActionMappingExtensions">
            <summary>
            Loads the content to action mapping extensions.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.LoadImportLocationExtensions">
            <summary>
            Loads all import location extensions so that 3rd parties can provide plugins that tell
            Toolbench where it can locate libraries for initializing a game solution with.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.OpenBrace">
            <summary>
            Opens the brace to wrap complex solution actions.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.CloseBrace">
            <summary>
            Closes the brace that wraps complex solution actions.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.FindItemActions(System.String)">
            <summary>
            Finds all of the actions that are associated with the provided 
            content type id.
            </summary>
            <param name="itemId">The content type.</param>
            <returns>A collection of action ids.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.CreateItem(System.String)">
            <summary>
            Create an item of the given type.
            </summary>
            <param name="itemId">Content type of the new item</param>
            <returns>The new item</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.CreateItemFromFile(System.String)">
            <summary>
            Create an item attached to the given file
            </summary>
            <param name="filePath">Path of the file</param>
            <returns>The new Item</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.CreateItemBeside(System.String,Emergent.Toolbench.ContentService.AbstractContent,System.String,System.Boolean)">
            <summary>
            Creates a new content and item besides the given item, in the solution tree.
            </summary>
            <param name="contentId">The content type.</param>
            <param name="sibling">The sibling.</param>
            <param name="name">The default name of the new item.</param>
            <param name="activate">If set to <c>true</c> it sets the Content as 
            the new ActiveContent.  If false, the item is created but the content is closed
            after creation.</param>
            <returns>A new item, or null if an error occured.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.CreateItemBeside(System.String,Emergent.Toolbench.GameSolution.GameSolutionItem,System.String,System.Boolean)">
            <summary>
            Creates a new content and item besides the given item, in the solution tree.
            </summary>
            <param name="contentId">The content type.</param>
            <param name="sibling">The sibling.</param>
            <param name="name">The default name of the new item.</param>
            <param name="activate">If set to <c>true</c> it sets the Content as 
            the new ActiveContent.  If false, the item is created but the content is closed
            after creation.</param>
            <returns>A new item, or null if an error occured.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.FindImportLibraries">
            <summary>
            Finds all the libraries that can be imported into a game solution.
            </summary>
            <returns>The list of importable libraries.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.ClearReferenceFixupList">
            <summary>
            Clears the internal list of automatic reference fixups.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.ClearReferenceFixupSource(System.String)">
            <summary>
            Removes any automatic reference fixup for a specific file.
            </summary>
            <param name="sourcePath">File to be removed.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.ClearReferenceFixupDestination(System.String)">
            <summary>
            Removes all automatic reference fixups pointing to a specific file.
            </summary>
            <param name="destinationPath">File to be removed.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.GetReferenceFixup(System.String)">
            <summary>
            Searches for an automatic reference fixup for a specific "missing" file.
            </summary>
            <param name="sourcePath">Unavailable file to search for.</param>
            <returns>A new destination file, or null if one was not found.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.SetReferenceFixup(System.String,System.String)">
            <summary>
            Stores a reference fixup for later use by <seealso cref="M:Emergent.Toolbench.GameSolution.GameSolutionService.GetReferenceFixup(System.String)"/>.
            </summary>
            <param name="sourcePath">Missing file to redirect.</param>
            <param name="destinationPath">Redirect destination for sourcePath.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.UpdateWithFixups">
            <summary>
            Using any Fixups that have been registered, update the existing active 
            game content.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.OnContentOpened(System.Object,Emergent.Toolbench.ContentService.ContentEventArgs)">
            <summary>
            Called when a piece of content is opened.  This sets the active
            document when it sees that a <see cref="T:Emergent.Toolbench.GameSolution.GameSolutionDocument"/> is
            opened.
            </summary>
            <param name="sender">The opened content.</param>
            <param name="e">Event arguments including content context.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.OnContentClosed(System.Object,Emergent.Toolbench.ContentService.ContentEventArgs)">
            <summary>
            Called when a piece of content is closed.  This sets the active
            document to <value>null</value> if the content is the active document.
            </summary>
            <param name="sender">The content closing.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.CheckSolutionRequirement(Emergent.Toolbench.GameSolution.GameSolutionItem)">
            <summary>
            Checks if the new item needs to be in a solution.
            Throws ContentRejectedException if no solution
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.IsValidAssetWeb(System.String)">
            <summary>
            For a valid asset-web, we assume that it is a directory that contains a sub-directory
            named "asset-web-config".
            </summary>
            <param name="assetWebPath"></param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.FindAssetWebRoot(System.String)">
            <summary>
            Function simply traverses upward in path looking for asset-web-config directory and
            if found, returns a relative path to it.
            </summary>
            <param name="startLocation"></param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.ShutdownAssetControllerProcesses">
            <summary>
            Shutdown the AssetController process that was initiated by Toolbench.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.RetrieveAssetControllerConnection">
            <summary>
            Retrieves the connection "Emergent Asset Controller" from the connection service.
            If the  the "Emergent Asset Controller" connection does not exist, one will be created
            and added to the list of connection before returning it to the caller.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.ConstructPathToAssetControllerExe">
            <summary>
            Retrieves the path to the AssetController executable based on current settings.
            </summary>
            <returns>Path to the AssetController executable.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.LaunchAssetController(System.String,System.String)">
            <summary>
            Launches the AssetController Process using the specified host, port, and assetwebpath. 
            This method will attempt to shutdown any existing running AssetController processes.
            </summary>
            <param name="host"></param>
            <param name="port"></param>
            <param name="assetWebPath"></param>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionService.RetrieveStringFromSettings(System.String)">
            <summary>
            Retrieves a string value for the given setting
            </summary>
            <param name="settingName"></param>
            <returns></returns>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionService.Name">
            <summary>
            Name of the service.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionService.ActiveDocument">
            <summary>
            Gets or sets the active document for the solution service.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionService.ContentRoot">
            <summary>
            Gets the current content root for asset webs and game solution content. Returns the
            location as an absolute path.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionService.BusyBrace">
            <summary>
            Gets a value indicating whether there is a complex action in progress.
            For example, an action that opens content and creates multiple GameSolutionItems at the
            same time.  The GameSolution hierarchy is therefore temporary when this is set.
            </summary>
            <value><c>true</c> if busy; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionService.ContentItemDescriptors">
            <summary>
            Gets the content item descriptors that were found by scanning 
            plug-in manifests.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionService.IsConnectedToAssetController">
            <summary>
            Determine if solution is connected to asset-server
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.GameSolutionMenuItemFactory">
            <summary>
            Helper class that generates context menu items based on actions and the selected item
            in the game solution view.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionMenuItemFactory.CreateMenuItem(System.String,System.String,Emergent.Toolbench.GameSolution.GameSolutionItem)">
            <summary>
            Creates a menu item associated with a specific action.
            </summary>
            <param name="action">The action to execute when the item is clicked.</param>
            <param name="command">The command which is passed into the action.</param>
            <param name="item">The GameSolutionItem that is the target of the action.</param>
            <returns>The menu item.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionMenuItemFactory.CreateMenuItem(System.String,Emergent.Toolbench.GameSolution.GameSolutionItem)">
            <summary>
            Creates a menu item associated with a specific action.
            </summary>
            <param name="action">The action to execute when the item is clicked.</param>
            <param name="item">The GameSolutionItem that is the target of the action.</param>
            <returns>The menu item.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionMenuItemFactory.CreateFromStringArray(System.String[],Emergent.Toolbench.GameSolution.GameSolutionItem)">
            <summary>
            Creates the menu items given an array of action names.
            To use commands, put the command in the string with the action name separated by
            a space.
            </summary>
            <param name="descs">The array of actions.</param>
            <param name="item">The game solution item.</param>
            <returns>The menu items.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionMenuItemFactory.OnClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event handler for when a context menu item generated by this factory is clicked.
            This executes the action associated with the menu item.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.GameSolutionMenuItemFactory.GameSolutionActionWrapper">
            <summary>
            Wrapper class around an action which will be used to execute the action when
            a context menu item is clicked.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionMenuItemFactory.GameSolutionActionWrapper.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionMenuItemFactory.GameSolutionActionWrapper.#ctor(System.String,System.String,Emergent.Toolbench.GameSolution.GameSolutionItem,System.Windows.Controls.MenuItem)">
            <summary>
            Constructor which takes the action, game solution item, and sender
            that this wrapper wraps.
            </summary>
            <param name="actionName">The name of an action to execute.</param>
            <param name="command">The command being used with the action.</param>
            <param name="gameSolutionItem">The game solution item.</param>
            <param name="sender">The sender.</param>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionMenuItemFactory.GameSolutionActionWrapper.Context">
            <summary>
            Gets the context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionMenuItemFactory.GameSolutionActionWrapper.Handler">
            <summary>
            Gets the handler.
            </summary>
            <value>The handler.</value>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionMenuItemFactory.GameSolutionActionWrapper.Action">
            <summary>
            Gets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.GameSolutionDocument">
            <summary>
            The <see cref="T:Emergent.Toolbench.GameSolution.GameSolutionDocument"/> represents the document that is 
            stored on the disk for the game solution.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionDocument.#ctor">
            <summary>
            Constructs the <see cref="T:Emergent.Toolbench.GameSolution.GameSolutionDocument"/>
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionDocument.RegisterTags(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Registers a set of tags with the solution.
            </summary>
            <param name="tags"></param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionDocument.GetAllTags">
            <summary>
            Gets all the tags in the solution tag cache.
            </summary>
            <returns>The tags in the solution.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionDocument.GetItem(System.Guid)">
            <summary>
            Get a particular item from the store
            </summary>
            <param name="in_id">Id of the item to retrieve</param>
            <returns>Retrieved item, or null.</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionDocument.FindItemFromFile(System.Uri)">
            <summary>
            Search in all the items in the tree for the item linked with 
            a specific file
            </summary>
            <param name="in_fullPath">File path to look for.</param>
            <returns>The item representing the file, or null if not found</returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionDocument.ConnectToChildren">
            <summary>
            Connects an event to get all the new items under the project.  These items
            are available through GetItem or by navigating the hierarchy through the Root 
            property.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionDocument.OnCreated">
            <summary>
            Called when the game solution is created for the first time.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionDocument.OnClosing">
            <summary>
            Called when the game solution is closing.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionDocument.New">
            <summary>
            Called when a new document is created.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionDocument.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionDocument.Load(Emergent.Toolbench.ContentService.ContentContext)">
            <summary>
            Loads this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionDocument.ItemLoaded(Emergent.Toolbench.GameSolution.GameSolutionItem,System.Xml.Linq.XElement)">
            <summary>
            Callback called when an item is loaded.  It will connect each item in order to receive
            notifications when new items are added or removed.
            </summary>
            <param name="item">Newly loaded item</param>
            <param name="reader">Unused parameter</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionDocument.OnDocumentLoaded">
            <summary>
            When the ContentService has completely finished loading this document, fire
            the "Root" change notification so to UI updates. This method also passes the
            new content root to the asset controller.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionDocument.OnOpenError(System.Object,Emergent.Toolbench.ContentService.ContentOpenErrorEventArgs)">
            <summary>
            Called when there is an error while opening content.
            </summary>
            <param name="location">The location.</param>
            <param name="ex">The exception.</param>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionDocument.Items">
            <summary>
            Enumerates all the solution items in the solution.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.GameSolutionDocument.SelectedItem">
            <summary>
            Gets the currently selected item in the solution.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.Migration.MigrationStep3to4">
            <summary>
            This class migrates the game solution from version 3 to version 4, which involves
            updating the standard model library for terrain and asset web tagger configurations for
            the solution.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.Migration.MigrationStep0to1">
            <summary>
            This class migrates the game solution to version 1, which involves adding version tracking.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep0to1.#ctor">
            <summary>
            Constructs a game solution migration step.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep0to1.Migrate(Emergent.Toolbench.MigrationService.MigrationDocument)">
            <summary>
            Migrates the specified document from version 0 to version 1
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3">
            <summary>
            This class migrates the game solution from version 2 to version 3, which involves
            converting and fixing up logical asset ID references for the entire asset web.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3.#ctor">
            <summary>
            Constructs a game solution migration step.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep2to3.Migrate(Emergent.Toolbench.MigrationService.MigrationDocument)">
            <summary>
            Migrates the specified document from version 2 to version 3.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.Migration.MigrationStep1to2">
            <summary>
            This class migrates the game solution from version 1 to version 2, which involves changing
            "workspace" terminology to "game solution".
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep1to2.#ctor">
            <summary>
            Constructs a game solution migration step.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Migration.MigrationStep1to2.Migrate(Emergent.Toolbench.MigrationService.MigrationDocument)">
            <summary>
            Migrates the specified document from version 1 to version 2
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.GameSolutionAspect.OnContentDisconnected">
            <summary>
            Called when the content is disconnected.  Will unload the item in the solution.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.Plugin">
            <summary>
            The <see cref="T:Emergent.Toolbench.GameSolution.Plugin"/> class is created when the plug-in is first
            initialized.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.Plugin.Start">
            <summary>
            This method is called when the plug-in is started.  The descriptor
            for this plug-in is also passed, in-case the plug-in wants to 
            cache it.
            </summary>
            <param name="descriptor">The plug-in descriptor.</param>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Plugin.StaticDescriptor">
            <summary>
            Retrieves the static IPluginDescriptor
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.Plugin.StaticResources">
            <summary>
            Retrieves the static IPluginResources
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.GameSolution.IGameSolutionAction">
            <summary>
            Implement this interface on actions that act on GameSolutionItems.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.GameSolution.IGameSolutionAction.CanExecute(Emergent.Toolbench.Actions.ExecutionContext)">
            <summary>
            Determines whether this action can execute in the specified context.
            </summary>
            <param name="context">The execution context.</param>
            <returns>True if the action can execute.</returns>
        </member>
        <member name="P:Emergent.Toolbench.GameSolution.IGameSolutionAction.Item">
            <summary>
            Gets or sets the item on which this action was triggered.
            </summary>
            <value>The item.</value>
        </member>
    </members>
</doc>
