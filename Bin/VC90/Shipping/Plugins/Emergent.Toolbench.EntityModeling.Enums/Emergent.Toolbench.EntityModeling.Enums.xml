<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emergent.Toolbench.EntityModeling.Enums</name>
    </assembly>
    <members>
        <member name="T:Emergent.Toolbench.EntityModeling.EnumsExporter">
            <summary>
            IRunnable based class that supports exporting enum files for Behavior, FlatModel, and
            Property IDs via command line.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.EnumsExporter.Run(Emergent.Toolbench.Arguments)">
             <summary>
             Exports enum files for Behavior, FlatModel, and Property IDs via command line.
             </summary>
             <param name="args">
             The command arguments. The command line args supports the following syntaxs:
            
                 -solution [solutionPath] -export [projName] [outDirectory]
                 -solution [solutionPath] -exportall [outDirectory]
            
             The solutionPath is the full path to the .gsl file.
             The projName is the emtproj that exists in the specified solution. Using this syntax,
             all emtprojs can be exported by specifying the .gsl file name instead of the emtproj
             file name.
             outDirectory is the location where the enum files will be exported to. If not 
             specified, the current working directory will be used.
             </param>
             <returns>0 on successful export, else -1.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.EnumsExporter.OnExternalCommand(Emergent.Toolbench.Arguments)">
            <summary>
            Satisfies the OnExternalCommand interface, but does nothing.
            </summary>
            <param name="args">Arguments passed with the command.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.EnumsExporter.DisplaySyntax">
            <summary>
            Displays the correct syntax for command line arguments
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.EnumsExporter.OpenGameSolution(System.String)">
            <summary>
            Takes a path to a GameSolution, ensures that it exists, and opens it.
            </summary>
            <param name="solutionPath">The path of the game solution to open.</param>
            <returns>Returns false if not successful.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.EnumsExporter.RetrieveContentToExport(System.String,System.Collections.Generic.Dictionary{System.String,System.Uri})">
            <summary>
            Retrieves a dictionary of AbstractDocument objects whose keys are the various project
            names. If a projectName ending in .gsl is passed in, all .emtproj's will be added.
            </summary>
            <param name="projectName">A content file that indicates the scope of the export.</param>
            <param name="contentDocMap">Storage for the generated list of items to export.</param>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.EnumsExporter.ExportToEnum(Emergent.Toolbench.ContentService.AbstractContent,System.String)">
            <summary>
            Takes a ModelingProjectDocument and performs an ExportEnumsAction on it.
            </summary>
            <param name="content">The ModelingProjectDocument.</param>
            <param name="dirPath">The export directory path.</param>
            <returns>0 on success, -1 on failure.</returns>
        </member>
        <member name="T:Emergent.Toolbench.EntityModeling.ExportEnumsAction">
            <summary>
            Action that exports enum files for Behavior, FlatModel, and Property IDs via command line.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.ExportEnumsAction.ExportCurrent">
            <summary>
            Context command for selecting current emtproj
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.ExportEnumsAction.ExportAll">
            <summary>
            Context command for selecting the entire solution
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.EntityModeling.ExportEnumsAction.OutputEnumsPath">
            <summary>
            Override of the default project-based export path.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.ExportEnumsAction.Execute(Emergent.Toolbench.Actions.ExecutionContext,Emergent.Toolbench.Actions.ExecutionStyle)">
            <summary>
            Execute method for the ExportsEnumsAction.
            </summary>
            <param name="context">ExecutionContext for the action.</param>
            <param name="style">ExecutionStyle for the action.</param>
            <returns>The execution result.</returns>
        </member>
        <member name="M:Emergent.Toolbench.EntityModeling.ExportEnumsAction.GetEnumExportPath(Emergent.Toolbench.ContentService.AbstractContent)">
            <summary>
            Retrivieves the enum export path. If content is not a ModelingProjectDocument,
            this function will fail.
            </summary>
            <param name="content"></param>
            <returns>returns null upon failure, otherwise a string to the directory path.</returns>
        </member>
    </members>
</doc>
