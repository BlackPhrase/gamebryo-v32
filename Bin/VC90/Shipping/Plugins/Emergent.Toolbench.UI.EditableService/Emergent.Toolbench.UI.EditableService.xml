<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emergent.Toolbench.UI.EditableService</name>
    </assembly>
    <members>
        <member name="T:Emergent.Toolbench.UI.EditableService.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.UI.EditableService.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.UI.EditableService.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.UI.EditableService.EditableAdapterService">
            <summary>
            The <see cref="T:Emergent.Toolbench.UI.EditableService.EditableAdapterService"/> maintains a mapping of 
            controls to adapters so that a matching adapter can be found for a 
            control at runtime.  The mapping is composed of the located extensions
            found for the <see cref="F:Emergent.Toolbench.UI.EditableService.ExtensionPoints.EditableAdapter"/> extension
            point.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.UI.EditableService.IEditableAdapterService">
            <summary>
            The <see cref="T:Emergent.Toolbench.UI.EditableService.IEditableAdapterService"/> interface allows plug-ins
            to request from the adapter service any adapters that exist for
            a particular control type.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.UI.EditableService.IEditableAdapterService.FindAdapter(System.Type)">
            <summary>
            This will find an adapter matching the provided control type.
            </summary>
            <param name="controlType">The control type to find the adapter for.
            </param>
            <returns>The adapter if one was found; otherwise, 
            <value>null</value>.</returns>
        </member>
        <member name="M:Emergent.Toolbench.UI.EditableService.EditableAdapterService.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Emergent.Toolbench.UI.EditableService.EditableAdapterService"/>.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.UI.EditableService.EditableAdapterService.FindAdapter(System.Type)">
            <summary>
            This will find an adapter matching the provided control type.
            </summary>
            <param name="controlType">The control type to find the adapter for.
            </param>
            <returns>The adapter if one was found; otherwise, 
            <value>null</value>.</returns>
        </member>
        <member name="M:Emergent.Toolbench.UI.EditableService.EditableAdapterService.LoadAdapter(Emergent.Toolbench.UI.EditableService.EditableAdapterService.AdapterEntry)">
            <summary>
            Loads a new instance of the adapter or returns the cached version.
            </summary>
            <param name="adapterEntry">The adapter to create.</param>
            <returns>The loaded adapter.</returns>
        </member>
        <member name="M:Emergent.Toolbench.UI.EditableService.EditableAdapterService.Initialize">
            <summary>
            Initializes the adapter service, and generates the control to 
            adapter mapping based on the found extensions.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.UI.EditableService.EditableAdapterService.Dispose">
            <summary>
            Disposes the service.
            </summary>
        </member>
        <member name="P:Emergent.Toolbench.UI.EditableService.EditableAdapterService.Name">
            <summary>
            Gets the name of the adapter service.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.UI.EditableService.EditableAdapterService.AdapterEntry">
            <summary>
            A small container class for holding information about the adapter
            entry.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.UI.EditableService.EditableAdapterService.AdapterEntry.ClassName">
            <summary>
            The class name for the adapter.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.UI.EditableService.EditableAdapterService.AdapterEntry.ControlClass">
            <summary>
            The class of the control.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.UI.EditableService.EditableAdapterService.AdapterEntry.ControlNameSpace">
            <summary>
            The namespace for the class of the control.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.UI.EditableService.EditableAdapterService.AdapterEntry.Plugin">
            <summary>
            The plug-in the adapter extension came from.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.UI.EditableService.IEditableAdapter">
            <summary>
            The <see cref="T:Emergent.Toolbench.UI.EditableService.IEditableAdapter"/> provides a method of attaching
            edit menu functionality to an existing control.  By implementing this
            class you can handle edit operations and expose whether or not the
            control can perform that operation in its given state.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.UI.EditableService.IEditableAdapter.CanPerform(Emergent.Toolbench.UI.EditableService.EditOperation,System.Windows.Forms.Control)">
            <summary>
            Returns a value indicating if the control can currently perform
            the operation.
            </summary>
            <param name="op">The operation that might be performed.</param>
            <param name="control">The control to perform it on.</param>
            <returns><c>true</c> if the control can perform the operation;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Emergent.Toolbench.UI.EditableService.IEditableAdapter.Perform(Emergent.Toolbench.UI.EditableService.EditOperation,System.Windows.Forms.Control)">
            <summary>
            Performs the operation on the control.
            </summary>
            <param name="op">The operation to perform.</param>
            <param name="control">The control to perform the operation on.
            </param>
        </member>
        <member name="T:Emergent.Toolbench.UI.EditableService.ExtensionPoints">
            <summary>
            A list of extension points found in this plug-in.
            </summary>
        </member>
        <member name="F:Emergent.Toolbench.UI.EditableService.ExtensionPoints.EditableAdapter">
            <summary>
            The <see cref="F:Emergent.Toolbench.UI.EditableService.ExtensionPoints.EditableAdapter"/> extension point provides a way
            for plug-ins to add new adapters for existing controls that allow
            the edit menu to interact with them.
            </summary>
        </member>
        <member name="T:Emergent.Toolbench.UI.EditableService.EditMenuUtility">
            <summary>
            A utility class for the edit menu factories that contains some shared
            pieces of functionality.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.UI.EditableService.EditMenuUtility.CanFocusedControlPerform(Emergent.Toolbench.UI.EditableService.EditOperation)">
            <summary>
            Checks if the currently focused control can perform the provided
            edit operation.
            </summary>
            <param name="op">The edit operation to check.</param>
            <returns><c>true</c> if the focused control can perform the 
            operation; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Emergent.Toolbench.UI.EditableService.EditMenuUtility.FocusedControlPerform(Emergent.Toolbench.UI.EditableService.EditOperation)">
            <summary>
            This will cause the currently focused control to perform the
            edit operation.
            </summary>
            <param name="op">The edit operation to perform.</param>
        </member>
        <member name="T:Emergent.Toolbench.UI.EditableService.IEditable">
            <summary>
            The <see cref="T:Emergent.Toolbench.UI.EditableService.IEditable"/> interface, if implemented by a control
            indicates that the control supports interaction with the Edit Menu.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.UI.EditableService.IEditable.CanPerform(Emergent.Toolbench.UI.EditableService.EditOperation)">
            <summary>
            Returns a value indicating if the control can currently perform
            the operation.
            </summary>
            <param name="op">The operation that might be performed.</param>
            <returns><c>true</c> if the control can perform the operation;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Emergent.Toolbench.UI.EditableService.IEditable.Perform(Emergent.Toolbench.UI.EditableService.EditOperation)">
            <summary>
            Performs the operation on the control.
            </summary>
            <param name="op">The operation to perform.</param>
        </member>
        <member name="T:Emergent.Toolbench.UI.EditableService.Plugin">
            <summary>
            This is the plug-in class for the editable service.  This will start
            the <see cref="T:Emergent.Toolbench.UI.EditableService.EditableAdapterService"/>.
            </summary>
        </member>
        <member name="M:Emergent.Toolbench.UI.EditableService.Plugin.Start">
            <summary>
            Called when the plug-in assembly is first loaded.  This will start
            the <see cref="T:Emergent.Toolbench.UI.EditableService.EditableAdapterService"/>.
            </summary>
            <param name="descriptor">The plug-in descriptor for this plug-in.
            </param>
        </member>
        <member name="T:Emergent.Toolbench.UI.EditableService.EditOperation">
            <summary>
            The <see cref="T:Emergent.Toolbench.UI.EditableService.EditOperation"/> enum contains operations that the 
            edit menu understands how to perform.
            </summary>
        </member>
    </members>
</doc>
